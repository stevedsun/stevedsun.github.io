<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>技术文档 - Tag - 電波障害</title><link>https://sund.site/tags/%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/</link><description>技术文档 - Tag - 電波障害</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Tue, 23 Aug 2022 22:18:00 +0800</lastBuildDate><atom:link href="https://sund.site/tags/%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/" rel="self" type="application/rss+xml"/><item><title>规范的错误信息</title><link>https://sund.site/posts/2022/write-error-message/</link><pubDate>Tue, 23 Aug 2022 22:18:00 +0800</pubDate><author>Steve Sun</author><guid>https://sund.site/posts/2022/write-error-message/</guid><description><![CDATA[<p></p>
<p>本文整理了 Google 官方文档中关于错误信息的编写规范。适用于有一定编程经验，尤其从事业务开发的程序员。</p>
<p>通过本文你可以：</p>
<ul>
<li>写出风格统一、用户友好的错误信息</li>
<li>提高代码的可维护性，降低沟通成本</li>
</ul>
<p>Google 文档原文：<a href="https://developers.google.com/tech-writing/error-messages" target="_blank" rel="noopener noreffer ">Error Messages</a></p>
<h2 id="基本原则">基本原则</h2>
<ul>
<li>错误不应该被掩盖 (Don&rsquo;t fail silently)</li>
<li>遵循语言的规范 (Follow the programming language guides)</li>
<li>实现完整的错误模型 (Implement the full error model)
<div class="details admonition tip open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-lightbulb fa-fw" aria-hidden="true"></i>Tips<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content">包含错误码、错误内容、错误原因、处理方法</div>
        </div>
    </div></li>
<li>避免吞掉问题根源 (Avoid swallowing the root cause)</li>
<li>输出错误代码 (Log the error codes)</li>
<li>快速抛出错误 (Raise errors immediately)</li>
</ul>
<h2 id="解释错误原因">解释错误原因</h2>
<p>使用错误信息给用户解释原因时，应该遵循：</p>
<ul>
<li>具体，准确，避免含糊。</li>
<li>在错误信息中包含用户输入的错误内容。如果输入的内容特别长：
<ul>
<li>渐进地显示，提供一个可展开详情的省略号。</li>
<li>截断内容，只保留必要部分。</li>
</ul>
</li>
<li>明确告诉用户，系统的要求和限制</li>
</ul>
<h2 id="解释如何处理问题">解释如何处理问题</h2>
<ul>
<li>对用户来说，错误信息必须有可操作性。也就是说，在解释了问题的原因后，说明如何解决这个问题。</li>
<li>最好给用户提供一个例子。</li>
</ul>
<h2 id="清晰的错误信息">清晰的错误信息</h2>
<ul>
<li>简明扼要，使用主动语态。（这方面内容可以参考<a href="https://sund.site/posts/2022/technical-writing/" target="_blank" rel="noopener noreffer ">技术文档写作指南</a>）</li>
<li>避免出现双重否定句式。</li>
<li>让目标用户能够理解，即根据用户掌握的知识，提供有帮助的内容。</li>
<li>专业术语应前后一致。</li>
</ul>
<h2 id="错误信息的格式">错误信息的格式</h2>
<ul>
<li>使用链接提供更多信息。</li>
<li>渐进式呈现错误信息（比如可以展开详情的省略号）。</li>
<li>错误提示应该贴近错误发生的位置。</li>
<li>避免错误信息滥用字体或颜色。</li>
<li>使用正确的语气:
<ul>
<li>不要告诉用户错在哪，告诉用户应该做什么。</li>
<li>避免责备、幽默、道歉的语气。</li>
</ul>
</li>
</ul>
<h2 id="对后端开发的建议">对后端开发的建议</h2>
<ul>
<li>错误要有错误码</li>
<li>可以在错误信息结构里提供一个指向错误解释的 ID，如：
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-json" data-lang="json"><span class="p">{</span>
  <span class="nt">&#34;error&#34;</span><span class="p">:</span> <span class="s2">&#34;Bad Request - Request is missing a required parameter: -collection_name. Update parameter and resubmit. Issue Reference Number BR0x0071&#34;</span>
<span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div></li>
</ul>
<hr>

]]></description></item><item><title>技术文档写作指南</title><link>https://sund.site/posts/2022/technical-writing/</link><pubDate>Sun, 21 Aug 2022 15:29:00 +0800</pubDate><author>Steve Sun</author><guid>https://sund.site/posts/2022/technical-writing/</guid><description><![CDATA[<p>本文内容摘录自 <a href="https://developers.google.com/tech-writing/overview" target="_blank" rel="noopener noreffer ">Technical Writing</a> （谷歌技术文档写作指南）的第一部分。</p>
<p>本文适用于想要提高技术文档写作、技术领域日常沟通能力的读者，对于一些商务的、非文学性质的英语办公场景沟通，也能起一定帮助作用。</p>
<p>阅读过本文的读者可以：</p>
<ul>
<li>提高在日常办公中清晰、准确、客观地传达概念和逻辑的能力。</li>
<li>掌握英文技术文档写作规范。</li>
</ul>
<h2 id="词汇words">词汇（Words）</h2>
<ul>
<li>
<p>对于已有的术语，不要重复发明新的词汇，可以用一个链接指向解释它的页面。</p>
</li>
<li>
<p>如果有必要，可以在文档中直接定义新的术语，但如果术语比较多，最好建立一个术语对照表。</p>
</li>
<li>
<p>文档各处出现的术语应该保持一致的名称或缩写。</p>
</li>
<li>
<p>关于缩写：第一次出现要用<strong>粗体</strong>写全称并用括号指明缩写，之后的文章中不要反复混用全称和缩写。</p>
<div class="details admonition tip open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-lightbulb fa-fw" aria-hidden="true"></i>举例<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content">This document is for engineers who are new to the <strong>Telekinetic Tactile Network</strong> (<strong>TTN</strong>) or need to understand how to order TTN replacement parts through finger motions.</div>
        </div>
    </div>
</li>
<li>
<p>如果一个术语出现频率不高，请不要使用缩写。</p>
</li>
<li>
<p>使用缩写的情况有：1. 缩写明显更简短；2. 该术语出现频率很高。</p>
</li>
<li>
<p>谨慎使用代名词（It，they，that 等）。</p>
<ul>
<li>代名词一定要出现在它所指代的名词之后。</li>
<li>如果代名词远离它指代的名词（超过 5 个单词），就不用代名词。</li>
<li>在名词和代名词之间出现第二个名词，会产生歧义，应避免这种情况。</li>
</ul>
</li>
</ul>
<p>类比计算机编程语言：</p>
<p>缩写 = 对术语的一层抽象。读者需要花费更多脑力去把它展开成对应的名词。</p>
<p>代名词 = 指针。它容易引起歧义，所以要避免在读者大脑中引起「空指针」错误。</p>
<h2 id="主动语态active-voice">主动语态（Active voice）</h2>
<ul>
<li>技术文档中应尽量使用主动语态。
<ul>
<li>被动语态在读者大脑中需要额外的加工转换才能被理解。</li>
<li>被动语态用来间接地表达行为，容易引起混乱。</li>
<li>有些被动语态省略了行为主体，会迫使读者猜测主语是谁。</li>
</ul>
</li>
<li>如果使用被动语态，应正确使用过去分词的各种形式和介词（如 as，by）。</li>
<li>祈使句的动词（命令式动词）应该使用主动语态。</li>
<li>科技论文中经常出现被动语态（如 It has been suggested that&hellip;），这种写法并不能传递更多信息，很多科学期刊也开始鼓励使用主动语态。</li>
</ul>
<h2 id="炼句clear-sentencesshort-sentences">炼句（Clear sentences，Short sentences）</h2>
<ul>
<li>
<p>选择准确、有力、具体的动词。减少不精确的、软弱的或通用的动词。
<div class="details admonition tip open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-lightbulb fa-fw" aria-hidden="true"></i>错误的例子<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content">is，are，occur，happen</div>
        </div>
    </div></p>
</li>
<li>
<p>Be 动词和通用动词可以用，但它们通常是一些不良写作习惯的信号，如</p>
<ul>
<li>句子中缺少行为主体</li>
<li>句子使用了被动语态</li>
</ul>
</li>
<li>
<p>减少 there be 句式，把 there be 句式中的主语和动词提炼出来
<div class="details admonition tip open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-lightbulb fa-fw" aria-hidden="true"></i>错误的例子<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content"><p>避免这样用：There is no guarantee that the updates will be received in sequential order.</p>
<p>应改为：Clients might not receive the updates in sequential order.</p>
</div>
        </div>
    </div></p>
</li>
<li>
<p>尽量少用或不用形容词和副词，因为这些词汇过于主观。</p>
</li>
<li>
<p>尽量使用短的句子。短句比长句更易读、易维护、不易犯错。</p>
<ul>
<li>每一个句子只表达一个观点。</li>
<li>长句尽量转换成列表。</li>
<li>用简洁表达，去掉多余的词汇</li>
<li>减少从句。</li>
<li>正确区分 that 和 which 从句。</li>
</ul>
</li>
</ul>
<h2 id="列表和表格lists-and-tables">列表和表格（Lists and tables）</h2>
<ul>
<li>
<p>正确区分有序列表（数字列表，numbered lists）和无序列表（圆点列表，bulleted lists）。</p>
</li>
<li>
<p>把句内列举的项（embedded list）转换成无序列表，如：</p>
<div class="details admonition tip open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-lightbulb fa-fw" aria-hidden="true"></i>举例<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content"><p>The llamacatcher API enables callers to create and query llamas, analyze alpacas, delete vicugnas, and track dromedaries.</p>
<p>应换成：</p>
<p>The llamacatcher API enables callers to do the following:</p>
<ul>
<li>Create and query llamas.</li>
<li>Analyze alpacas.</li>
<li>Delete vicugnas.</li>
<li>Track dromedaries.</li>
</ul>
</div>
        </div>
    </div>
</li>
<li>
<p>保持列表项之间的平行关系（避免把不同层级的东西混在一列）。</p>
</li>
<li>
<p>在使用有序列表时，用一个命令式动词开头，如：</p>
<div class="details admonition tip open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-lightbulb fa-fw" aria-hidden="true"></i>举例<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content"><ol>
<li>Download the Frambus app from Google Play or iTunes.</li>
<li>Configure the Frambus app&rsquo;s settings.</li>
<li>Start the Frambus app.</li>
</ol>
</div>
        </div>
    </div>
</li>
<li>
<p>只有列表每一个项都是句子时，才使用首字母大写和句号，否则不需要。</p>
</li>
<li>
<p>使用表格应遵循的原则：</p>
<ul>
<li>每列都有标题</li>
<li>单元格字数尽量少</li>
<li>尽量保证每一列的数据类型相同</li>
</ul>
</li>
<li>
<p>表格或列表的前面，用一句话来介绍上下文</p>
</li>
</ul>
<h2 id="段落paragraphs">段落（Paragraphs）</h2>
<ul>
<li>以中心句开头。</li>
<li>每段只围绕一个主题写作，不要包含其他段落中出现的主题内容。</li>
<li>三到五句话一段，不要超过七句。</li>
<li>段落能够解释清楚三件事： what，why，how。</li>
</ul>
<h2 id="读者audience">读者（Audience）</h2>
<blockquote>
<p>好的文档 = 读者要完成任务所需的知识和技能 - 读者已有的知识和技能</p>
</blockquote>
<ul>
<li>
<p>定义读者的身份（开发者、科学家、技术经理、未毕业的工程专业学生、毕业生、非技术人员……）。</p>
</li>
<li>
<p>了解目标读者对不同知识的掌握程度。</p>
</li>
<li>
<p>确定读者需要什么，读过文档能学到什么。比如在设计规范开头这样写：
<div class="details admonition tip open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-lightbulb fa-fw" aria-hidden="true"></i>举例<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content">After reading the design spec, the audience will learn the following: …</div>
        </div>
    </div></p>
</li>
<li>
<p>满足读者：</p>
<ul>
<li>解释必要的词汇和概念。</li>
<li>对新手友好。</li>
<li>使用简单的英语词汇。</li>
<li>对不同文化、语言环境的读者友好，避免使用成语或俗语。</li>
</ul>
</li>
</ul>
<h2 id="文档documents">文档（Documents）</h2>
<ul>
<li>声明文档的适用场景（scope）。
<ul>
<li>最好能声明哪些场景不适用（non-scope），不适合哪些读者阅读。这不仅对读者有用，对写作者也能限制其写作的范围。</li>
</ul>
</li>
<li>声明目标读者。
<ul>
<li>最好能指出读者在阅读前应该具备的知识和经验。</li>
</ul>
</li>
<li>在开头部分概括文档的关键点
<ul>
<li>可以通过比较、对比旧观点的手法，让读者明白你要表达的新观点。</li>
</ul>
</li>
<li>按读者需要组织文档格式。
<div class="details admonition tip open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-lightbulb fa-fw" aria-hidden="true"></i>好的大纲举例<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content"><ol>
<li>Overview of the algorithm
<ul>
<li>Compare and contrast with quicksort, including Big O comparisons
<ul>
<li>Link to Wikipedia article on quicksort</li>
</ul>
</li>
<li>Optimal datasets for the algorithm</li>
</ul>
</li>
<li>Implementing the algorithm
<ul>
<li>Implementation in pseudocode</li>
<li>Implementation tips, including common mistakes</li>
</ul>
</li>
<li>Deeper analysis of algorithm - Edge cases - Known unknowns</li>
</ol>
</div>
        </div>
    </div></li>
</ul>
<h2 id="标点符号punctuation">标点符号（Punctuation）</h2>
<div class="details admonition note open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-pencil-alt fa-fw" aria-hidden="true"></i>Note<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content">这部分原文涉及英文标点符号的用法，大部分和汉语规则近似，略过不译。以下是我在排版方面的经验：
大多数中国人对英文排版易错的地方是空格的滥用。可以参考这篇文章： <a href="https://zhuanlan.zhihu.com/p/110266694" target="_blank" rel="noopener noreffer ">英文标点要如何排版？</a>。</div>
        </div>
    </div>
<p>概括起来：</p>
<ul>
<li><code>, ; : . ? !</code> 这些符号后加空格</li>
<li><code>() '' &quot;&quot;</code> 这些成对的符号左右加空格，内部不加空格</li>
<li><code>/ - _</code>不加空格</li>
</ul>
<h2 id="总结">总结</h2>
<ul>
<li>统一使用术语。</li>
<li>避免模棱两可的代名词。</li>
<li>主动语态优于被动语态。</li>
<li>选择具体的动词而不是模糊的动词。</li>
<li>每句话集中在一个想法上。</li>
<li>将一些长句子转化为列表。</li>
<li>消除不必要的词。</li>
<li>有顺序时使用有序（数字）列表，无顺序时使用无序（圆点）列表。</li>
<li>保持列表项目平行（概念层次相同）。</li>
<li>用祈使（命令性）的词作为有序列表项的开头。</li>
<li>适当地介绍列表和表格。</li>
<li>开宗明义，明确段落的中心点。</li>
<li>将每一段落集中在一个主题上。</li>
<li>确定你的读者需要学习什么。</li>
<li>使文档适应读者。</li>
<li>在文档的开头指出关键信息。</li>
</ul>
<h2 id="延伸阅读资料">延伸阅读资料</h2>
<ul>
<li><a href="https://docsfordevelopers.com/" target="_blank" rel="noopener noreffer ">Docs for Developers</a></li>
<li><a href="https://www.oreilly.com/library/view/software-engineering-at/9781492082781/" target="_blank" rel="noopener noreffer ">Software Engineering at Google</a></li>
<li><a href="https://about.gitlab.com/handbook/engineering/ux/technical-writing/fundamentals/" target="_blank" rel="noopener noreffer ">Gitlab Technical Writing Fundamentals courese</a></li>
</ul>
<hr>

]]></description></item></channel></rss>