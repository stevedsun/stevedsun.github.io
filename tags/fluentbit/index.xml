<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>fluentbit - Tag - 電波障害</title><link>https://sund.site/tags/fluentbit/</link><description>fluentbit - Tag - 電波障害</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Sun, 08 May 2022 14:00:00 +0800</lastBuildDate><atom:link href="https://sund.site/tags/fluentbit/" rel="self" type="application/rss+xml"/><item><title>Building a file parser</title><link>https://sund.site/posts/2022/2022-5-8_lexer_design/</link><pubDate>Sun, 08 May 2022 14:00:00 +0800</pubDate><author>Steve Sun</author><guid>https://sund.site/posts/2022/2022-5-8_lexer_design/</guid><description>Last week, after reading this article - How to Write a Lexer in Go, I found that it is not so difficult to design a configuration file parser by this article&amp;rsquo;s mind-set. Then I tried to write a fluent-bit configuration parser, finally got this Fluent-Bit configuration parser for Golang.
In this article, I want to introduce how to parse Fluent-bit configuration .conf file, and the thinking behind it.
Fluent-bit configuration format and schema 1 2 3 4 5 6 [FIRST_SECTION] Key1 some value Key2 another value [SECOND_SECTION] KeyN 3.</description></item></channel></rss>