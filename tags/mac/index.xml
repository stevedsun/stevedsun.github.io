<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Mac - Tag - 電波障害</title><link>https://sund.site/tags/mac/</link><description>Mac - Tag - 電波障害</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Sun, 24 Nov 2019 16:11:00 +0800</lastBuildDate><atom:link href="https://sund.site/tags/mac/" rel="self" type="application/rss+xml"/><item><title>为 Mac OS 10.15 开启 HiDPI，让 2K 显示器更舒适</title><link>https://sund.site/posts/2019/macbook-hidpi/</link><pubDate>Sun, 24 Nov 2019 16:11:00 +0800</pubDate><author>Steve Sun</author><guid>https://sund.site/posts/2019/macbook-hidpi/</guid><description><![CDATA[<p>以前手抖买了台 Dell P2416D 显示器，接上 Macbook 发现原生的分辨率设置在 2K 显示器上字体很小，换成 1080P 分辨率显示效果又特别模糊。上网查了一下发现可以为 Macbook 强行开启 HiDPI。下文的教程结合了 Github 上用户<a href="https://github.com/xzhih" target="_blank" rel="noopener noreffer ">ZeRo° Xu</a> 在 <a href="https://github.com/xzhih/one-key-hidpi" target="_blank" rel="noopener noreffer ">一键开启HiDPI脚本</a> 里的 <a href="https://github.com/syscl/Enable-HiDPI-OSX/issues/49" target="_blank" rel="noopener noreffer ">Github Issue</a> 和一篇博文 <a href="https://www.smslit.top/2019/01/02/mac_hidpi/" target="_blank" rel="noopener noreffer ">《为 mac 连接的 2k 显示器开启 HiDPI》</a>。</p>
<h2 id="什么是-hidpi">什么是 HiDPI</h2>
<p>引用自 Github 用户 <a href="https://github.com/xzhih" target="_blank" rel="noopener noreffer ">ZeRo° Xu</a> ：</p>
<blockquote>
<p>它使用横纵 2 个物理像素也就是 4 个物理像素来显示 1 个像素区域，结果就是图像的细节得到翻倍、更清晰、边缘更平滑。</p>
<p>拿 13 寸的 MacBook Pro 举例，它的屏幕物理分辨率是 2560 x 1600，所以原生的 HIDPI 分辨率就是 1280x800。更高的一档 1440x900 hidpi 缩放分辨率，则是虚拟出一个 2880x1800 的分辨率，再进行软缩放输入。所以你能发现苹果的电脑总是有很高的分辨率。</p>
<p>好了，既然你的屏幕是 1080p，本身就没有那么多像素去合成 HIDPI，如果以原生的显示计算，你这屏幕的 1080p 分辨率应该是 960x540，这么低的分辨率你是没法用的，所以就有了这个脚本。</p>
<p>这个脚本的功能是虚拟出比你的屏幕物理分辨率更高的假分辨率，也就是你看到的 3360 x 1888，这样你就可以使用 1680 x 944 hidpi 这个缩放分辨率了。</p>
<p>如果你要开启 1080p 的 HIDPI 分辨率，就虚拟一个 3840 x 2160 的假分辨率，然后 MacOS 会使用 4 个像素来显示 1 个像素区域，也就是和你物理分辨率一样的 1080p 分辨率，开不开启看起来没任何区别，最大的效果就是显卡压力增大系统变卡、截图可以得到高分辨率图像。</p>
</blockquote>
<h2 id="自动配置-hidpi">自动配置 HiDPI</h2>
<p>上文 <a href="https://github.com/xzhih/one-key-hidpi" target="_blank" rel="noopener noreffer ">链接</a> 里提到一键配置脚本，你不妨先按照脚本的步骤开启 HiDPI 试试。但是脚本并没有适配所有显示器的情况（至少我的 Dell P2416D 使用后无效），所以就有了下面的步骤。</p>
<h2 id="手动配置-hidpi">手动配置 HiDPI</h2>
<p>本教程测试环境：</p>
<ul>
<li>笔记本：MacBook Pro (Retina, 15-inch, Mid 2015)</li>
<li>显示器：Dell P2416D</li>
<li>操作系统：MacOS Catalina (Version 10.15.1)</li>
</ul>
<h3 id="0-安装-rdm">0. 安装 RDM</h3>
<p>相信很多人已经装过这个工具了，它是用来修改显示分辨率的，如果没装，请在<a href="https://avi.alkalay.net/software/RDM/" target="_blank" rel="noopener noreffer ">RDM下载页面</a>安装它。</p>
<h3 id="1-关闭-mac-的-sip">1. 关闭 Mac 的 SIP</h3>
<p>SIP 是苹果公司为防止你胡乱篡改系统文件用的保护机制，请先按照下面步骤把它关闭，以便后续操作：</p>
<ol>
<li>关机（最好先手机拍个照把这4步记录下来）</li>
<li>按<code>command（⌘）+ R</code>+电源键开机，自动进入恢复模式</li>
<li>选择上边菜单栏的<code>实用工具</code>中的<code>终端</code></li>
<li>输入命令<code>csrutil disable</code></li>
</ol>
<p>最后终端显示 「Successfully……」 等一大堆文字就说明你成功了。你可以输入<code>reboot</code>重启。等下文的全部设置都完成后，你如果想恢复 SIP，就重复步骤 1 到 3，在第 4 步输入<code>csrutil enable</code>就好了。</p>
<h3 id="2-开启-macos-的-hidpi-选项">2. 开启 macOS 的 HiDPI 选项</h3>
<p>再次重启后进入系统，打开终端输入</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-fallback" data-lang="fallback">sudo defaults write /Library/Preferences/com.apple.windowserver.plist DisplayResolutionEnabled -bool true
</code></pre></td></tr></table>
</div>
</div><h3 id="3-查询你的外接显示器的编号">3. 查询你的外接显示器的编号</h3>
<p>这一步相当重要，先介绍两个命令</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-fallback" data-lang="fallback">ioreg -l | grep &#34;DisplayVendorID&#34;
ioreg -l | grep &#34;DisplayProductID&#34;
</code></pre></td></tr></table>
</div>
</div><p>这两条命令用来查询你的显示器供应商 ID <code>DisplayVendorID</code> 和产品 ID <code>DisplayProductID</code>。接下来你要找到你的显示器对应的<code>DisplayVendorID</code>和<code>DisplayProductID</code>：</p>
<ol>
<li>拔掉显示器的 HDMI 或者 DP 线</li>
<li>分别输入上面两个命令之后<code>return(↩)</code>，每个命令会返回一个带有数字的结果。那个数字就是 macbook 默认的<code>DisplayVendorID</code>和<code>DisplayProductID</code>了</li>
<li>接入显示器</li>
<li>再分别输入那两个命令，每个命令会分别返回两条带有数字的结果。对比刚才 macbook 默认的结果，另一个数字就是你显示器的<code>DisplayVendorID</code>和<code>DisplayProductID</code>了</li>
<li>把这两个数字分别转成对应的 16 进制数，用这个<a href="https://tool.oschina.net/hexconvert" target="_blank" rel="noopener noreffer ">进制转换工具</a></li>
</ol>
<p>现在，回到桌面，新建一个文件夹命名为<code>DisplayVendorID-[你刚才查到的DisplayVendorID的16进制数]</code>，例如<code>DisplayVendorID-10ac</code>。</p>
<p>之后在这个刚建好的文件夹下增加一个文件，命名为<code>DisplayProductID-[你刚才查到的DisplayProductID的16进制数]</code>，例如<code>DisplayProductID-a0c3</code>。</p>
<h3 id="4-为你的显示器生成-plist-文件">4. 为你的显示器生成 plist 文件</h3>
<p>到 <a href="https://comsysto.github.io/Display-Override-PropertyList-File-Parser-and-Generator-with-HiDPI-Support-For-Scaled-Resolutions/" target="_blank" rel="noopener noreffer ">这个网站</a> ，在左侧的空里分别输入显示器型号，DisplayProductID 和 DisplayVendorID，注意填16进制的数字，并且检查下后边10进制的数字是不是和你刚才命令查到的一致。如果需要添加自己额外的分辨率，直接在下边新建一条分辨率配置就行。最后，复制右边生成 XML 格式文本，粘贴到刚才新建的文件里。（也可以直接从网站下载文件，去掉文件名后缀 <code>.plist</code> ）</p>
<p></p>
<p>XML 文件类似下边这样：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-xml" data-lang="xml"><span class="cp">&lt;?xml version=&#34;1.0&#34; encoding=&#34;UTF-8&#34;?&gt;</span>
<span class="cp">&lt;!DOCTYPE plist PUBLIC &#34;-//Apple//DTD PLIST 1.0//EN&#34; &#34;http://www.apple.com/DTDs/PropertyList-1.0.dtd&#34;&gt;</span>
<span class="nt">&lt;plist</span> <span class="na">version=</span><span class="s">&#34;1.0&#34;</span><span class="nt">&gt;</span>
<span class="nt">&lt;dict&gt;</span>
    <span class="nt">&lt;key&gt;</span>DisplayProductID<span class="nt">&lt;/key&gt;</span>
    <span class="nt">&lt;integer&gt;</span>41156<span class="nt">&lt;/integer&gt;</span>
    <span class="nt">&lt;key&gt;</span>DisplayVendorID<span class="nt">&lt;/key&gt;</span>
    <span class="nt">&lt;integer&gt;</span>4268<span class="nt">&lt;/integer&gt;</span>
    <span class="nt">&lt;key&gt;</span>scale-resolutions<span class="nt">&lt;/key&gt;</span>
    <span class="nt">&lt;array&gt;</span>
        <span class="nt">&lt;data&gt;</span>AAAKAAAABaAAAAABACAAAA==<span class="nt">&lt;/data&gt;</span>
        <span class="nt">&lt;data&gt;</span>AAAFAAAAAtAAAAABACAAAA==<span class="nt">&lt;/data&gt;</span>
        <span class="nt">&lt;data&gt;</span>AAAPAAAACHAAAAABACAAAA==<span class="nt">&lt;/data&gt;</span>
        <span class="nt">&lt;data&gt;</span>AAAHgAAABDgAAAABACAAAA==<span class="nt">&lt;/data&gt;</span>
        <span class="nt">&lt;data&gt;</span>AAAMgAAABwgAAAABACAAAA==<span class="nt">&lt;/data&gt;</span>
        <span class="nt">&lt;data&gt;</span>AAAGQAAAA4QAAAABACAAAA==<span class="nt">&lt;/data&gt;</span>
        <span class="nt">&lt;data&gt;</span>AAAKAgAABaAAAAABACAAAA==<span class="nt">&lt;/data&gt;</span>
        <span class="nt">&lt;data&gt;</span>AAAKrAAABgAAAAABACAAAA==<span class="nt">&lt;/data&gt;</span>
        <span class="nt">&lt;data&gt;</span>AAAFVgAAAwAAAAABACAAAA==<span class="nt">&lt;/data&gt;</span>
    <span class="nt">&lt;/array&gt;</span>
<span class="nt">&lt;/dict&gt;</span>
<span class="nt">&lt;/plist&gt;</span>
</code></pre></td></tr></table>
</div>
</div><h3 id="4-复制-plist-配置文件到系统配置目录">4. 复制 plist 配置文件到系统配置目录</h3>
<p>这一步就是把刚才新建的配置文件复制到你系统目录里，你直接复制通常会提示你系统目录是「只读」的，不允许你胡作非为。所以你先要在终端执行下面的命令：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-shell" data-lang="shell">sudo mount -uw /
</code></pre></td></tr></table>
</div>
</div><p>这样，你就可以复制到系统的文件夹了。（这个命令重启后失效）</p>
<p>接下来打开系统文件夹<code>/System/Library/Displays/Contents/Resources/Overrides/</code>，你会发现一大堆跟你刚才文件夹命名相似的目录。把你新建的文件夹丢进去，和它们混在一起，假装它原来就是其中一员。重启。</p>
<h3 id="5-修改分辨率">5. 修改分辨率</h3>
<p>重启之后又进入系统，首先打开 RDM，你会在菜单栏看见它：</p>
<p></p>
<p>Main Display 和 Display 2 就分别是你的外接显示器和 macbook 的显示器分辨率设置（位置有可能对掉，自己尝试一下）。带有 ⚡️ 符号的分辨率设置项就是开启 HiDPI 后新增出来的。如果你像我一样是 2K 显示器，可以给显示器选择<code>1920x1080⚡️</code>那个配置。是不是比原生分辨率的 UI 和字体更大更清晰了。</p>
<h2 id="小结">小结</h2>
<p>本文教你强行开启 macbook 的 HiDPI 设置，并针对 2K 显示器新增了配置文件到系统配置目录里，最后用 RDM 自由设置适合你显示器的分辨率。至于 HiDPI 的原理，请自行搜索，此处不再赘述。</p>
<p>希望本文对你有帮助，也欢迎你留言反馈。</p>
]]></description></item><item><title>macbook安装ubuntu</title><link>https://sund.site/posts/2013/macbook_ubuntu/</link><pubDate>Fri, 04 Jan 2013 00:00:00 +0000</pubDate><author>Steve Sun</author><guid>https://sund.site/posts/2013/macbook_ubuntu/</guid><description><![CDATA[<p><strong>注意，ubuntu和xubuntu安装上有一定差别，请严格按照你选择的系统版本流程安装</strong></p>
<h3 id="ubuntu">ubuntu</h3>
<h3 id="准备工作">准备工作</h3>
<h5 id="分区">分区</h5>
<p>这一步可以用命令行实现，也可以在mac下直接用磁盘工具分区，初学者建议后者。有经验的朋友可以在网上查询diskutils的用法，这是mac提供的分区工具</p>
<p>使用磁盘工具，打开左侧最上边磁盘位置（不是macosx，而是整个硬盘）的选项，右边会出现<code>分区</code>标签。选择分区，你可以用鼠标拖动轻松将macos的一部分划分给ubuntu使用。分区格式可以选择mac日志文件。其实选什么都一样，等会还要重新格式化。</p>
<h4 id="把iso镜像转化为苹果电脑识别的img镜像">把iso镜像转化为苹果电脑识别的img镜像</h4>
<pre><code>hdiutil convert /path/to/ubuntu.iso -format UDRW -o /path/to/target.img
</code></pre>
<p>命令中<code>path/to/ubuntu.iso</code>是你下载的iso路径，<code>path/to/target.img</code>自然是你要保存成img的路径</p>
<h4 id="插入u盘刻录镜像">插入U盘，刻录镜像</h4>
<p>先运行如下命令查询你U盘的设备名</p>
<pre><code>diskutil list
</code></pre>
<p>这里假设U盘是disk1，执行</p>
<pre><code>diskutil unmountDisk /dev/disk1
</code></pre>
<p>接下来执行命令刻录，</p>
<pre><code>sudo dd if=/path/to/downloaded.img of=/dev/disk1 bs=1m
</code></pre>
<p>ubuntu官网针对上一条命令可能出现的两种错误提示给出了解决办法：</p>
<ol>
<li>
<p>If you see the error dd: Invalid number &lsquo;1m&rsquo;, you are using GNU dd. Use the same command but replace bs=1m with bs=1M.</p>
</li>
<li>
<p>If you see the error dd: /dev/disk1: Resource busy, make sure the disk is not in use. Start the &lsquo;Disk Utility.app&rsquo; and unmount (don&rsquo;t eject) the drive.</p>
</li>
</ol>
<p>好了，刻完就可以重启安装了。重启后按住<code>option</code>会看到一个refit命名的移动设备图标，点进去就开始安装了。</p>
<h4 id="安装过程">安装过程</h4>
<p>安装过程可以参考网上其他人的帖子。一般有两种方式</p>
<ol>
<li>选择<code>ubuntu和mac os x共存</code>，系统会自动被安装到空闲分区。</li>
<li>选择<code>其他选项</code>，可以自己手动分区，我一般是选这个来手动分区。</li>
</ol>
<p>假设你选了<code>其他选项</code>就会进入分区的窗口，这时你就会看到所有磁盘分区的情况，刚才在mac下给ubuntu预先分好一块空闲分区也在其中，名字可能叫disk02，或者disk03什么的。
接下来要进行四次分区。这一段分区方法参考了百度经验上一个网友的教程，我进行了2处修改，原帖地址<a href="http://jingyan.baidu.com/article/60ccbceb18624464cab197ea.html">http://jingyan.baidu.com/article/60ccbceb18624464cab197ea.html</a></p>
<p>第一次分区：</p>
<pre><code>点你刚才留出来的“空闲”分区，点“+”，进行如下设置：
挂载点：“/”
大小：22000MB
新分区的类型：主分区
新分区的位置：空间起始位置
用于：EXT4日志文件系统
</code></pre>
<p>第二次分区：</p>
<pre><code>“空闲”处，继续点“+”，如下设置，
挂载点：（不设置）
大小：4096MB
新分区的类型：逻辑分区
新分区的位置：空间起始位置
用于：交换空间
</code></pre>
<p>第三次分区：</p>
<pre><code>“空闲”处，继续点“+”，如下设置，
挂载点：/boot
大小：200MB
新分区的类型：逻辑分区
新分区的位置：空间起始位置
用于：EXT4日志文件系统
</code></pre>
<p>第四次分区：</p>
<pre><code>“空闲”处，继续点“+”，如下设置，
挂载点：/home
大小：（剩余全部空间，剩下显示多少，就多少）
新分区的类型：逻辑分区
新分区的位置：空间起始位置
用于：EXT4日志文件系统
</code></pre>
<p>分区设置完毕后，下方还有一项“安装启动引导器的设备”，macbookpro用户需要选择/boot这个分区所在磁盘位置。</p>
<h3 id="开机引导程序refit">开机引导程序rEFIT</h3>
<p>安装完ubuntu，重启在mac下下载安装rEFIt。安装好后在终端里输入<code>/efi/refit/. enable-always.sh</code>启动rEFIt。重启，你就会看到ubuntu的选项。</p>
<h3 id="xubuntu估计lubuntu和kubuntu也应该适用仅是猜想">Xubuntu(估计Lubuntu和Kubuntu也应该适用，仅是猜想。)</h3>
<h3 id="准备工作-1">准备工作</h3>
<h4 id="如何刻录镜像到移动设备">如何刻录镜像到移动设备</h4>
<p>这个问题很重要，如果你下载了iso格式的Xubuntu系统镜像，
你需要将该镜像不经过任何转换的完整刻录到移动设备或光盘上
（我使用的是unetbootin 这个软件，开源，跨平台，操作简便）。
注意，绝对不可以将iso格式转换成img（mac镜像）后刻录。
这样会导致ubuntu部分版本无法安装grub引导器。</p>
<h4 id="开机引导程序refit-1">开机引导程序rEFIt</h4>
<p>安装完的系统无法被mac直接引导，所以需要安装rEFIt引导。如果不想要安装它，
可以参考下边附录1里的安装方法。重新修改引导文件。</p>
<h4 id="安装过程-1">安装过程</h4>
<ol>
<li>在官网下载xubuntu镜像，使用uneetbootin刻录到设备
上(mac版的unetbootin貌似刻录iso有问题，可以在windows上下载该软件使用)。</li>
<li>重启，开机界面按住<code>option</code>键，有个windows命名的移动设备图标，选中进入。</li>
<li>安装过程不敷述, 装后重启</li>
<li>从mac进入，安装rEFIt，在shell里运行<code>/efi/refit/. enable-always.sh</code>启动rEFIt</li>
<li>重启，出现两个图标，苹果代表mac，企鹅代表linux。至此，完成安装过程。</li>
</ol>
<h2 id="ubuntu或xubuntu安装后的一些配置">ubuntu或Xubuntu安装后的一些配置</h2>
<p>打开系统配置文件，</p>
<pre><code>sudo gedit /etc/rc.local
</code></pre>
<p>在exit 0 前边加入下边对应的语句,
默认关闭功能键Fn:</p>
<pre><code>echo 2 &gt; /sys/module/hid_apple/parameters/fnmode
</code></pre>
<p>设置默认亮度(数字2565可以修改任意亮度)（xubuntu下不起作用，原因未知）</p>
<pre><code>echo  2565 &gt; /sys/class/backlight/intel_backlight/brightness
</code></pre>
<p>设置键盘灯亮度（数字1代表亮度):</p>
<pre><code>echo 1 &gt; /sys/class/leds/smc::kbd_backlight/brightness
</code></pre>
<h3 id="附录1">附录1</h3>
<p><a href="https://help.ubuntu.com/community/MacBookPro11-1/Saucy">https://help.ubuntu.com/community/MacBookPro11-1/Saucy</a></p>
]]></description></item></channel></rss>