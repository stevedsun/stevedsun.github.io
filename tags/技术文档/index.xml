<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>技术文档 on The Context Studio</title><link>https://sund.site/tags/%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/</link><description>Recent content in 技术文档 on The Context Studio</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>Copyright © 2024, Steve Sun; all rights reserved.</copyright><lastBuildDate>Tue, 23 Aug 2022 22:18:00 +0800</lastBuildDate><atom:link href="https://sund.site/tags/%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/index.xml" rel="self" type="application/rss+xml"/><item><title>规范的错误信息</title><link>https://sund.site/posts/2022/write-error-message/</link><pubDate>Tue, 23 Aug 2022 22:18:00 +0800</pubDate><guid>https://sund.site/posts/2022/write-error-message/</guid><description>本文整理了 Google 官方文档中关于错误信息的编写规范。适用于有一定编程经验，尤其从事业务开发的程序员。
通过本文你可以：
写出风格统一、用户友好的错误信息 提高代码的可维护性，降低沟通成本 Google 文档原文：Error Messages
基本原则 错误不应该被掩盖 (Don&amp;rsquo;t fail silently) 遵循语言的规范 (Follow the programming language guides) 实现完整的错误模型 (Implement the full error model) 包含错误码、错误内容、错误原因、处理方法
避免吞掉问题根源 (Avoid swallowing the root cause) 输出错误代码 (Log the error codes) 快速抛出错误 (Raise errors immediately) 解释错误原因 使用错误信息给用户解释原因时，应该遵循：
具体，准确，避免含糊。 在错误信息中包含用户输入的错误内容。如果输入的内容特别长： 渐进地显示，提供一个可展开详情的省略号。 截断内容，只保留必要部分。 明确告诉用户，系统的要求和限制 解释如何处理问题 对用户来说，错误信息必须有可操作性。也就是说，在解释了问题的原因后，说明如何解决这个问题。 最好给用户提供一个例子。 清晰的错误信息 简明扼要，使用主动语态。（这方面内容可以参考技术文档写作指南） 避免出现双重否定句式。 让目标用户能够理解，即根据用户掌握的知识，提供有帮助的内容。 专业术语应前后一致。 错误信息的格式 使用链接提供更多信息。 渐进式呈现错误信息（比如可以展开详情的省略号）。 错误提示应该贴近错误发生的位置。 避免错误信息滥用字体或颜色。 使用正确的语气: 不要告诉用户错在哪，告诉用户应该做什么。 避免责备、幽默、道歉的语气。 对后端开发的建议 错误要有错误码 可以在错误信息结构里提供一个指向错误解释的 ID，如： { &amp;#34;error&amp;#34;: &amp;#34;Bad Request - Request is missing a required parameter: -collection_name.</description></item><item><title>技术文档写作指南</title><link>https://sund.site/posts/2022/technical-writing/</link><pubDate>Sun, 21 Aug 2022 15:29:00 +0800</pubDate><guid>https://sund.site/posts/2022/technical-writing/</guid><description>本文内容摘录自 Technical Writing （谷歌技术文档写作指南）的第一部分。
本文适用于想要提高技术文档写作、技术领域日常沟通能力的读者，对于一些商务的、非文学性质的英语办公场景沟通，也能起一定帮助作用。
阅读过本文的读者可以：
提高在日常办公中清晰、准确、客观地传达概念和逻辑的能力。 掌握英文技术文档写作规范。 词汇（Words） 对于已有的术语，不要重复发明新的词汇，可以用一个链接指向解释它的页面。
如果有必要，可以在文档中直接定义新的术语，但如果术语比较多，最好建立一个术语对照表。
文档各处出现的术语应该保持一致的名称或缩写。
关于缩写：第一次出现要用粗体写全称并用括号指明缩写，之后的文章中不要反复混用全称和缩写。
例如：
This document is for engineers who are new to the Telekinetic Tactile Network (TTN) or need to understand how to order TTN replacement parts through finger motions.
如果一个术语出现频率不高，请不要使用缩写。
使用缩写的情况有：1. 缩写明显更简短；2. 该术语出现频率很高。
谨慎使用代名词（It，they，that 等）。
代名词一定要出现在它所指代的名词之后。 如果代名词远离它指代的名词（超过 5 个单词），就不用代名词。 在名词和代名词之间出现第二个名词，会产生歧义，应避免这种情况。 类比计算机编程语言：
缩写 = 对术语的一层抽象。读者需要花费更多脑力去把它展开成对应的名词。
代名词 = 指针。它容易引起歧义，所以要避免在读者大脑中引起「空指针」错误。
主动语态（Active voice） 技术文档中应尽量使用主动语态。 被动语态在读者大脑中需要额外的加工转换才能被理解。 被动语态用来间接地表达行为，容易引起混乱。 有些被动语态省略了行为主体，会迫使读者猜测主语是谁。 如果使用被动语态，应正确使用过去分词的各种形式和介词（如 as，by）。 祈使句的动词（命令式动词）应该使用主动语态。 科技论文中经常出现被动语态（如 It has been suggested that&amp;hellip;），这种写法并不能传递更多信息，很多科学期刊也开始鼓励使用主动语态。 炼句（Clear sentences，Short sentences） 选择准确、有力、具体的动词。减少不精确的、软弱的或通用的动词。</description></item></channel></rss>