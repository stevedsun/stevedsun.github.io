<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>All Posts - 電波障害</title><link>https://sund.site/posts/</link><description>All Posts | 電波障害</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Sun, 18 Sep 2022 17:01:29 +0800</lastBuildDate><atom:link href="https://sund.site/posts/" rel="self" type="application/rss+xml"/><item><title>边缘计算模式——数据管道</title><link>https://sund.site/posts/2022/pattern-of-edge-computing-data-pipeline/</link><pubDate>Sun, 18 Sep 2022 17:01:29 +0800</pubDate><author>Steve Sun</author><guid>https://sund.site/posts/2022/pattern-of-edge-computing-data-pipeline/</guid><description>问题 在物联网多层架构设计中，数据从终端设备流向云端，应该在哪一层做数据处理，哪一层做数据展示？分层的依据是什么？ 解决方案 架构设计 边缘计算的三</description></item><item><title>边缘计算模式——任务队列</title><link>https://sund.site/posts/2022/pattern-of-edge-computing-lock/</link><pubDate>Wed, 14 Sep 2022 08:46:21 +0800</pubDate><author>Steve Sun</author><guid>https://sund.site/posts/2022/pattern-of-edge-computing-lock/</guid><description>概述 在边缘计算中，边缘节点通常介于终端节点和云端节点之间，它的扩展性也介于两者之间。对于高并发或是高资源占用的业务场景，应该如何设计边缘节点</description></item><item><title>规范的错误信息</title><link>https://sund.site/posts/2022/write-error-message/</link><pubDate>Tue, 23 Aug 2022 22:18:00 +0800</pubDate><author>Steve Sun</author><guid>https://sund.site/posts/2022/write-error-message/</guid><description>本文整理了 Google 官方文档中关于错误信息的编写规范。适用于有一定编程经验，尤其从事业务开发的程序员。 通过本文你可以： 写出风格统一、用户友好的错误信</description></item><item><title>技术文档写作指南</title><link>https://sund.site/posts/2022/technical-writing/</link><pubDate>Sun, 21 Aug 2022 15:29:00 +0800</pubDate><author>Steve Sun</author><guid>https://sund.site/posts/2022/technical-writing/</guid><description>本文内容摘录自 Technical Writing （谷歌技术文档写作指南）的第一部分。 本文适用于想要提高技术文档写作、技术领域日常沟通能力的读者，对于一些商务的、非文学性质</description></item><item><title>《分手的决心》细节分析</title><link>https://sund.site/posts/2022/decision_to_leave/</link><pubDate>Sun, 14 Aug 2022 17:01:56 +0800</pubDate><author>Steve Sun</author><guid>https://sund.site/posts/2022/decision_to_leave/</guid><description>把那部手机丢进海里，让它陷入深处，没人能寻到。 看完《分手的决心》，我决心水一篇。今天跟大家一起分析分析电影里的细节。 影片开头的支线情节 电影的</description></item><item><title>3 Ways To Access Host System In Docker Container</title><link>https://sund.site/posts/2022/3_ways_to_access_host_system_in_container/</link><pubDate>Mon, 08 Aug 2022 20:04:00 +0800</pubDate><author>Steve Sun</author><guid>https://sund.site/posts/2022/3_ways_to_access_host_system_in_container/</guid><description>When we are using Docker, we always access the host system by mounting the host folders as a volume. But sometimes we can not do that due to deployment reasons or security limits.
There are three workaround ways to access the host system.
1. Mount docker.socks into container docker.socks is a Unix socket that Docker Engine API listens on. You can mount /var/run/docker.socks file to your container and call Docker Engine API through this socket.</description></item><item><title>品味和效率</title><link>https://sund.site/posts/2022/2022-08-04/</link><pubDate>Thu, 04 Aug 2022 07:59:00 +0800</pubDate><author>Steve Sun</author><guid>https://sund.site/posts/2022/2022-08-04/</guid><description>早起又随性写点东西。 最近朋友圈被转载很多的一篇文章，来自 GQ 实验室对重轻老师的采访。里面有一段关于品味的叙述： ……审美的底层逻辑是能感受到那些</description></item><item><title>Notion As A Dashboard</title><link>https://sund.site/posts/2022/using_notion_as_a_dashboard/</link><pubDate>Sun, 31 Jul 2022 21:01:56 +0800</pubDate><author>Steve Sun</author><guid>https://sund.site/posts/2022/using_notion_as_a_dashboard/</guid><description>I have built a Chrome extension 无用主意 during the last month. The backend service implemented by Flask is using Notion as a dashboard. Notion API If you want your service to connect to Notion, you have to create a Notion integration on this page. Afterward, you have to share a specific Notion page to the integration you just created. Now, you can call Notion API to visit</description></item><item><title>Building A File Parser</title><link>https://sund.site/posts/2022/2022-5-8_lexer_design/</link><pubDate>Sun, 08 May 2022 14:00:00 +0800</pubDate><author>Steve Sun</author><guid>https://sund.site/posts/2022/2022-5-8_lexer_design/</guid><description>Last week, after reading this article - How to Write a Lexer in Go, I found that it is not so difficult to design a configuration file parser by this article&amp;rsquo;s mind-set. Then I tried to write a fluent-bit configuration parser, finally got this Fluent-Bit configuration parser for Golang.
In this article, I want to introduce how to parse Fluent-bit configuration .conf file, and the thinking behind it.
Fluent-bit configuration format and schema 1 2 3 4 5 6 [FIRST_SECTION] Key1 some value Key2 another value [SECOND_SECTION] KeyN 3.</description></item><item><title>分布式缓存系统的设计</title><link>https://sund.site/posts/2021/distributed-cache/</link><pubDate>Thu, 18 Mar 2021 15:32:57 +0800</pubDate><author>Steve Sun</author><guid>https://sund.site/posts/2021/distributed-cache/</guid><description>很久不写技术文章了。这是一篇关于 Redis 构建分布式缓存系统的总结，结合之前项目上的使用场景，做一个系统性的梳理。 下面就以我做过的商品预约平台项目作</description></item></channel></rss>