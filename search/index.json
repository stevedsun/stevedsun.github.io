[{"content":"今天给大家介绍一种整理和回顾碎片知识的方法——卡片盒笔记法。\n应该不少人都读过少数派作者玉树芝兰老师写的关于卡片盒笔记法的文章。产品沉思录的主理人少楠也写过很多相关的内容，最近他们还出了一个工具（Flomo - 浮墨笔记）也是基于这套方法论的。\n在这篇文章中，我会结合自己用 Notion 的经验，分享一下我如何用 Notion 做卡片笔记。\n本文参考了 Youtube 频道 Mukul Khanna 关于 Notion 的一系列使用方法。\n什么是卡片盒笔记法 卡片盒笔记法（Zettelkasten）是一种将零散的想法、笔记和文献，通过编号、引用、索引等方式彼此关联起来，形成知识网络并提取有效信息的方法。其著名使用者——社会学家 Niklas Luhmann 一生创建了9万多张索引卡片，发布了70多本专著和400多篇学术论文。\n卡片盒笔记法可以类比为人类大脑记忆和归纳知识的回路。\n人类大脑有两种思维模式——专注和发散。\n我门通常学习某一学科知识时使用的是专注模式——从一个知识点引申到相关的知识点，像串糖葫芦一样把一系列知识点串联起来形成一套知识体系。\n在另一些情况下，如艺术创作、技术创新等，我们的大脑会切换为发散模式——大脑在在一些关联但不同领域的知识间来回跳跃，形成一种全新的思考路径。\n此时此刻，我为了将分散在不同笔记中零散的知识点关联起来形成这篇大家看到的文章，就需要同时借助两种模式，找到不同网站、文献间相关的内容，把他们组织起来。\n相对应的，卡片盒笔记法有两种关联笔记的方式，「顺序」和「引用」：\n当我们在专注模式下阅读一本书或一篇文献时，我们可以把瞬间的想法记录在笔记中，按顺序（比如按章节）把若干笔记关联起来。\n而当我们在记录笔记过程中想到相关的内容在另一篇文献中也出现过，那么我们可以在笔记中用引用的方式把另一篇笔记内容和这篇内容做关联。\n这样一篇笔记（卡片盒笔记法里的「卡片」），就有了两条途径来回顾它——顺序阅读和延伸阅读。例如，一段时间后，我们想把这段时间的学习心得梳理出来归纳成一篇文章，我们就可以先以某一篇笔记为起始点，顺序读下面的笔记卡片，读到感兴趣的内容再看看它关联的那些卡片是否可以作为素材。以此类推，从一片知识的网络中抽丝剥茧，抽象出一种独特的脉络。当然，这些卡片还可以和其他卡片组合，形成另一种视角。这一套卡片构成的卡片盒，就是一套不断碰撞出新想法的数据库。\nNotion 为什么适合做卡片盒笔记法 Notion 在前一段时间更新了 Backlinks （反向链接）功能，这一功能的推出，把 Notion 和新晋的几款网状知识管理工具（Roam Search、Obsidian）的差异大大缩小，成为了做卡片盒笔记法的合适工具。相对于专注做卡片笔记的软件来说，Notion 的优势是更加灵活的配置和用途广泛的页面元素。\n用 Notion 实践卡片盒笔记法 我们首先脱离 Notion 这个软件，看看通常情况下一张卡片由哪些部分组成。下图是来自 Introduction to the Zettelkasten 文章的配图，呈现了一张卡片的样子：\n 标题。包含一个唯一编号的标题，编号的作用是在其他笔记中可以方便引用该笔记，而不用担心笔记的标题发生变化使引用失效 标签。方便回顾笔记时对某一类内容做整理归纳 正文。笔记正文是一个想法或是一个知识点的总结。一定是用自己的话来归纳。可以引用其他笔记的编号或是参考文献的地址来配合内容展现 参考文献。结尾部分是这篇笔记卡片是由哪些文献引申而来的  由此可见，卡片盒笔记法中的「卡片」是通过\n 引用卡片编号，来关联其他卡片 引用参考文献，来关联外部文献  下面回到 Notion 这个工具，我们一步步来搭建卡片盒笔记法。\n搭建文献库 - 零散知识的数据库 所谓巧妇难为无米之炊，我们做笔记的第一步就是搭建文献资料库，这是一切笔记的源头，有点像数据工程里的「贴源数据层」，文献库是为了让互联网上经常失效的文章有个备份的好地方，同时你也可以在文献库里对文章进行划线、高亮和备注。\n这是我的一个文献库，专门收藏一些专业外的小知识。\n首先要在 Notion 创建一个列表页面（List Page），取名「文献库」。列表中的每一个条目都是一个页面，包含一些基本属性：\n 标题 备注 标签 被引用。使用 Notion 的 Relation 属性，关联到和这篇笔记有关的笔记 领域，可有可无。类似一种标签，我把领域也做成了页面来关联到这里 URL，这是 Chrome 网页剪藏扩展（Save to Notion）的默认属性 添加时间  为了从网页上剪藏这样一篇文章，我在 Chrome 浏览器里安装了 Save to Notion 这个扩展，它的优点就是可以在剪藏网页内容同时设置好笔记的属性。把 Save to Notion 保存位置设置成你已经建立好的文献库，就可以一键保存到 Notion 了。\n对于那些无法被直接剪藏的文献（比如 pdf 格式的论文、书籍、视频等）也可以直接在笔记页面直接填写 meta data 的方式指明出处，下文会介绍何谓卡片笔记的 meta data。\n搭建卡片盒 - 思维碎片的收集器 有了可以追溯的文献库，接下来是卡片盒笔记法的核心步骤，搭建卡片盒。\n卡片盒可以用 Notion 的 Gallery Page 来展现。每一个笔记页面都是一张卡片。\n「卡片」也有一些基本属性需要设置：\n 标题 ID，可有可无。Notion 可以直接用 @ 符号引用其他页面。 这里 ID 参考了卡片盒笔记法的编号，可以用 Notion 的公式属性来根据时间生成一个唯一的 ID。偶尔在其他软件中引用这个编号，可以方便在 Notion 中快速搜索 创建时间 项目，可有可无。关联到某个项目的页面 标签 文献。关联到文件库中的某一篇剪藏的文章 文献 metadata。一些无法保存到 Notion 的内容，可以直接在这里备注出处的段落。方便日后查找，如 《某某图书》的第一章第三段 上一条。按「顺序」关联的思路，上一篇相关的笔记的链接 下一条。下一篇顺序关联的笔记 索引。表明这篇文章是否被收录到索引里。关于索引在下文会介绍  前文说，一张笔记卡片有两种方式和其他卡片或参考文献产生关联：\n 在参考中引用文献。这点在属性的文献、文献 metadata 中我们已经实现了。 直接在正文中引用。Notion 天然支持 backlinks 双向关联。一个页面如果提及了其他页面内容，可以在被引用的页面顶部的 backlinks 里看到二者的关联。  另外针对思维的两种模式：专注模式和发散模式，有两种回顾卡片的方式：\n 我们特意设置了「上一条」、「下一条」这样的指向其他页面的链接，来方便我们按顺序回顾一系列笔记，对应了专注模式 我们也可以通过点击正文中超链接的方式看其他相关的卡片内容，对应了发散模式  好了，现在你已经有了文献库、卡片盒，每次读到感兴趣的内容、有新的想法，都可以在卡片盒中创建一篇笔记，用自己的话总结、记录它。\n但是要把他人的知识变为自己的知识，做到这些还远远不够。零散的知识仅仅被记录下来并不代表它属于我们。那只是知识网络中的一个节点。而我们要的是一个回路。思维就是一系列知识节点的脑回路。卡片盒笔记法里用索引卡片的方式为一系列卡片创建目录。\n搭建卡片索引 - 网络中的高速公路 有了知识的网络，我们还要回顾。很多人管理笔记的方式就是存起来放在那里，这是自欺欺人。我们要定期回顾，按顺序、标签、延伸阅读等方式，在卡片盒中随机漫步，把相关的卡片联系起来，在知识的网络里构成一条思维的回路，发现一些过去没有发现的知识关联，让不同学科、领域的知识可以互相佐证、交叉引用。\n继续在 Notion 创建一个名为「索引」的列表页面，页面中每一个条目都是一个主题的索引页面，将多张卡片用超链接的方式组织在一个主题下，犹如图书的目录。比如这篇文章，我就是从这个索引中演化而来。\n这就好比一条信息高速公路。可以让我们直达这个主题下的笔记。但是修建高速公路的副作用，是会让我们忽略那些拥有别样风景的小路。每一张卡片，可以成为另一个主题里的内容。重要的是，路径不只一条。\n减少笔记数量，给大脑减压 卡片盒笔记法和其他知识管理方法的共同问题就是，笔记量越大，回顾的成本越高，越到后期回顾越花费时间，很多人有心里负担也就放弃或是干脆觉得这些方法都是糊弄人的。\n知识管理就像打怪升级，想要超凡的经验，苦练不能少。我们也可以通过定期删掉过时、重复的笔记，剔除一些无效的节点来减少阅读成本。\n卡片盒笔记法还鼓励定期提炼多张同类的笔记为一个笔记，从而减少后期回顾成本。即把知识网络中的节点合并起来。这些小技巧因人而异，实践中可以多多总结发现。\n小结 这次介绍了卡片盒笔记法和 Notion 结合的用法。请注意 Notion 的页面关联功能 （Relation）是让这套方法成立的根基，相当于用 Notion 配置了一个专门用于卡片盒笔记法的笔记工具。这也是 Notion 被称为第二大脑的关键，它不只是一个笔记软件，更是一个多种可能性的工具。\n卡片盒笔记法的核心是构筑彼此关联的笔记网络，在此基础上通过顺序、发散的回顾方式不断产生新的回路，抽象成为创作的素材。借助 Notion 的特性，我们可以在多个页面之间关联、跳转、搭建属于自己的高速公路。\n以上就是本文的内容，希望对你有用，你可以在延伸阅读里找到更多相关文章，也欢迎你关注我的公众号随时订阅我的新发现。\n延伸阅读 花园与溪流的隐喻\nMatrix 圆桌 | 网状结构笔记工具是一阵风吗？\nZettelkasten 介绍\nTake Smart Notes\nHow I use Zettelkasten in Notion | Best note-taking knowledge-management system 📝\n","date":"2020-12-12","permalink":"https://sund.site/2020/12/%E7%94%A8-notion-%E5%AE%9E%E8%B7%B5%E5%8D%A1%E7%89%87%E7%9B%92%E7%AC%94%E8%AE%B0%E6%B3%95/","tags":["notion","zettelkasten"],"title":"用 Notion 实践卡片盒笔记法"},{"content":"对于大部分人来说，工作贯穿一生，工作对于人的健康、幸福感都发挥着决定性作用。\n今天的话题就是关于如何规划职业生涯。\n这次话题的起因是听了Rio和黄海主播的Podcast《疯投圈》的一期节目，里面提到一本职业规划的书——《远见》。作者布赖恩·费瑟斯通豪是市场营销方面的大师，他主张对待职业生涯要看长远，普通人一生中绝大部分财富是在40岁之后积累的，所以年轻时对财富的忧虑往往是过度的，要对职业生涯做一个长达45年的分阶段职业规划，保持积累可持续的职场燃料。\n《远见》整本书都在围绕两个主题：\n 寻找助推职业发展的「职场燃料」 在职业的不同阶段，如何给自己清晰的定位  积累职业生涯的三大职场燃料 所谓职场燃料，即\n 可迁移的技能 有意义的经验 持久的关系  相比于即学即用的职业技能，这三大燃料往往是在漫长的工作经历中逐渐获取的。聪明的职业发展策略是，在整个职业生涯中持续积累、更新职场燃料，同时精明地消费它们。\n例如，当我们想要跳槽到下一家公司时，除了福利待遇，最看重的是什么呢？很多人会说「能不能学到东西」。其实这是非常模糊的概念，学到什么，通过什么学？这些问题决定了一份工作是否成为你职业生涯的助推器。\n可迁移技能。我应该从工作中学到什么  （它）不仅是帮助你完成眼前工作的技术知识和行业术语，而且是当你从一个工作换到另一个工作，从一家公司换到另一家公司，甚至是从一个行业换到另一个行业时都能依靠的能力和基础。\n 可迁移技能不光是指那些领域知识或者技术壁垒，更是一些通用的社会技能，例如：\n 解决问题能力 沟通能力 人才吸引力 寻求帮助和帮助他人的能力 理解和连接他人情绪状态的能力  这些能力往往不存在于特定的公司或是领域。可迁移技能中的**大部分真正重要的能力，并不需要反复跳槽来获取。**如何尽可能获得能力的提升呢？布赖恩认为，关键在于开放性的心态。如果你能多一些耐心，通常就能在一家公司里获得丰富的经验。\n你可以试着用一张纸，把自己的可迁移技能列出来，审视一下，哪些是随着行业发展逐渐消失的？哪些会在未来持续提供你帮助的？你是否在积累这些技能？\n有意义的经验。我的工作是否有价值  自信心必须建立在有市场竞争力的事情上面。\n 社交网络上总看到类似这样的职场段子——「离职无非两个原因：嫌钱少；干得不高兴」。用钱和高兴程度来衡量工作的价值还远远不够。\n评估当前工作是否对我们有价值，可以通过4个黄金问题：\n1．我是否正在学习和成长？\n2．我是否正在对某些人、现在的公司，乃至整个社会拥有影响力\n3．我体验到乐趣了吗？\n4．我是否得到了适当的奖励，并创造了经济价值？\n这四个方面分别对应了学习、影响力、乐趣、奖励。\n学习决定了你是否在专业领域保持成长；影响力代表你对他人带来的益处，这会从多方面影响你的人际关系和发展机会；乐趣则是持续投入精力和从工作中获得幸福感的源动力；奖励则不光是薪水，还有各种福利、时间、补贴等因素。\n根据当下你的感受，给这四方面分别赋予一定权重（一个百分比），假如你更看重学习和乐趣，那么就给他们更高的权重，同时降低另外两项的权重。然后给当前工作的状态打出评分，10分满分，最后用权重乘以评分得到每一项的职业价值分：\n根据作者布赖恩的经验，如果总分在700分以上，那么你的工作就算非常有价值了。\n表格中的权重可以每年根据自己的感受进行调整。最重要的是，不要单纯把金钱和干得高兴作为决定工作价值的因素。影响力往往是人们最容易忽略的价值，年轻阶段积累的影响力，往往会在职业生涯的后半段起到决定性作用。\n持久的关系  人脉关系网的构建者的心态是交易性的，他们在追求人际关系时只考虑其他人能为他们做什么。而人际关系的构建者会首先尝试帮助别人，他们不会有所保留。\n 很多教你如何「积累人脉」的书，骨子里都是在教你「虚伪」。布赖恩认为，真正获得良好人际关系的诀窍在于不索取回报的付出。根据研究，付出者在利他性、责任心、社会正义和同情心方面表现的更加突出，往往跻身杰出和最幸福行列的机会也比别人大得多。\n我们总觉得社会关系要讲究「互利」，其实互利的本质就是「利他」。回报往往是非即时的，总要在一方面作出让步，才能在另一方面获得回报。\n「向他人提供帮助」的能力也是强大的可迁移技能，它的重要性甚至高于「向他人寻求帮助」的能力。\n然而，根据邓巴数理论，一个人能够同时保持密切关系的人数上限是150人。\n所以那些微信躺着上千好友的社交大咖，是把朋友当作交易性的「人脉」还是良好的「人际关系」？\n布赖恩把一个人的人际关系分为5层，数量上从多到少，依次是：\n 通信录里的联系人 拥有特殊知识、权力的专家团 在公司里对你有决定性影响的5到10个关键同事 提建议、拥护你、激励你的支持者（导师、帮手） 你自己  他们构成了支撑你职业生涯的金字塔。\n联系人是你的通信录好友，你通过各种渠道认识的人。他们数量较多，通常他们中的少数人会成为你真正的好朋友。\n专家团是你的朋友中具备一定专业能力和领域知识的人，在你需要帮助时，可以向他们求援。在利他的原则下，我们也会成为别人的专家团，帮助他人。\n关键同事的重要性不言而喻，他们直接影响你的职业发展，其中榜首的是你的上司。\n支持者又称为你的「个人董事会」，他们的建议和帮助往往对你的职业生涯起着决定性作用。支持者在人的一生中十分稀有而宝贵，他们甚至会在背后默默帮助你，说你的好话，成为你重要职位的推荐人。那么如何寻找你的「支持者」呢？布赖恩给出的建议是：「如果你将自己当成一个学生，那就自然会找到老师」。\n最后，不要忘了自己，你是你自己最好的品牌经理。\n这个人际关系金字塔是你赖以生存的职业生态系统，请把对你重要的那些人填在对应的位置。每年至少要审视一次，哪些关系为你带来了最大的价值？哪些关系正在枯竭？哪些关系还可以进一步发展？\n小结 本文介绍了职业生涯的三大助推燃料：可迁移的技能、有意义的经验和持久的关系。\n积累可迁移的技能并不意味着你必须通过跳槽来寻找学习机会。\n而有意义的经验则从4个维度评估的当前工作的价值，并介绍了一种基于权重和打分的个人评估工具。\n在持久的关系一节介绍了人际关系金字塔，请审视自己周围的人际关系，是否能够持续支撑你的职业发展。\n记住，在人际关系中的关键要素是「利他」。\n我会在下一篇《职业生涯说明书（二）》中继续介绍职业生涯的三大阶段，以及如何在不同阶段选择合适的定位，正确应对职场危机，从工作中实现真正的人生价值。\n","date":"2020-06-06","permalink":"https://sund.site/2020/06/%E8%81%8C%E4%B8%9A%E7%94%9F%E6%B6%AF%E8%AF%B4%E6%98%8E%E4%B9%A6%E4%B8%80/","tags":["职业规划"],"title":"职业生涯说明书（一）"},{"content":"这是一篇投资人Daniel Gross发表在自己博客的文章，讨论了新冠疫情后期的世界如何进入2.0新模式，以及有哪些机会和挑战。我把它翻译过来，希望大家也能从中获得启发。\n重建世界2.0 未来几周，因疫情导致的封锁将逐步放开，当我们再一次打开房门，迎接我们的将是世界2.0。在这个新版本的世界里，一切会看起来完全不同，这种「不同」会成为培育新一代开拓者们的土壤。\n开始话题之前，理解下面的原则可能会帮助我们思考：\n 衰退不可避免。在用尽了所有维持经济运转的手段之后，洪水将会到来。在30%的失业率下，我们无法保持同样的经济增长了。 疫苗何时到来还不确定。就像普通感冒一样，没有特效药。在科学家研制出可行的药物之前，我们将被迫改变生活习惯以适应这种状态。 大自然迫使我们进行一场规模空前的社会实验。很多企业在几周内就全部远程办公了，一些地区觉得远程办公是一种巨大的经济负担。但是很多人终会明白，远程工作虽然不是特别好，但在这个背景下，仍然是一个好办法。 如果世界2.0同样的保持平等、优越、法理……那一切行为都会产生永久性的改变。（译者：即永久性替代现有秩序）  如果你的想法足够超前，你一定能在这场游戏里获得有价值的东西：\n 握手已死。疫情首先改变了家庭内部的习惯，然后，陌生人之间呢？ 电影院的消亡。电影会在网络上重生。影院已经无力承担更少的座位了，即便在病毒爆发之前很多影院也已经濒临破产。已经有太多可以替代电影院的选择了。 暂停音乐会，在网上开。再次举办这种大型活动遥遥无期，目前还没有可替代的方案。我敢打赌，这种情况将会反复发生：再一次爆发疫情，再一次停止活动。 城市的（暂时性）终结。疫苗出现之前，越来越多人会搬去郊区。一些房地产经纪人告诉我旧金山公寓的市场在降温，同时郊区的房子却渐渐在升值。 信任。突然之间，所有人都变成了潜在病毒携带者，当你在大街看到一个陌生人时，内心是什么感觉？病毒增大了人与人的距离，减少了彼此的信任。 商务旅行变成了Zoom会议。部分公司发觉，可以通过远程会议完成谈判。我想，在经济衰退的市场环境下，很多管理者为了降低成本，会退而求其次。旅行的开支将会被大幅降低。 个人旅行减少。原因可能是个人经济能力的下降，而不是恐慌。 数字企业活动。过去几周我已经见识到很多在网上进行的商业活动。其中，很多经理人发现在一些项目中使用Zoom（远程会议软件）已经“足够好用”了，并开始着手削减此前在这方面的其他投入。如果这一次的网络商业活动实践产生了积极的作用，那么对于那些利润直接相关的企业部门未来采纳网上商业活动模式将至关重要。 「集体农场式」人事管理。如果未来在不同地区发生第二波第三波疫情，可以想象到，人们会共同参与社区管理，构筑起新的信任关系。类似室友和家庭之间的有机结合，这种结合越来越广泛。未来的公司甚至会鼓励同事之间共同隔离，以此提高返工管理流程的效率。 开放办公室会变得越来越不受欢迎。不但因为开放办公环境的人员密度不适合保持社交距离，而且人们经历了在家办公之后，会渐渐意识到一扇可以关上的门是多么重要。 公共交通被看作不安全。世界2.0不喜欢高密度的人口。还有什么比高峰时段的地铁更高密度呢？城市交通对一个城市的发展至关重要，要么我们会看到严厉的管控措施，要么就是像纽约那样大规模感染之后群体免疫。总之对Uber（等共享出行）来说可能是一个福音。 餐馆和数字餐馆。酒馆文化存在了几千年，所以它不会消失。但问题是，如何低密度地运营这项业务，以适应新时代的社交距离。由于家庭餐馆的模式并不理想，所以这个领域是我认为会出现新产品和创造力的地方。 学校会加强网络教学。父母顺理成章地会要求年轻人回到学校。没有什么比大学校园更好的生活环境了：那里聚集着一群对病毒免疫的年轻人，并且远离了老年人。也许会有新的数字教育替代品出现，但是用Zoom远程上课肯定不是最好的办法。 在线体育2.0。类似餐馆，在线体育也有很多上升空间。想象一下，在没有观众和球迷的体育场比赛，将会对运动员的生理水平造成什么影响。这很有趣。  这将是人类有史以来最不稳定的时代。一夜之间全世界的人们都改变了行为方式。这为创业营造了真正的机会，那些能够快速适应时代需要的人，将比其他人更好的发展。\n对于每一个新出现的行为模式，都会有一家新的创业公司出现填补空缺。假如人们想要音乐会，大自然不允许，那么替代方案是什么？如果酒吧餐馆因为社交距离的原因而无法维持，那么网络上酒吧餐馆是什么样呢？新的Zoom应该是什么样子，一个企业版的Snapchat如何引领销售业绩呢？正如Nat Friedman所言，“视频会议是一架不需要马的马车“。\n值得期待的是，在新冠疫情把我们从美梦中唤醒的同时，世界1.0正在衰退，大自然打破了常规，我们必须重新建立秩序。\n“IT\u0026rsquo;S TIME TO BUILD!”\n原文链接：https://dcgross.com/building-in-world-2-0/\n","date":"2020-05-10","permalink":"https://sund.site/2020/05/%E8%AF%91%E6%96%87%E9%87%8D%E5%BB%BA%E4%B8%96%E7%95%8C2.0/","tags":["译文"],"title":"译文：重建世界2.0"},{"content":"《集合啦！动物森友会》最近占据了所有社交网络的时间线。这款游戏的快乐对于不了解它的人，恐怕只有亲身上岛，和动物朋友们一起捉虫钓鱼才能渐渐体会到。嗅觉灵敏的淘宝奸商（其实也是为了恰饭）一直在抬高售价，《动森》的价格被从320元一路炒到了450元，很多Nintendo Switch玩家无奈转战到eshop购买数字版。\n今天我会讲讲怎么以最便宜的价格购买数字版游戏，以及国内剁手党如何将全球便宜商品收入囊中。\n从这篇文章中你可以收获：\n 购买Nintendo Switch亚区、美区、欧区的游戏都有哪些限制 如何使用国内的VISA卡绑定美国的Paypal来购买数字版游戏 除了买数字版游戏，美国Paypal还能做什么？  Nintendo eShop 各个区购买游戏有什么限制 任天堂的电子商店eshop把全球玩家大致划分为三个大区——亚区、美区、欧（非、澳）区。非、澳洲和欧区享受同样的待遇，所以我们下文统称欧区。亚洲区里中国玩家最熟悉的是港服、日服，很多日本出的RPG游戏只有这两个区有中文版；至于国行的Nintendo Switch主机，因为只能购买国行的游戏，所以我们不去聊它。\n注意，在各个地区eshop购买游戏，首先需要注册对应地区的账号，可以参考这篇攻略《简单几步，就可以完成看似复杂的任天堂账号注册| Jump 新手教程》。\n  亚区的eshop支持用国内的（VISA，MasterCard）信用卡付款，港服还支持用支付宝。\n  欧区支持用国内的（VISA，MasterCard）信用卡付款。（但是也有部分朋友反应澳大利亚最近也无法使用信用卡支付成功了）\n  美区只能使用美区那些国家的信用卡支付，比如加拿大、美国、墨西哥。\n  可见，国内玩家最难购买的就是美区的游戏了。众所周知，墨西哥是eshop购买游戏最划算的地区之一，同样的游戏，墨西哥总是比日本、美国等其他地区便宜将近一半！\n另外由于最近疫情影响，澳元贬值，澳大利亚区也成为了购买数字产品的圣地。\n所以接下来就围绕「如何跨区购买数字商品」展开攻略吧。\n如何用国内的双/多币信用卡购买数字游戏和其他产品 Nintendo eshop除了信用卡直接绑定付款，还可以绑定Paypal账号支付。网上出现过很多注册美国Paypal来购买游戏的教程，比如这篇《购买eShop数字版游戏 | 完整版教程》。但是教程中最困难，也是阻碍最多人走向成功的一步，就是美区的Paypal风控极其严格，如果你使用的国内信用卡并且没绑定美国的电话号码，马上就会被Paypal发现并锁定你的账号，要求你验证身份。\n我就是经历这样一个「注册成功-\u0026gt;😊-\u0026gt;被锁定-\u0026gt;😖」的过程，才终于知道了原来一个美国的电话号码对网上购买虚拟商品是如此重要。\n要注册一个美国Paypal，首先要能打得开美国Paypal的网站，然后在注册信息时填写美国的住址，你可以在这个神奇的网站随机生成美国身份和地址信息。一直填写到最后一步——验证手机号码，这就到了本文最重要的部分了。\n获得一个美国电话号码，只要打开淘宝搜索「Google Voice账号」，以20元不到的价格购买到一个绑定了美国手机卡的Google Voice账号，就可以用Google Voice提供的虚拟号码来接收美国的短信了。\nGoogle Voice是Google公司推出的VoIP（基于IP的语音通话）服务，翻译成人话就是虚拟电话号码。你可以通过Google Voice拨打电话、收发短信。Google Voice账号需要绑定一张美国的电话卡，在淘宝购买的Google Voice账号里商家已经替你绑定好了。\n你得到Google Voice账号之后，用它登录到Google Voice的网页端或者手机端，然后在「设置-Google Voice号码」里看到你的虚拟号码，用这个号码注册美区Paypal，就可以正常接收Paypal发来的短信验证码了。\n有了Paypal账号，你先要在Paypal里绑定你的国内信用卡，Paypal会自动汇款1美元来测试信用卡是否可用（会自动退回给你）。\n最后，用你注册好的任天堂账号进入对应的墨西哥/澳大利亚区的Nintendo eshop，点击右上角头像，在设置里找到paypal的字样，绑定支付方式为刚注册的美国Paypal。\n然后，愉快地购买打折游戏吧！\n特别值得注意的一点是，Google Voice如果长期不用，号码会被Google自动回收，所以为了长期持有号码，最好设定一个日历提醒，每个月使用Google Voice发送一些短信，来保持活跃度。\n美国Paypal还能做什么？ 和国内的Paypal不同，美国的Paypal可以绑定很多大陆地区无法支持的购物平台。例如网上看到的一篇文章提到：\n 使用中国地址注册的PayPal无法在一些网站下单，比如联想美国站 一些美国网站搞活动时，只有美国PayPal才能享受折扣或者只有美国PayPal才能试用产品，比如beenverified 在阿里云国际、Google Play、App Store、Netflix等平台付款 美国PayPal提现余额到美国银行无手续费，而中国PayPal提现余额到美国银行要收35美元手续费 中国PayPal间不能相互转帐 有些网站不接受你的信用卡付款，但把信用卡绑定到PayPal以后却可以正常付款，很明显这是网站为了降低风险，把风险直接丢给PayPal处理  如此众多的好处，拥有一个美国Paypal看来是居家旅行必备良品。\n以上，就是这一次的教程。喜欢动森的朋友，欢迎转发给更多朋友！\n本文部分内容参考了数字移民的博客。\n","date":"2020-03-30","permalink":"https://sund.site/2020/03/%E4%B8%80%E4%B8%AA%E8%B4%AD%E4%B9%B0%E6%95%B0%E5%AD%97%E5%95%86%E5%93%81%E7%9A%84%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD/","tags":["不能说的秘密"],"title":"一个购买数字商品的必备技能"},{"content":"友情提示，本文有轻度剧透，请慎重阅读。\n说到美国，大家都知道它是个移民国家。美国的爱尔兰裔，占到了总人口的10%以上（数据来源），仅次于德国裔，排在第二位（2000年最新数据显示非洲裔已经超过爱尔兰裔成为美国第二大族群）。爱尔兰裔美国人总数甚至超过了爱尔兰本土的人口数。美国的爱尔兰后裔为何如此之多？这就要从18世纪的爱尔兰说起。\n18世纪末期，英国彻底征服了爱尔兰，使之成为大英帝国的一部分。英国人剥夺了爱尔兰人世代赖以为生的土地，令其在自己的国家成为二等公民。\n爱尔兰人连同土地一起失去的，还有信仰。当时的英国以信仰新教为主，而爱尔兰人普遍信仰天主教。为了打击爱尔兰的天主教势力，同时也为了镇压爱尔兰叛乱，英国人不允许爱尔兰人组织天主教相关的活动，并且法律还规定爱尔兰人既无选举权，也不能充任公职、律师、教师等职业。\n如此严厉的律法，使得爱尔兰人只能从事低级的体力劳动，过着极其贫困的生活。\n政治家埃德蒙·伯克这样形容英国针对爱尔兰的法律（来源：《美国种族简史》）：\n 自古以来，人类凭借着邪念所能制造出最巧妙的机器，用以使百姓堕落，并进而败坏人性本身。\n 但上帝给爱尔兰人关闭一扇门的同时，也打开了一扇窗。为了生存和信仰，爱尔兰人在极端严酷的环境下，一边躲避迫害，一边在天主教的精神支撑下抱团取暖。久而久之竟然解锁了他们的种族天赋——强大的地下组织能力。\n19世纪40年代，爱尔兰爆发了大饥荒，上百万爱尔兰人死于饥饿和瘟疫。英国议会对爱尔兰人的漠视，使得爱尔兰土地上成千上万的民众，挣扎着自求生路。\n当时的商船从北美出发到英国，需要运载大量的农产品，但是从英国返回美国，则以运输体积较小的工业品为主，这就造成了大量船舱空间没有被利用。于是越来越多的底层爱尔兰人，借助远在美洲的爱尔兰同胞们赞助的钱财，购买这种廉价商船的「蹲票」，挤在狭小的商船货仓里前往北美洲。\n3个月的海上航行漫长而痛苦，无数爱尔兰人在船舱里因为缺水、疾病、饥饿而死去。活下来的少数人终于踏上了向往的新大陆。\n初到美国的爱尔兰人普遍身无分文，也只能从事低级的体力劳动维生，美国的矿工、铁路工人大都是这些人组成，比起南方种植园的黑人奴隶，爱尔兰人的生存境况更差，累死、饿死、工伤死亡的比比皆是。但是多亏了爱尔兰民族的种族天赋：强大的地下工作组织能力！很快，爱尔兰人主导的工人团体相继成立，1861年的美国矿工协会，1903年的国际妇女工会联盟，1905年的世界产业工人联盟……一个个由爱尔兰裔主导，旨在团结底层劳工的工会组织成为了美国重要的政治势力。\n时代成就了爱尔兰人。电影中，吉米·霍法创建的美国卡车司机协会也是这样的一个工会组织。\n看过《美国往事》的同学应该记得，美国在1920年代颁布了著名的禁酒令，在禁运私酒的这段时间，以爱尔兰裔和意大利裔为主的美国黑帮在这一时期通过地下产业迅速壮大。\n黑帮控制的地下私酒产业链蓬勃发展，但是这些违法生产的私酒需要大量卡车司机来协助运输。于是，吉米·霍法领导的卡车司机协会就在那段时期和美国黑帮一起，把持着美国的利益链条。\n影片中的男主角弗兰克.希兰就是那个时期成为了一名卡车司机，并结识了黑帮大佬罗素和卡车司机协会的吉米，成为了两边势力的中间人。\n同一时期，违法私酒产业也让另一个对美国影响深远的家族默默崛起，那就是靠着贩卖私酒大赚特赚的肯尼迪家族。肯尼迪家族也是爱尔兰后裔。有赖于黑帮势力的支持，约翰·肯尼迪在1961年成功就任美国总统。但是肯尼迪一上任就跳反了，把矛头指向了黑帮和工会，联合司法部长的弟弟罗伯特·肯尼迪一起，打击有组织犯罪和地下产业。\n电影里，吉米每次提到肯尼迪，就恨得暴跳如雷，把对方家里女性长辈都问候一遍。\n最终，通过打击犯罪赢得了民众支持的肯尼迪，却深深得罪了爱尔兰人的两大势力。在一次车队游行时，一颗子弹击中了座驾上的肯尼迪头部，瞬间，他的脑浆以放射状飞溅到几十米内的扇形区域，在电视上目睹了这一刻的美国老百姓都惊掉了下巴。与此同时，阴影中的某些人却微微翘起了嘴角，举起了酒杯。\n随后的几年间，包括扣下板机的凶手和司法部长罗伯特·肯尼迪在内100多个证人，相继离奇死亡。这次总统遇刺案成了美国历史上最大的谜团和丑闻，也让调查这起案件的官员受到了强烈质疑。\n电影《爱尔兰人》中暗示，肯尼迪的死和吉米·霍法有着直接的关系。可惜吉米还没高兴多久，自己就因被指控行贿罪而逮捕入狱。\n4年后，吉米出狱，黑帮和工会的格局已经发生了天翻地覆的变化。曾经呼风唤雨的工会已经沦为了黑帮的附庸，这让吉米相当郁闷。在跪舔黑帮大佬和重振工会雄风之间，吉米毅然选择了后者。\n此时工会已经不复当年的威风，此时的黑帮也已不把吉米放在眼里。吉米和黑帮闹掰之后，身兼工会和黑帮双重身份的男主角弗兰克感到无所适从，一边是自己最好的朋友吉米，一边是恩重如山的老大罗素。最终他会选择站在哪一边呢？\n结局我就不剧透了。感兴趣的朋友请自行去片中寻找答案。\n这部电影在讲述工会和黑帮的恩怨纠葛背后，另一层深意是什么呢？那就是影片的片名：爱尔兰人。\n那是一群在自己的土地被迫害的爱尔兰人，为了寻找新生活而相互扶持，辗转抵达大洋彼岸的新大陆；而又是这样一群爱尔兰族裔，最终为了自己的利益勾心斗角，互相杀伐。其中人性的摇摆，令故事充满了戏剧的张力，成就了这部电影。\n以上，就是我对这部电影的理解。\n","date":"2020-03-08","permalink":"https://sund.site/2020/03/%E7%9C%8B%E6%87%82%E7%94%B5%E5%BD%B1%E7%88%B1%E5%B0%94%E5%85%B0%E4%BA%BA/","tags":["电影"],"title":"看懂电影《爱尔兰人》"},{"content":"要有路线图 平时在办公室里，大家可以面对面沟通，有问题、回复都可以迅速得到反馈，好像一个走正步的方队，每个人的节奏都可以从余光中确认。但是在家办公，这种节奏就乱掉了。\n我最近正好转到数据团队做一些数据工程的工作，急需恶补很多知识。我在网上搜到几张数据工程师知识图谱和一些认证课程。按照自己的能力，我规划了学习路线，并且用Notion记录下来。这份路线图里包含了一些书籍和网络课程，能够帮我快速上手实践，以备在复工后快速进入状态。\n寻找免费的学习资源 有了路线，就要去找学习资源，付费的电子书和网络教程很多，我想重点说说那些免费资源（抛开盗版不谈），比如著名的动物书出版商 O’Reilly 就有一大堆免费的正版技术类电子书可供下载。\n另外，Youtube上的教学视频质量也非常高，对于快速上手一种工具或是搭建开发环境非常有帮助。（随便一搜就有很多成套的教学视频，不乏官方教学视频，比如 Google Cloud Platform 提供了很多教学短片）\n我在Youtube还意外发现一些 健身Youtuber 们分享的健身教学视频，也非常适合闲暇时间提高姿势水平。\n任务要和时间绑定 完成一个长计划的第一步，是拆解任务。工作中同事们总强调 Tasking （拆解任务）的重要性。要保证完成计划的质量，必须把计划按步骤拆解成可执行和回顾的小任务。相信喜欢折腾GTD之类效率工具的人很清楚其中的意义。但是在没有约束的家庭环境里，光拆解任务可能还不够，更重要的是把任务和时间绑定，给自己一个记录时间的习惯。\n不局限于工具的番茄工作法 番茄工作法固然好，但是市面上很少真正提高效率的工具。手机上的番茄工作法App唯一给我的教训就是增加了我拿起手机的次数。所以我最后矬子里拔大个，选了Toggl 的 Mac桌面版，它自带番茄时钟可以很好的兼顾时间记录和定时提醒功能。我还尝试用NFC贴纸提高我记录时间的效率（主要记录做饭之类碎片的时间）。至于如何使用NFC贴纸，参考这篇《5 个实用生活场景，iPhone 上的 NFC 还能这么用》\n利用番茄工作法的间歇时间做4分钟锻炼 番茄工作法每隔25分钟会有5分钟的休息时间，我通常利用这个间隙来做一组俯卧撑、平板支撑或者深蹲，Keep上有很多4分钟的燃脂训练，拿来配合番茄工作法使用效果更佳。\n把平时忽略的碎片时间统计出来 发呆拖延的时间、做饭的时间，这些工作忙时不太关心的碎片时间，我利用这个大长假把他们统计了一下，我在去年年底制定了一个「2020年告别外卖」的计划。因为平时工作忙，想脱离外卖自己做饭，就要格外注意挑选制作时间短，食材储存容易的饮食方案。我也在Notion里新建了一个项目，来记录做饭的时间、各种食物的优缺点（有点强迫症）。待完成这个计划时我也会整理出来。\n给娱乐时间限量 我平时很少看电视，最近又把吃灰半年的《歧路旅人》拿出来玩，我给自己规定的是每天必须天黑才能打开游戏机，而且玩到20%电量之前必须关机休息。这样每天娱乐时间就不会超过2个小时。\n最近奥斯卡颁奖后，一批电影片单也出来了，不如趁这段时间把2019年错过的好电影也补一补。\n用音乐和灯光隔离出个人空间 我在几个月前发的一篇文章《用一个模型理解什么是注意力的边缘》里已经分析过怎么用「聚光灯效应」和背景音乐来创造专注的环境，对这部分感兴趣的同学可以去阅读一下。\n小结 综上，充分利用假期的时间去充电吧，要给自己指定任务、要有追踪任务的工具，多利用闲暇时间锻炼、多关注平时上班时没空去关注的生活细节，给2019年错过的好东西一个补救的机会。\n","date":"2020-02-17","permalink":"https://sund.site/2020/02/%E7%95%AA%E8%8C%84%E5%B7%A5%E4%BD%9C%E6%B3%95%E5%92%8Ckeep%E6%98%AF%E7%BB%9D%E9%85%8D/","tags":["效率工具"],"title":"番茄工作法和Keep是绝配"},{"content":"苛刻的选址条件 在危机到来时，如何快速建成医院又尽可能降低无畏的成本。首当其冲要考虑的就是选址。选址最重要的是找到具备三个条件的地点：\n 市政系统成熟 交通便利 周边人口稀少  这三点中任何一点都有大批可选择的位置，但是要求三点同时具备就非常苛刻了。并且因为是传染病医院，还要关注供电保障、排水、排气安全和对周边居民的影响。\n历史回顾：2003 年，北京小汤山在历史中留下了重要一笔。它距离最近的居民点 500 米，原为小汤山疗养院所在地，附近是一大片预留的发展用地，四周环境空旷，便于机械化的施工。京密引水渠在小汤山疗养院北 4 公里，可以让污水经过专门处理，不影响到北京市水源。\n兼具「快速」与「实用」的模块化设计 医院的主要功能需求：医患分区分流，洁污分区分流。\n为了满足疫情的需要，医院还要考虑到：施工的标准化、模块化，根据需要可以不断延伸。\n最终方案定为中轴对称的鱼骨状布局。\n医院由多个「H」型模块排列而成。其中，沿中轴线布置办公区域和医护人员通道，每个中心模块负责 4 个护理单元，每个护理单元内安置两列病房（ICU 病房、隔离病房、康复病房等）。\n根据选址地形和现场已有设施，模块排列数量和每个护理单元的长度都可以进行调整。每个护理单元都是独立的标准模块，一方面有利于同时施工，各单位可以独立建好自己的模块后集中拼接，尽量减少交叉作业；另一方面也可以在发生疫情恶化或失火等紧急情况时，将该单元彻底封闭，保全医院其他单元。\n患者从病房外周进出病区，医护人员从中轴核心经层层更衣和卫生通过区进入病房进行检查、治疗和看护。这样的功能结构能够严格控制空气的洁净梯次，保障医护人员卫生安全。\n病房为污染区，医护工作区为半污染区，医护办公区为半清洁区，医护人员值班休息区域为清洁区。医护工作实行单向通过式流程：病房设有双层玻璃的送饭口，病人和医护人员的通道也各不相同，病人是通过病房门前半开放式的走廊通道进出病房，而医护人员则是从专用的工作通道进出。工作人员从清洁区到病房污染区，要经过几道的消毒，三次更衣。\n工程实施 基于模块化设计的好处，医院可以同时由 6 家施工单位同时施工。\n历史回顾：在 2003 年非典时期，设计团队采用了边画设计图边施工。受到场地和材料限制，每一段的设计图纸都有所不同，为了尽快出图，设计团队几乎是 24 小时接力画图。\n小汤山当时主要是用板材，各家施工队使用的材料都不相同。武汉火神山医院这次采购了大量集装箱房搭建病房，统一规格，速度更快。 不过，集装箱下部的钢框架有可能导致病房与外面走廊之间出现门槛。根据小汤山医院经验，虚弱病人轮椅推行、移动式检查设备推行几率较大，要尽可能满足无障碍推行的使用需求。\n武汉火神山医院还加装风扇来控制气流组织，使空气从中间的干净区域向两边污染区域单向流动。\n为保护医院周围的环境不受污染，医院专门新建了污水处理站。病人的衣服、床单出来了以后先通过环氧乙烷消毒，消毒以后才拿去清洗，清洗后的水再进入到污水站处理。此外还有专门的垃圾处理装置对废弃物进行焚烧处理。\n人员管理 小汤山医院当年出台了《院内预防感染工作规则》《出入流程》《防护守则》，共计 3 章 24 节，约 8000 字，印刷成 46 页的小册子，全院人手一册。包含了医护人员的防护穿戴、与病人的交谈距离、洗手要达到 3 分钟、会议要在室外、洗澡流程、清洁程序、垃圾处理条例、生活区行为守则等等。甚至包括交通规则：医护人员在各区之间的行走路线，在污染区面对面行走时如何避让等等。还规定：违反者将受到通报批评，严重者以军法惩处。\n纪念小汤山医院最好的方式是让它成为历史 当小汤山医院的设计师黄锡璆说出「没想到当年的设计图还能用上」时，心情一定很复杂。\n我在凤凰网 7 年前录制的纪录片《非典十年祭》中看到这样一段话：\n 这如同金字塔一般，从上到下的公共卫生模式，原本是为了统一调配资源，抵御各类传染性流行疾病，然而，2003 年的那个春天，它完全失灵了。\n 纪录片的结尾处，一位医生感叹道「再也不可能（出现）像SARS那样的情况了」。\n希望这用无数人命堆砌出来的经验，不要下一次面对危机时再次失灵。\n我们应该从历史中学会的，不能仅是如何重建一座医院。\n","date":"2020-02-05","permalink":"https://sund.site/2020/02/%E5%A6%82%E4%BD%95%E7%94%A8%E4%B8%83%E5%A4%A9%E9%87%8D%E5%BB%BA%E5%B0%8F%E6%B1%A4%E5%B1%B1%E5%8C%BB%E9%99%A2/","tags":["日常记录"],"title":"如何用七天重建小汤山医院"},{"content":"Ted Chiang（姜峯楠）的小说《双面真相》里有个主人公吉金基，他出生于部落，从小跟着欧洲殖民者学习写字，是部落里唯一识字的人。有一天欧洲殖民者要求多个部落必须按照血缘关系合并起来，以方便殖民管理。部落长老赛维认为自己的部落和临近的部落是同一个祖先，所以应该合并在一起，但是另一个部落却不同意这种说法。\n吉金基想到欧洲人最早来到这里时采访了当地许多老人，那些如今已故的部落老人想必知道自己的部落究竟是谁的后代吧。于是，吉金基跑去殖民者的营地找到了当年的记录，根据记载，长老赛维确实记错了自己的祖先。\n回到部落后，赛维却不同意吉金基的看法，他认为吉金基的头脑已经被欧洲人同化了。「欧洲人只相信纸面上的文字，而不重视此时此刻部落里人们的感受。至于部落的祖先究竟是谁并不重要，重要的是当下的部落里同族们的共同利益」。\nTed Chiang 在后记里说，人们在「书面文化」出现之前一直延续的是「口头文化」，比起书面文化更重视文字记录的事实本身，口头文化更重视「此时此刻人们的感受」，真相可以随时修改变化，以适应人们的情感需要。\n谣言也是一种口头文化，他没有确凿依据，凭借人们口口相传。\n谣言承载了人们此时此刻的感受。把「不信谣，不传谣」当作一种正确的人，可能忽略了谣言的这一重作用：谣言是真相模糊环境的必要补充，是一群人，面对现实的头脑风暴。\n 公众有权质疑、批驳任何报道乃至政府公告的真实性，公民发短信或者转发相关帖子，即使有不实之处，也应被视作自保或者行使监督权，政府部门只能用更加公开透明的信息来平息大家的忧虑，消除不实之言。 ——胡泳，《谣言，作为一种社会抗议》\n 同样，知乎用户 @韦易笑 的评论：\n 不传谣本身就是一个严重的传播学悖论，一条未经证实的信息，恰恰需要通过广泛传播、反复交叉比对，最终才能证实或者证伪，去伪存真，辨邪留正。所以未经证明的消息只能称为流言而不是谣言，除非有人故意造谣，这当然有罪，明知是谣言还传播当然也不该，但自己主官判断为真又无法证伪的话，传播无可厚非，因为大部分人只有能力证明自己专业领域内的流言是否是属实，对于专业领域外的流言，只有能力传播没有能力客观鉴别。如果严格要求所有人无法证明就不能传播的话，那么消息就无法通过充分交流比对而去伪存真，大家每天说话的内容也只是不断的重复zf通稿和砖家权威的发言，从而丧失任自我辨别的能力。\n 你还为「不造谣，不传谣」背书，可能就要提防自己是否过度依赖权威，丧失了亲自辨别真相的能力。\n","date":"2020-01-27","permalink":"https://sund.site/2020/01/%E8%B0%A3%E8%A8%80%E7%9A%84%E5%88%A9%E4%B8%8E%E5%BC%8A/","tags":["日常记录"],"title":"谣言的利与弊"},{"content":"双拼输入法是什么？ 「双拼输入法」类似于我们大多人使用的全拼输入法，也是一种基于汉语拼音的汉字输入方案。\n让我们先来复习一下小学的知识😂，任何一个汉字都有对应的拼音，拼音由声母和韵母组成。\n声母除了zh，sh，ch之外，都是由单个字母表示。例如「拼」字的声母p。\n韵母通常由1到4个字母组成，例如拼字的韵母就是in。\n通常大家用的全拼输入法，韵母部分要全部打出来（现代输入法通常可以智能联想，但是大多数情况下都需要你打出大部分字母），比如输入「拼」你需要打三个键p，i，n。\n双拼输入法就是为了解决全拼输入法在输入韵母时低效率的问题。双拼的开发者试图把汉语拼音的全部韵母映射到键盘的所有按键上，这样每次输入一个汉字，只需要输入两个按键（声母+韵母）。\n例如，我把ing映射到键盘的字母K上，把ang映射到字母H上。输入「乒乓」时就是下面的效果。\n现在比较流行的双拼方案有很多，我选择了比较受大家青睐的小鹤双拼方案。它的键盘布局是下面这样的（初次看你可能会觉得不适……别急，读完这篇文章学起来就会很轻松）。\n双拼输入法能提高打字效率吗？ 学习之前我们通常有个疑问：这玩意真能提高打字效率？\n我带着这个疑问，找到了一个测试汉字打字速度的网站，我通过一个月的使用，对比了前后的输入速度，得出的答案让我确信写这篇文章能够帮助你通过双拼提高打字效率。（不要吐槽我每分钟字数太少，测速网站采用了古诗词作为输入，一定程度上屏蔽输入法智能联想的效果。你可以亲自去尝试一下😛）\n（KPM=每分钟按键次数，BPM=每分钟退格次数）\n开始学习小鹤双拼 学习知识之前，先了解它的原理会帮助我们更容易记忆它。理解原理看似是增加了额外的负担，但是死记硬背的知识往往难以形成结构化的记忆，很容易遗忘。\n学习小鹤双拼前，我们先要了解三件事：\n 声母的按键规律 韵母的按键规律 键盘布局的规律  声母的规律 前面提到，汉语拼音声母大多数是单个字母，除了三个特别的zh，sh，ch。小鹤双拼和全拼一样，直接按字母键就可以输入对应的声母，那三个特别的声母映射到键盘的V，U，I上。\n之所以映射成zh=V，sh=U，ch=I，是考虑到两个因素：\n 这三个字母（V，U，I）都没有对应声母 这三个字母距离食指和中指都比较近  那有人要问了，为什么不把zh放在Z上，ch放在C上，sh放在S上，这样更好记忆呀？这是因为会造成输入的不一致性。比如O对应的韵母是uo，你输入了ZO，那输入法就无法分辨你输入的是zhuo（捉），还是zuo（作）。如此一来就违背了双拼输入法一个汉字只要输入两个键的原则。\n所以，声母部分，你只要记住，zh，sh，ch，对应的是V，U，I就可以了。其他和全拼一毛一样。\n韵母的规律 汉语拼音的韵母有一些很特殊，例如ua 和ia前边的声母是互斥的。以jia（加）为例，你肯定没听过jua的组合（可能小岳岳除外😂）。所以ua和ia前边的声母不可能是同一个字母，那么即使把这两个韵母放在同一个按键上，也不会出现输入汉字时的混淆。\n符合这种规律的韵母一共有7对，小鹤双拼的按键分布是下面这样的。\n为了方便记忆，小鹤双拼让每个按键对应的声母和其中一个韵母能组合成有意义的汉字发音。所以你只需按口诀或文末提到的练习工具针对练习即可，其中需特殊训练的只有上面的7个按键。\n有一些汉字没有声母（零声母），这种情况只要会全拼输入法就可以一秒解决：\n单字母韵母，如： 啊＝aa 哦=oo 额=ee\n双字母韵母，如： 爱＝ai 恩=en 欧=ou\n三字母韵母，零声母+韵母所在键，如： 昂＝ah\n键盘布局的规律 一些不太常用的韵母，小鹤双拼的作者把它们放到了键盘的边边角角，例如iu，ie，ou，我起初很容易忘记，偶尔用到也想不起这些韵母的位置。所以这三个特殊按键，我在键盘上用蓝色高亮标记起来。结合上文提到的特殊按键，这个键盘看起来就是这样三层结构：\n 第一层是声母，其中特殊的（红色高亮）是V，U，I 第二层是韵母，其中特殊的（黄色高亮）是T，O，S，K，L，X，V 第三层是易忘按键（蓝色高亮），它们分别是Q，P，Z  你可以把这张图保存起来，放在桌面壁纸里或是打印出来放在键盘前边，练习时用来对照。\n记忆工具 小鹤双拼官网提供了多种练习工具。你可以微信扫一扫这个小程序，随时用手机练习。\n桌面端推荐一个在线的网页双拼练习工具，地址是 https://api.ihint.me/shuang/。\n测试工具 为了测试打字速度，你可以使用上文提到的在线网页打字测速工具，地址是https://dz.wubidz.cn/。\n小结 本文以小鹤双拼为例，为你分析了汉语拼音组合原理和双拼输入法的映射规律。未来你在学习任何拼音输入法时都可以按照这种规律，以分层结构提高对键盘布局的认识。\n从练习时间角度，掌握双拼要一周左右，超过全拼打字速度也只需要两周多。所以双拼是非常值得学习的输入方案。\n目前所有平台都有比较成熟的双拼输入法App，例如iOS和Mac系统自带的双拼输入法、Google的移动端输入法Gboard。某些国产输入法，在我的测试下经常会出现「过度联想」的问题，比如输入一个字母，自动联想出一个甚至更多汉字，这和双拼输入法一个汉字两个字母的敲键节奏稍有违背，我个人倾向于在移动端使用Gboard或默认输入法。\n你若有更好的想法和推荐，欢迎在留言区留言。\n","date":"2020-01-19","permalink":"https://sund.site/2020/01/%E5%A6%82%E4%BD%95%E7%BB%83%E4%B9%A0%E5%8F%8C%E6%8B%BC%E8%BE%93%E5%85%A5%E6%B3%95/","tags":["效率工具","输入法"],"title":"如何练习双拼输入法"},{"content":"木匠的工具箱 偶然在宁波博物馆发现一个箱子。这是木匠的工具箱，有点像很多格子的单肩包。外侧可以放几把不同尺寸的刨子，内侧用来放锯子和一些长柄的工具。下层的抽屉还可以放些锉刀、凿子之类的小物件。\n有了它，木匠就可以拎包上门。过去很多行业的手艺人都有一套这样的工具箱。木匠比较不同的是，这个箱子本身也是木制的，这个箱子就是他展示给客户的第一印象，箱子本身代表了木匠的能力和喜好。\n现在搞技术的人，也是手艺人，但已经很少把自己的「工具箱」秀给别人看了。\n我前几天跟鲍勃聊天，他最近一直忙着装修自己家。他家全部是由他亲自设计的。虽然家具不是他做的，干活儿的也是请来的工人，但是那些方案的确是出自他的脑袋，所以说是他亲自装修也一点都没错。\n那是什么决定了哪些东西是你买来的，哪些是你自己设计的呢？重要的一定不是物品怎么被造出来，而是物品里有没有包含你的思考吧。当一堆零件通过你的智慧彼此关联在一起，产生了「整体大于局部之和」的效果，这个物品就具有了你的一部分主张。\n任何物品里都有设计者的主张，服务也不例外。\n我经常觉得宁波的地铁和餐厅的服务十分不友好：明明服务人员就在旁边站着，你向他求助，他却只会告诉你去扫一下二维码。强制你扫二维码的服务，它们背后的主张都是\n 为了省点人力成本，就暂且给你添点麻烦吧。\n 清淤船和ASMR 经过宁波老外滩，看到清淤船在江上作业。围观的路人有几十人，都看得兴起。\n看着清淤船从江里把淤泥挖出来，再倾倒在旁边的船上，莫名有种视觉ASMR的感觉。好像人天生就对「疏通」这件事会有快感（比如挖鼻孔🤣）。\n巧合的是我之前很喜欢听静电容键盘敲击的声音。好像两手紧握再松开时，空气从两手中间被挤压时发出的声音。我经过宁波博物馆附近的一处马路，突然听到汽车经过石头路面时发出的声音，竟然有些相似。\n点击收听\n","date":"2020-01-05","permalink":"https://sund.site/2020/01/%E5%AE%81%E6%B3%A2%E8%A7%81%E9%97%BB/","tags":["日常记录"],"title":"宁波见闻"},{"content":"养成写作的习惯，会使人生获益无穷。写作可以让我们避免浅显的认识，在搜索引擎几秒钟就能得到答案的时代，学会向自己提问是深度思考的第一步。我真的理清脉络了吗？是不是像我认为的那样？写作者分享思想，同时也帮助自己思考。\n写作让我们在和他人交流时懂得去理解，不是急着去回应。常写作的人会时刻收集素材，养成倾听的习惯。写作的人喜欢片刻的沉默，胜过表面的热闹。\n会说话的人就会写作。很多人拒绝写作，是觉得自己文笔不好，其实白话口语一样能写出好文章，精巧的构思，敏锐的嗅觉，缜密的思考，哪一种写作风格都有适合自己的路。\n三个月前，我开始刻意培养写作的习惯。这篇文章，我要与你分享这段时间的心得，这些话，有的来自我个人的体会，有的是来自记录的笔记，有的出自著名作家、编剧，我把它们整理出来，希望帮你启动写作之旅。\n写文章的关键是什么？ 诗人彼得·迈因克说，文学的表现力来自专注、巧妙和精细。\n每篇文章都要专注于一点，这一点就是主题，内容都在围绕这一点展开。想象一本书带给过你的感受，那就是它传达给你的主题，论文里它是论点，故事里它是基调，评论里它是观点。\n文章还要巧妙地搭建结构，像电影导演的运镜，把观众的视线引向你希望的方向，带领读者走向你预设的终点。\n好的文笔是精细的提炼，字斟句酌的金句，给读者的是惊喜，是寻常的陌生感。\n如何寻找主题？ 关注每个细节，每个引起你兴趣、兴奋、疑惑、恐惧、异物感的东西。读书是最简单的方法，除此之外，留心生活中有趣的短文、诗句、格言、广告、寓言、祈祷、标语、微博、短信……都是灵感的源泉。不把自己的生活局限在网络上，线下和朋友交流，参加有趣的活动、认识有趣的人、体验不一样的生活，都能让你产生写作的冲动。\n不断向自己提问，即便是再小的问题，也有无限挖掘下去的潜力。不断提出问题尝试去回答！搜索网络、求助他人、翻阅资料，总之在写出答案之前，你一定是深思熟虑过，不要给读者向你提问的机会，穷尽所有可能的路径、绞尽脑汁，这样的文章才是系统性思考过的、有价值的，对得起自己和读者的。\n一旦养成这样的习惯，不只是写作，生活的一切都从日复一日的重复中苏醒过来了。\n如何搭建文章的结构？ 有了主题，接下来的任务是布局，美感出自秩序。生活是个局，工作也是个局，你的文章更是让读者短暂逃离现实的局。\n首先，开头请一定要激发读者强烈的兴趣，可以设置一个谜题让读者自行去文中寻找答案；也可以是一个具体的场景，让读者身临其境后逐渐察觉异样。请看小说《追风筝的人》的开头：\n 我成为今天的我，是在1975年某个阴云密布的寒冷冬日，那年我十二岁。\n 是不是让人很好奇，想要读下去。即使你的文章是知识分享，也要注重故事性，从古至今流传下来的道理，都蕴含在故事里。\n其次，不要倾倒细节，要有一个看不见的线牵引着读者，可以是时间、空间、疑问。如果你要抛出一个观点，就全文都以这个观点为核心，让所有文字都通向那个观点；如果你要构思一个的故事，请把故事的结构隐藏起来，让读者自行去发现。\n例如在《白夜行》中，两位主角活在各自的世界里，东野圭吾用并行故事线构成了看不见的线索，让读者自行脑补两人关系，画出故事的来龙去脉。所以，请把发现真理的过程交给读者。\n最后，既要让文字满足读者期望，又不可预测。这要求乍看有点奢侈。人们不喜欢在故事里重复生活，也不喜欢完全脱离生活的故事。请不要平铺直叙，更不要太跳脱，要给读者制造舒适区，再打破它。读文章就像谈恋爱：「男人彻底地懂得了一个女人之后，是不会爱她的」。（出自张爱玲的短篇小说）\n如何锻炼文笔？ 文笔是锦上添花，开始写作前请不要纠结，尤其是知识分享、论述观点类文章，比文笔更重要的是逻辑。\n第二，一句自我介绍，一条微博，都是最小粒度的写作。每次发微博、Twitter、朋友圈，都请字斟句酌，变成语言的艺术家。\n 有些词语的周围需要全然安静，给它们足够的空间，就好比照片，有些照片周围不需要陪衬。\n——阿摩司·奥兹\n 每次写作，请有意识地删除多余的副词、形容词，如果写故事，把那些形容感受的词（如「沮丧」、「快乐」）替换成具体的动作和神态。原研哉在《设计中的设计》说，「我们通常所说的五感，是非常不准确的，用指尖轻轻触碰的触感，和用手用力按压的触感肯定是不一样的」。所以，请去描写感受，不要概括感受。\n最后，请熟练使用口语写作，避免官方用词。尤其练习使用俗语、方言、俚语或其他习语。在我们国家，经常看到：「只有……才能」、「坚决落实」、「时刻牢记」。请把这些短语从脑袋里清出去，除非你打算写反乌托邦题材……\n写在最后 上面这些技巧，都是写作的外功，要理解它的内功，还是要长期保持写作者的心态。写作是一种自我重建——这句话出自新京报的一篇文章《纪念王小波》，我非常喜欢下面这段话，最后分享给你：\n 对一个人来说，过去那种统一式教育所打造的自我，是一种童稚状态，人只有通过自我的重建，才能走向成熟。这种重建是一种孤独的旅程，一旦开始，就注定没有终点，你将作为「一个人」而不是「我们」中的一员，来面对世界。\n ","date":"2019-12-28","permalink":"https://sund.site/2019/12/%E4%B8%80%E7%AF%87%E5%BF%83%E5%BE%97%E5%BC%80%E5%A7%8B2020%E5%B9%B4%E5%86%99%E4%BD%9C%E4%B9%8B%E6%97%85/","tags":["写作"],"title":"一篇心得，开始2020年写作之旅"},{"content":"1965年，泰德·尼尔森（Ted Nelson）在提交给美国计算机协会的论文中提到一种将各种内容链接在一起的技术——超文本（Hypertext），如今超文本俨然已是互联网大厦的基石。但人们熟知的超文本和当初尼尔森预想的样子却有着天壤之别——在尼尔森的脑海中，一个失落的平行世界里，有着万维网的另一种可能。\n泰德·尼尔森 尼尔森从小就是个爱幻想的孩子。深受导演父亲的影响，尼尔森酷爱写作，但他厌恶线性、渐进式的叙事结构，他希望所有资料都以一种混乱的，流动的形式保存起来。这样，每当他需要这些资料时，他就可以随时重建它们。如今已经80岁的尼尔森仍保存着数千小时自己的录音和录像，以备后人理解他的想法。这些录音和录像，同样也是没有目录结构的……\n层级结构是邪恶的 尼尔森把对传统结构的抵制延续到了计算机时代。1960年，尼尔森在哈佛读研究生期间试图自己编写一个拥有「并排比较」、「版本回溯」和「按大纲修改」功能的写作工具，但因为非科班出身和学业繁忙，最终放弃了开发。当时哈佛大学正在开发一套计算机辅助教学系统，尼尔森觉得那种线性的、机械的教学系统，是对计算机和教学的双重侮辱。思维应该沿着不同的路径探索，而不是以结构定义好的方式。\n尼尔森在90年代曾对苹果公司的 Macintosh 操作系统也持有同样的评价：\n   在我看来，Macintosh 和 PC 没有差别。Macintosh 的交互做得更好，但是它和 PC 都是一样的概念结构，都是由 PARC 用户界面（PARC User Interface, PUI）与普通的层级架构目录（即如今所说的「文件夹」）组成。\n  他们告诉你文件是分层级的；最基础的程序就是文字处理、数据库与电子表格；你必须使用「应用」；你必须费力地把自己真正想做的事处理成层级架构的文件，用「特定的应用」打开它们。实际上，这些陈述都夹杂着谎言。他们描述了计算机的现况，但没说它可以是什么样，又应该是什么样。\n  ——摘自《离线 OFFLINE》ISSUE 23，上都计划——失落的超文本，泰德·尼尔森语录\n 尼尔森的超文本设想 时间回到1965年，尼尔森把自己的设想——一个由「超文本」和「压缩列表」技术构成的非顺序写作系统，发表在了全国计算机协会的论文中。起初这篇论文并没有引起太多人关注，但超文本这个词却意外被历史保留了下来。尼尔森在不久之后发起了名为「上都计划」的项目。上都（Xanadu）的名字来自诗人萨缪尔·柯勒律治（Samuel Taylor Coleridge）在他的诗中幻想的忽必烈在元上都修建的雄伟宫殿。\n 忽必烈汗在上都造建，富丽堂皇的穹顶宫殿，伴有圣河阿尔佛，穿过深不可测的岩洞，一直流入无光之海\n——萨缪尔·柯勒律治\n 在尼尔森的构想中，上都计划是一个拥有非线形结构的交叉索引系统——\n 任何媒体内容双向链接，可以在平行文本之间自由跳转，一直追溯到内容的源头 拥有深度的版本管理，每次对文本的修改都以版本号记录下来，以便追溯变更历史 版权授权机制，由于历史可追溯，所以内容理论上都可以追溯到原作者 可视化的差异对比，不同版本的内容可以比较差异，基于原文的修改可以同步到引文 创作者可以基于已有内容进行增量出版，类似滚动更新机制  尼尔森认为，层级的目录结构是一种专制。创作者应该时刻与媒体内容保持联系，而不应该关心它保存在哪。在尼尔森的理想里，文件夹是罪恶的，基于文件夹的树形目录结构更是丑陋。它代表了人类根深蒂固的层级观念在虚拟世界的投影。建立于层级观念之上，思维只会被束缚，真正的计算机，应该给予人类自由。\n尼尔森更不喜欢别人用基于超文本概念创造出来的HTML（HyperText Markup Language，超文本标记语言），尼尔森批评道：\n 它（HTML）的链接容易失效且只能单向链出，它的引文无法追溯，没有版本控制，也没有版权管理系统。\n 几经辗转，在资金等各方面条件都极其匮乏的情况下，上都计划在2014年终于发布了一个功能不完备的演示版本，我们可以在浏览器访问上都计划的官网查看它的最新状态。尼尔森还开通 Youtube 频道 TheTedNelson 给大众布道，可惜截止到我写下这些字的时候，订阅人数还不足6000，在中文世界更是鲜有人报道。\n如今的万维网已技术沉淀多年，尼尔森的计划在不少专业人士看来，如柯勒律治的诗一般，只是天方夜谭。\n 超文本不是技术，是文学。文学是指那些我们包装并存储的信息（一开始是书籍、报纸和杂志，现在还有电影、录音、CD-ROM 等）。未来的文学类型决定了人类将被如何记录和理解。这些还轮不到「技术专家」来操心。\n——《离线 OFFLINE》ISSUE 23，上都计划——失落的超文本，泰德·尼尔森语录\n 对当今互联网的启发 在现在的互联网技术体系内，尼尔森的理想几乎不可能成为现实。但就像《人类简史》里的尼安德特人，种族虽然消亡，基因却融入了智人的血脉。上都计划以另一种形式融入了现在互联网的产品中。\n上都计划在当时提出的概念是相当超前的，我们可以在很多工具中找到它的影子。\n它给我的第一印象是一个文字处理的IDE（集成开发环境），它具备了当代IDE的大部分特性，并且非常有前瞻性的提出了基于版本的授权机制，这和现在不少基于区块链-智能合约的版权管理项目有异曲同工之妙。\n同时，上都计划也在试图打造一个类似 Scrivener 卡片或印象笔记素材库的非线性写作环境，泰德·尼尔森在很早就预见到当时计算机书写环境的弊端，并对后来微软和苹果推出的办公软件嗤之以鼻。他有着那批60年代「老极客」的开放精神，推崇 Unix-like 「一切皆文本」的管理方式和滚动增量更新的系统机制。\n不少人会第一时间想到 Notion，它也有着尼尔森所谓的非层级、链接一切媒体内容的能力。不可否认 Notion 的确优秀，但它本质还是基于 web 技术的链接跳转，它并不符合尼尔森的对内容双向索引的要求。尼尔森的终极理想，是一个有版本控制的互联网。\n写在最后 写这篇文章前，我又翻看了《离线》在第23期关于上都计划的介绍，结合我之前写的那篇《我们的隐私被谁拿走了？斯诺登的新书告诉我们的真相》，赫然发现不同时代的 Hackers 想要打造的乌托邦和现实世界之间存在一个巨大的鸿沟，那里面是理性的力量想要改造混乱世界的强烈冲动。可现实往往不遂人愿，假如尼尔森的上都计划被用来煽动仇恨、传播犯罪，那时他又将怎样面对呢？理想终究要面对各种不确定的因素考验吧。但尼尔森对互联网种种弊端的质疑，仍然对现在的我们有启发。\n上都计划固然脱离现实，但它的存在本身就是对僵化世界的反抗，犹如古希腊哲学家描绘的理想乡——凡人仰望那绮丽的幻境，模仿它的样子改造自己的家园。\n","date":"2019-12-15","permalink":"https://sund.site/2019/12/%E4%BA%92%E8%81%94%E7%BD%91%E6%9B%BE%E7%BB%8F%E6%9C%89%E5%8F%A6%E4%B8%80%E7%A7%8D%E5%8F%AF%E8%83%BD/","tags":["技术文化"],"title":"互联网曾经有另一种可能"},{"content":"斯诺登的自传《永久记录》已经上架各大阅读平台。这本书让斯诺登的名字从棱镜门之后又一次出现在了公众视野里。书里按时间线叙述了他的童年和工程师父亲学习计算机，到他加入中情局，最后曝光棱镜计划出逃俄罗斯的全过程。这本书是一个青年成长为公民，并用自己的勇气揭露科技霸权的心路历程。我特别注意到这部书里提到了一个概念——个人信息的元数据，元数据是一个人在网络上留下的痕迹，不管是对情报机构，还是对商业公司，都是要极力获取的重要信息。\n元数据是我的聊天内容或个人资料吗？ 元数据不是你聊天的内容也不是你的资料，更不是你在网上发布了什么消息，元数据是更底层的数据，斯诺登在书里这样描述它：\n 最直接理解（元数据）的方式是活动数据：你在设备上从事活动、手机自动运行的记录。举例来说，手机元数据可能包括：来电日期与时间、通话时长、来电号码，通话位置……\n 通过分析你不同设备的元数据，监视者能得知你昨晚入睡与今早起床的时间、每天逛了哪些地方、在哪里待了多久，以及你接触过的对象有谁，谁又与你联系过。\n为什么你的元数据如此重要？ 事实上，元数据不仅仅赋予了数据监视者全面窥探你隐私的权利，在2002年斯皮尔伯格拍摄的电影《少数派报告》中有这样的桥段（有剧透）：未来的某一天，人类能够利用计算机预测可能的犯罪，并在「嫌疑犯」准备实施犯罪前进行抓捕，幕后黑手利用这一机制构陷男主角，使其成为系统认定的抓捕对象。\n科幻故事离我们太远，你可能觉得现实中没有这样的系统。那么请看一些事实吧：\n 我国征信系统已为9.7亿自然人建信用档案 无偿献血、公租房申请、ETC欠费、乱闯红灯、频繁跳槽等行为纳入个人征信系统 中国安装了1.76亿个监控摄像头，这市场还在增长 社交软件 Instagram 被怀疑窃听用户麦克风 Facebook 承认监听用户语音，将语音资料转录为文字 ……  斯诺登在《永久记录》中提到，美国中央情报局的监控系统，可以随时打开全球任何人的摄像头、麦克风和查看电脑上正在做的事、调查他的上网记录、孩子的入学申请……一些中情局同事甚至用截取到的女性裸照作为内部的「流通货币」彼此交换。\n机器并不像人一样学习，人工智能也没有真正的智能 下面我想站在另一个角度审视当年的棱镜门事件。现代信息技术发明了一些词汇方便我们理解技术的含义，比如人工智能、机器学习，其中最有迷惑性的是「预测」。王垠的文章《机器与人类视觉能力的差距》解释了机器所谓「识别」并不是真的「理解」。用斯诺登的话说：计算机的预测，仅仅是对数据的一种操弄。 就像《少数派报告》的故事一样，最终决定机器的预测结果是否正确的关键，还在于人——掌控着机器的那些人。技术名词在迷惑我们的同时，赋予了科技公司和大型机构更多权力，冠以科技发展之名。\n 每个人都是潜在的罪犯：尽管我们自己没有察觉到，但多数人的生活绝不是黑白分明的，我们会任意穿越马路、未做好垃圾分类、在人行道骑自行车，甚至非法下载盗版等。换句话说，一旦法律贯彻到底，所有人都会变成罪犯。\n——爱德华·斯诺登，《永久记录》\n 怎么保护我的元数据（个人隐私）？ 如果你也意识到了个人隐私的重要性，那么是时候做点什么保护自己了。在当下，个人想要完全隐藏自己的上网行为几乎是不可能的。这也是为什么美国爆出棱镜门之后，全世界各国都把保护个人信息提上了政府议程。但是我们仍然可以通过一些手段，提高监视者作恶的成本。我为你整理了一些工具和上网习惯，它们只是给你提供一种思路，希望你能不局限于这些手段，在便利和隐私之间寻求到属于自己的平衡。\n使用反追踪的浏览器插件 每当你点击一个网站页面，大部分网站会悄悄给百度、Google 等公司发送你的上网行为信息，隐私獾（Privacy Badger）这个浏览器插件能帮你屏蔽掉广告和用户行为追踪。\n确保所有通讯数据都有加密 从棱镜门之后，全世界大部分网站都提供了 Https 方式的数据加密访问，如果你访问的陌生网站没有支持 Https，请尽量不要把任何个人信息交给它。\n聊天软件是除了浏览器之外第二大上网工具，一天世界曾经整理了一个聊天软件安全性的表格，请参考选择适合自己的聊天工具（「人生最痛苦的是梦醒了无路可走」——鲁迅）\n尽量不填写真实的个人信息 很多网站都要你提供个人信息，请遵守「如非必要，一律虚构」的原则。\n最近微信更新了一个保护隐私的功能，你可以在微信第三方登录时选择随机生成的昵称和头像，不妨试试。\n去除照片 EXIF 信息 你拍摄的照片里隐含了你的位置和设备信息，有新闻报道犯罪分子利用照片 EXIF 信息追踪女性家庭住址。提供类似功能的工具很多，日常用微信传照片给陌生人，记得不要发送原图。\n尽量不用公共 WiFi 值得一提的是，自己家的 WiFi 也时不时换一下密码。现在随便下载个黑客软件进入你家 WiFi 截取你流量搞个中间人攻击根本没有技术含量。\n「盯紧」摄像头 以前某个国产社交软件后台启动摄像头，并把视频传到网络上。现在都能搜到当年泄露的部分女孩子只穿内衣，在不知情时拍摄的视频。请在非必要时，不给任何 App 摄像头、麦克风或任何读取你敏感信息的权限。\nDNS over HTTPS 虽然你访问网站的流量是被 HTTPS 加密了，但是你访问任何网站前，你的设备会请求 DNS 服务器解析网站域名（好比邮寄信件时，邮局把你的邮编解析成真实的地区），这些信息被不法分子（？）拦截篡改，会误导你访问到不相关的地址上去。所以最近 Firefox 和 Chrome 两家浏览器都内置了 DNS over HTTPS 功能，开启后加密所有 DNS 域名解析流量。但是前提是你的 DNS 服务器也支持，你可以尝试 Cloudflare 的服务，其DNS地址为 1.1.1.1。\n斯诺登用了哪些工具 作为中情局的高级技术人员，斯诺登自然有一套更加严密的工具来保护自己。普通人虽然用不到，但有更高匿名需求的人可以参考一下。\n匿名通信的洋葱路由 Tor 它可以利用 Tor 节点帮你隐藏掉 mac 和 ip 地址，但是也并不是无懈可击，比如伪装的 Tor 节点就可以暴露你的全部流量，所以一般要配合代理使用。不建议没技术背景的人尝试。\n关机即焚的操作系统 Tails 这个系统所有的外部通信均强制通过 Tor 进行传送，此系统设计为使用 Live DVD 或者 Live USB 进行引导，且不让计算机在非显式行为下留下数据痕迹。\n双向加密电子邮件服务 Lavabit 电子邮件默认是不加密的，很多人都不知道这件事。斯诺登在联系记者时，让记者配合他，一起使用了 Lavabit 来双向加密电子邮件。\n不使用固定的 WiFi 斯诺登自己开发了一套系统，可以自动劫持附近 WiFi 的流量。这好比，你寄送一封信，但是你不想让别人知道你是谁、寄给了谁，于是你把这封信塞进别人信封里寄出去……原理要更复杂，斯诺登在把丑闻资料传递给记者时，就独自开车在附近街区，使用随机 WiFi 夹带自己的信息发送给记者，以此保护自己的行踪不被中情局监控到。\n多份数据，防止「单点故障」 斯诺登将多份机密资料交给多名记者。目的是防止某个记者因为特殊原因在他被捕前没有及时将丑闻公之于众。他这份缜密和勇气，真的不是寻常人能够做到的。\n写在最后 我们在使用互联网提供的种种便利的同时，也应时刻记得，那些我们上传的照片、发布的信息，都存储在不属于我们的服务器上，我们所有分享在网络上的一切，本质上都不属于我们。\n 在美国革命时期，这被叫做「自由」；在互联网革命时期，这被叫做「隐私」。\n ","date":"2019-12-08","permalink":"https://sund.site/2019/12/%E6%88%91%E4%BB%AC%E7%9A%84%E9%9A%90%E7%A7%81%E8%A2%AB%E8%B0%81%E6%8B%BF%E8%B5%B0%E4%BA%86/","tags":["读书"],"title":"我们的隐私被谁拿走了"},{"content":"凯文凯利在《失控》中有一句话：\n The nature of life is to delight in all possible loopholes. Every creature is in some way hacking a living by reinterpreting the rules.\n 生命的本性就是喜爱一切可利用的「漏洞」，每个造物都在通过重新诠释规则来谋求生存。\n无独有偶，《列子·天瑞》里有一个故事。宋国的向氏问齐国的国氏，如何变得富裕。国氏就说：「吾善为盗。始吾为盗也，一年而给，二年而足，三年大穰」，向氏一听原来诀窍就是盗，就去学着入室偷窃，结果被抓住问罪，家里的财物都被没收了。\n向氏气冲冲地跑去质问国氏，国氏解释说了下面这段话。\n 吾闻天有时，地有利。吾盗天地之时利……夫禾稼、土木、禽兽、鱼鳖，皆天之所生，岂吾之所有？然吾盗天而亡殃。\n 原来国氏所谓「盗」，并不是盗窃财物，而是盗天地之时利。这里的盗字，正好对应了英语里的 \u0026ldquo;Hacking\u0026rdquo;。凯文凯利的 \u0026ldquo;hacking a living by reinterpreting the rules\u0026rdquo;，正是列子所谓「万物自天成，盗者本无心」。\n","date":"2019-12-05","permalink":"https://sund.site/2019/12/kevin-kellys-hacking-%E5%92%8C-%E5%88%97%E5%AD%90%E5%A4%A9%E7%91%9E%E7%9A%84%E7%9B%97%E4%BA%A6%E6%9C%89%E9%81%93/","tags":["技术文化"],"title":"Kevin Kelly's Hacking 和 《列子天瑞》的盗亦有道"},{"content":"以前手抖买了台 Dell P2416D 显示器，接上 Macbook 发现原生的分辨率设置在 2K 显示器上字体很小，换成 1080P 分辨率显示效果又特别模糊。上网查了一下发现可以为 Macbook 强行开启 HiDPI。下文的教程结合了 Github 上用户ZeRo° Xu 在 一键开启HiDPI脚本 里的 Github Issue 和一篇博文 《为 mac 连接的 2k 显示器开启 HiDPI》。\n什么是 HiDPI 引用自 Github 用户 ZeRo° Xu ：\n 它使用横纵 2 个物理像素也就是 4 个物理像素来显示 1 个像素区域，结果就是图像的细节得到翻倍、更清晰、边缘更平滑。\n拿 13 寸的 MacBook Pro 举例，它的屏幕物理分辨率是 2560 x 1600，所以原生的 HIDPI 分辨率就是 1280x800。更高的一档 1440x900 hidpi 缩放分辨率，则是虚拟出一个 2880x1800 的分辨率，再进行软缩放输入。所以你能发现苹果的电脑总是有很高的分辨率。\n好了，既然你的屏幕是 1080p，本身就没有那么多像素去合成 HIDPI，如果以原生的显示计算，你这屏幕的 1080p 分辨率应该是 960x540，这么低的分辨率你是没法用的，所以就有了这个脚本。\n这个脚本的功能是虚拟出比你的屏幕物理分辨率更高的假分辨率，也就是你看到的 3360 x 1888，这样你就可以使用 1680 x 944 hidpi 这个缩放分辨率了。\n如果你要开启 1080p 的 HIDPI 分辨率，就虚拟一个 3840 x 2160 的假分辨率，然后 MacOS 会使用 4 个像素来显示 1 个像素区域，也就是和你物理分辨率一样的 1080p 分辨率，开不开启看起来没任何区别，最大的效果就是显卡压力增大系统变卡、截图可以得到高分辨率图像。\n 自动配置 HiDPI 上文 链接 里提到一键配置脚本，你不妨先按照脚本的步骤开启 HiDPI 试试。但是脚本并没有适配所有显示器的情况（至少我的 Dell P2416D 使用后无效），所以就有了下面的步骤。\n手动配置 HiDPI 本教程测试环境：\n 笔记本：MacBook Pro (Retina, 15-inch, Mid 2015) 显示器：Dell P2416D 操作系统：MacOS Catalina (Version 10.15.1)  0. 安装 RDM 相信很多人已经装过这个工具了，它是用来修改显示分辨率的，如果没装，请在RDM下载页面安装它。\n1. 关闭 Mac 的 SIP SIP 是苹果公司为防止你胡乱篡改系统文件用的保护机制，请先按照下面步骤把它关闭，以便后续操作：\n 关机（最好先手机拍个照把这4步记录下来） 按command（⌘）+ R+电源键开机，自动进入恢复模式 选择上边菜单栏的实用工具中的终端 输入命令csrutil disable  最后终端显示 「Successfully……」 等一大堆文字就说明你成功了。你可以输入reboot重启。等下文的全部设置都完成后，你如果想恢复 SIP，就重复步骤 1 到 3，在第 4 步输入csrutil enable就好了。\n2. 开启 macOS 的 HiDPI 选项 再次重启后进入系统，打开终端输入\nsudo defaults write /Library/Preferences/com.apple.windowserver.plist DisplayResolutionEnabled -bool true  3. 查询你的外接显示器的编号 这一步相当重要，先介绍两个命令\nioreg -l | grep \u0026quot;DisplayVendorID\u0026quot; ioreg -l | grep \u0026quot;DisplayProductID\u0026quot;  这两条命令用来查询你的显示器供应商 ID DisplayVendorID 和产品 ID DisplayProductID。接下来你要找到你的显示器对应的DisplayVendorID和DisplayProductID：\n 拔掉显示器的 HDMI 或者 DP 线 分别输入上面两个命令之后return(↩)，每个命令会返回一个带有数字的结果。那个数字就是 macbook 默认的DisplayVendorID和DisplayProductID了 接入显示器 再分别输入那两个命令，每个命令会分别返回两条带有数字的结果。对比刚才 macbook 默认的结果，另一个数字就是你显示器的DisplayVendorID和DisplayProductID了 把这两个数字分别转成对应的 16 进制数，用这个进制转换工具  现在，回到桌面，新建一个文件夹命名为DisplayVendorID-[你刚才查到的DisplayVendorID的16进制数]，例如DisplayVendorID-10ac。\n之后在这个刚建好的文件夹下增加一个文件，命名为DisplayProductID-[你刚才查到的DisplayProductID的16进制数]，例如DisplayProductID-a0c3。\n4. 为你的显示器生成 plist 文件 到 这个网站 ，在左侧的空里分别输入显示器型号，DisplayProductID 和 DisplayVendorID，注意填16进制的数字，并且检查下后边10进制的数字是不是和你刚才命令查到的一致。如果需要添加自己额外的分辨率，直接在下边新建一条分辨率配置就行。最后，复制右边生成 XML 格式文本，粘贴到刚才新建的文件里。（也可以直接从网站下载文件，去掉文件名后缀 .plist ）\nXML 文件类似下边这样：\n\u0026lt;?xml version=\u0026quot;1.0\u0026quot; encoding=\u0026quot;UTF-8\u0026quot;?\u0026gt; \u0026lt;!DOCTYPE plist PUBLIC \u0026quot;-//Apple//DTD PLIST 1.0//EN\u0026quot; \u0026quot;http://www.apple.com/DTDs/PropertyList-1.0.dtd\u0026quot;\u0026gt; \u0026lt;plist version=\u0026quot;1.0\u0026quot;\u0026gt; \u0026lt;dict\u0026gt; \u0026lt;key\u0026gt;DisplayProductID\u0026lt;/key\u0026gt; \u0026lt;integer\u0026gt;41156\u0026lt;/integer\u0026gt; \u0026lt;key\u0026gt;DisplayVendorID\u0026lt;/key\u0026gt; \u0026lt;integer\u0026gt;4268\u0026lt;/integer\u0026gt; \u0026lt;key\u0026gt;scale-resolutions\u0026lt;/key\u0026gt; \u0026lt;array\u0026gt; \u0026lt;data\u0026gt;AAAKAAAABaAAAAABACAAAA==\u0026lt;/data\u0026gt; \u0026lt;data\u0026gt;AAAFAAAAAtAAAAABACAAAA==\u0026lt;/data\u0026gt; \u0026lt;data\u0026gt;AAAPAAAACHAAAAABACAAAA==\u0026lt;/data\u0026gt; \u0026lt;data\u0026gt;AAAHgAAABDgAAAABACAAAA==\u0026lt;/data\u0026gt; \u0026lt;data\u0026gt;AAAMgAAABwgAAAABACAAAA==\u0026lt;/data\u0026gt; \u0026lt;data\u0026gt;AAAGQAAAA4QAAAABACAAAA==\u0026lt;/data\u0026gt; \u0026lt;data\u0026gt;AAAKAgAABaAAAAABACAAAA==\u0026lt;/data\u0026gt; \u0026lt;data\u0026gt;AAAKrAAABgAAAAABACAAAA==\u0026lt;/data\u0026gt; \u0026lt;data\u0026gt;AAAFVgAAAwAAAAABACAAAA==\u0026lt;/data\u0026gt; \u0026lt;/array\u0026gt; \u0026lt;/dict\u0026gt; \u0026lt;/plist\u0026gt;  4. 复制 plist 配置文件到系统配置目录 这一步就是把刚才新建的配置文件复制到你系统目录里，你直接复制通常会提示你系统目录是「只读」的，不允许你胡作非为。所以你先要在终端执行下面的命令：\nsudo mount -uw /  这样，你就可以复制到系统的文件夹了。（这个命令重启后失效）\n接下来打开系统文件夹/System/Library/Displays/Contents/Resources/Overrides/，你会发现一大堆跟你刚才文件夹命名相似的目录。把你新建的文件夹丢进去，和它们混在一起，假装它原来就是其中一员。重启。\n5. 修改分辨率 重启之后又进入系统，首先打开 RDM，你会在菜单栏看见它：\nMain Display 和 Display 2 就分别是你的外接显示器和 macbook 的显示器分辨率设置（位置有可能对掉，自己尝试一下）。带有 ⚡️ 符号的分辨率设置项就是开启 HiDPI 后新增出来的。如果你像我一样是 2K 显示器，可以给显示器选择1920x1080⚡️那个配置。是不是比原生分辨率的 UI 和字体更大更清晰了。\n小结 本文教你强行开启 macbook 的 HiDPI 设置，并针对 2K 显示器新增了配置文件到系统配置目录里，最后用 RDM 自由设置适合你显示器的分辨率。至于 HiDPI 的原理，请自行搜索，此处不再赘述。\n希望本文对你有帮助，也欢迎你留言反馈。\n","date":"2019-11-24","permalink":"https://sund.site/2019/11/%E4%B8%BA-mac-os-10.15-%E5%BC%80%E5%90%AF-hidpi%E8%AE%A9-2k-%E6%98%BE%E7%A4%BA%E5%99%A8%E6%9B%B4%E8%88%92%E9%80%82/","tags":["Mac"],"title":"为 Mac OS 10.15 开启 HiDPI，让 2K 显示器更舒适"},{"content":"日常工作中经常会出现这样的情况：\n 小张怎么也想不起来上次收藏的一篇健身饮食相关的文章，到底是在印象笔记的「健身」分类下，还是在「健康」或者「饮食」分类下，跨分类的文章太多，小张感到头秃 小李用标签管理文档，但是每次查询标签时，总是犹豫到底应该搜索时间管理还是效率，亦或是工作流，标签实在太多，小李很恼火  这两种情况都属于整理方法不科学，给检索时造成了麻烦。\n检索分类的难题 在正式介绍整理方法前，不得不先声明一个事实：**完全无重叠的分类是不可能实现的。**以小张为例，小张是一个健身教练，他在「健身方法」分类下有教会员如何管理「睡眠」、「饮食」和「健身动作」，同时小张也热爱生活，他在「生活」分类下有「财务知识」，并在「睡眠」和「饮食」里记录自己的睡眠和饮食习惯。这就造成了「睡眠」和「饮食」同时存在于个人生活和健身方法两个分类里。\n像小张这样的情况几乎不可避免，分类作为一种整理方法，就免不了出现上图中重叠的部分。什么是分类？**分类就是预先设计好一堆插槽，再把不同的东西分门别类放进对应的插槽里。**小张在检索「饮食」相关的内容时，他的分类系统失效了，同一个东西可以属于不同插槽。小张此时必须用「个人生活 + 饮食」或是「健身 + 饮食」的扩展分类形式才能得到想要的结果。由此可见，分类失效最简单的解决办法是扩展分类，比如增加两个子分类「生活饮食」和「健身饮食」。但是由于文档日积月累，这种小分类越来越多，越来越难管理；而一些分类里只存了1、2篇文档，根本没必要单独开个分类。\n小张的头秃越来越严重了，为了帮助像小张这样的分类困难症，人们想出了两种不同的办法：\n 用标签解决重叠部分，比如饮食就可以作为标签，在「健身」分类下的文章如果贴着饮食就代表它属于健身相关的饮食，同时这个标签也可以贴到「个人生活」下的文章里。 **通通用标签，**把个人生活变成标签，一篇文章如果同时贴有个人生活和饮食，那它就是生活方面的饮食，不是健身的饮食知识。具体的做法会在后面章节讲解。  遵守使用原则 不管哪种方式，即便有了标签和分类的双管齐下，也要有使用的原则，否则滥用的结果比不分类更麻烦。这回我们从原点出发，先思考一下人类检索信息的方式。\n通常检索信息有两种方式：\n 通过树形的层级体系，自顶向下一层层检索 通过碎片的记忆，用关键词和关联性，自底向上检索  基于这两种常见的检索方式，我们约定一种分类和标签的使用原则：\n  谨慎扩展新分类，分类之间尽量不重叠\n  标签尽量不可拆分，标签之间组合使用\n  分类的创建成本高，检索成本低，所以分类只有数量少，重叠部分少，才能提高自顶向下查找的命中率。\n标签创建成本低，但是检索成本高，所以标签可以是跨类别的，标签越具体，组合越丰富，关键词命中率越高。\n基于这两种原则去管理分类和标签，就可以保证你的检索体系不崩溃的同时，检索效率最高。比如我先搜索「健身」分类，发现文章太多，于是我加上饮食相关的标签，就可以轻松过滤掉大部分信息。标签越具体，组合越详细，过滤效果越好。\n另外，假设我只记得文章的模糊内容，也可以直接搜索标签或内容。\n完全标签化的思路 现在流行一种管理方式，抛弃分类，完全用标签管理。拿印象笔记为例，在这篇 《Using Evernote (the right way)》 的文章中，作者抛弃了常见的笔记本分类法，完全用标签来整理笔记。笔记本只保留「收件箱」、「收藏夹」和「废纸篓」。这种方式免去了整理笔记本的麻烦，但同时，造成了检索时必须依赖标签。作者为了解决这一难题，提出了一种被我称之为**「给标签分类」（ 原文是 Organize Tags）**的做法。\n其实给标签分类的做法非常常见，以 豆瓣 为例，你肯定见过下边的标签分类方式：\n**这种方式的好处就是：你既可以直接在搜索栏搜索具体的标签，也可以通过标签分类先筛选出标签，再点击标签明层缩小筛选范围。**这就解决了标签不好逐层检索的问题。\n仍然以印象笔记为例，我们该如何改造它，使之成为完全标签化的系统呢？\n首先，把现有笔记的标签归入对应的父类标签。比如新建一个信息管理，然后把项目管理、时间管理、思维导图、信息检索全部拖到信息管理标签下，使之成为父标签。\n之后，按照「我是谁，从哪来，到哪去」的原则补充所有遗失的标签。\n 我是谁，笔记属于哪个知识点、具体的知识类型 从哪来，笔记的来源，如果是网页剪藏，印象笔记会自带来源信息 到哪去，笔记的用途，比如进行中的某个项目  这样，一篇笔记的标签看起来是这样：\n这里的来源我直接使用了印象笔记自带的信息。标签的用途如果不明确也可以忽略。知识点要遵循具体，尽量不可拆分的原则。父类别标签的存在，是为了避免开头中小李遇到的问题，标签太多时，检索无从下手。文章有了父类别标签，你就多了一种筛选笔记的方式：直接在标签管理界面点选父标签来缩小筛选范围。\n完成了这些，我们下次检索笔记，就可以用两种方式：\n 通过父标签 \u0026gt; 子标签的方式逐层检索 通过搜索框输入标签名直接检索  如果你不是印象笔记用户，也可以采用一些迂回的手段，比如建立一张标签父子关系的笔记，来作为查找目录。\n看到这里你也许已经发现，这种完全标签化的方式其实只不过是把分类变成了标签，它同样存在父标签之间范围重叠的问题，所以一样要遵循前文的分类和标签的使用原则。\n小结 本文先分析了检索分类的难题——分类之间的重叠造成添加和检索时的不便。之后按照分类和标签两种归类方式的区别，提出了创建和使用分类、标签的原则，即谨慎分类，组合标签。之后介绍了一种完全标签化的管理信息方式。它的本质仍然是通过分类 + 标签的组合，提高检索效率。\n希望本文对你有所帮助，也欢迎在评论区留言发表你的观点。\n","date":"2019-11-18","permalink":"https://sund.site/2019/11/%E6%8A%9B%E5%BC%83%E7%AC%94%E8%AE%B0%E6%9C%AC%E5%AE%8C%E5%85%A8%E7%94%A8%E6%A0%87%E7%AD%BE%E7%AE%A1%E7%90%86%E7%AC%94%E8%AE%B0%E6%9C%89%E4%BB%80%E4%B9%88%E9%9C%80%E8%A6%81%E6%B3%A8%E6%84%8F%E7%9A%84/","tags":["效率工具"],"title":"抛弃笔记本，完全用标签管理笔记有什么需要注意的"},{"content":"阅读几分钟就忍不住打开微信；\n计划在家办公却浏览了一上午购物网站；\n周末去咖啡馆学习，被来回走动到人打扰到无法专心。\n这些问题我们经常会遇到，好的外部环境可以让人长时间保持精神的专注，大大提高我们工作、学习的效率。反之各种外界干扰会时不时跳出来打断你的注意力。那么你要怎么应对这些干扰呢？\n接下来我会分享一种认知模型——注意力模型，它帮助你分析你的注意力被谁「偷」走了。\n注意力有边缘 我在最近阅读《交互的未来》这本书时，了解到了注意力模型。书的作者认为，人的注意力有边缘。我们不可能将全部注意力放在多件事上，处于我们注意力中心的事物最容易被我们感知，而处于注意力边缘的事物，往往被我们的视线边缘、听觉、嗅觉等知觉感受到。因此，位于注意力中心的事物感知最清晰，所以反馈也更迅速。\n以此为基础，作者把注意力划分为三个等级，下面以常见的汽车驾驶室为例，看看司机的注意力是怎样分配的：\n 前方路况占据了驾驶员视觉中心，是主要注意力 在视觉边缘的反光镜和仪表盘，以及触觉反馈的方向盘和脚踏板，是次级注意力 双闪、应急灯、收音机等设备，周围的环境音共同构成了第三级注意力  由此，注意力的三个等级可以归纳为：\n 主要注意力与视觉相关，且是直接的，例如司机对路面所给予的注意，或者台式计算机用户对计算机所给予的注意。 次要注意力的对象则较远，例如，人们对无需直接关注就能感觉到的声音或振动信号所给予的注意。 第三级注意力的对象则是注意范围边缘的声音、光线或环境振动等。  当一个司机在驾驶时，如果有人跟他不断交谈，那么司机的注意力模型就变成了：\n   主要注意力 次要注意力 第三级注意力     前窗的视觉，路况和车辆位置的意识 后视镜、仪表盘、脚踏板等 和乘客的谈话内容    司机的第三级注意力被乘客的谈话内容占据，所以周围的环境音就被阻断了。那假设这辆车使用了屏幕触摸式导航系统，那么司机在使用导航系统时，主要注意力就被阻断了。所以在非自动驾驶的汽车里使用触摸操控在交互上是糟糕的设计。\n   主要注意力 次要注意力 第三级注意力     触摸屏操作 后视镜、仪表盘、脚踏板等 和乘客的谈话内容    使用电子设备的注意力模型 接下来，我们一起回到日常生活中。在一般情况下，我们在工作和学习时，注意力的状态是这样：\n   主要注意力 次要注意力 第三级注意力     电子屏幕、书本上的内容 屏幕边缘的时间和菜单，不时弹出的通知栏，视线边缘来回走动的人 环境光和声音，提示音，久坐后座椅、桌子的不适感    看到这里，你头脑中理想的学习环境是不是下面这样呢？\n   主要注意力 次要注意力 第三级注意力     电子屏幕、书本上的内容 未被占用 未被占用    次级注意力未被占用并不一定是件好事。我们大脑里偶尔冒出来的思绪经常把注意力牵扯到其他事情上。对平时专注力差的人，更会时不时主动寻找手机，看看微信，突然想起某款口红型号，马上登录淘宝……\n所以，专注的重点在于合理分配注意力的中心和边缘，让它们既不互相阻断，又不给思绪留出太多遐想空间。\n用平静的方式，占领注意力的边缘 想象现在你坐在周末的咖啡馆里准备阅读一本书，但是嘈杂的环境无法让你沉下心来：飞奔的小朋友发出持续的笑声，不时从你身边划过；隔壁桌相亲的一男一女举止暧昧，任谁都不能不关心他们接下来的进展；为了防止顾客久坐而专门设计的座椅让你的臀部和背部永远处于找不到理想接触面积的状态；这时，手机锁屏界面显示「你收到了一条通知」……\n下面，你应该做什么呢？\n或许是扔掉手机换一家咖啡馆，亦或者在夺门而出前亲吻隔壁桌的女生，在男生惊慌的眼神里转身跑向门口，并在出门前绊倒跑过来的小朋友……\n这肯定是不行的。\n首先，你要关掉自己手机的一切通知，或者直接打开勿扰模式。大多手机 App 都想尽办法留住更多用户的时间，所以真正变成手机的主人，是你提升一切行动力和专注力的先决条件。\n第二步，你要屏蔽掉视觉污染，让视线边缘不会有吸引你注意力的物体。我会在下一小节中告诉你聚光灯的妙用。\n最后，你要屏蔽掉声音的干扰，戴上耳机，播放点柔和的音乐。除此之外，舒适的座椅和柔软的靠垫都会安抚你的触觉神经。\n你的注意力应该像下面这样：\n   主要注意力 次要注意力 第三级注意力     电子屏幕、书本上的内容 不容易吸引注意力的物体，较暗的周围环境 轻柔的旋律，舒适的倚靠感    用聚光灯营造舞台感 次级注意力会时不时把视觉中心夺走。许岑在自己的新书《上手》中，提出使用聚光灯来营造极大提升专注力的舞台感办公环境。从注意力模型的角度说，次级注意力被较暗的环境包围时，更不容易阻断视觉注意力。\n市面上很多光线柔的台灯或是显示器灯，兼顾了保护视力和聚光灯的作用。比较知名的有少数派曾经发过的《这是我今年买得最值的硬件 — WiT Genie》和《夹在显示器上的台灯，美观实用的完美照明解决方案：明基 ScreenBar Plus 屏幕挂灯》，前者还详细讲解了照明亮度、频闪对视力的影响。\n容易被忽视的第三级注意力 很多人喜欢使用降噪耳机来屏蔽环境音，我认为实际效果因人而异，像我这种脑中经常会冒出异想的人，大脑很难在安静的环境里不自我放飞。即便是躺在床上装睡时……这也是为什么我提倡占领注意力的边缘而不是留出真空，思想是长翅膀的鸟，空间太大就很容易飞到莫名的地方去。\n我占领注意力边缘的方式是听音乐。有人会觉得听音乐干扰注意力，无法专心工作。有的人则相反，觉得听音乐是必要的「陪伴」。是干扰还是陪伴，这取决于音乐是激昂还是舒缓，歌词是陌生还是熟悉，音量是小还是大。熟悉的旋律和歌声需要你更少的注意力去理解，音乐也就不会轻易越迁到高一级注意力阻断你的工作，较小的音量可以保证它只存在于你的第三级注意力中。\n网易云音乐有很多歌单适合工作学习时听，比如我曾经整理过一个《看书就好好看书》，里面有94首小提琴曲和日系轻音乐。\n可是常听还是会腻，所以潘多拉电台弥补了我想时不时换换口味的需要，它的推荐歌曲和自主学习能力是我试用过的 App 里体验最好的。你也可以使用网页版的潘多拉电台打造一套属于自己的工作学习 BGM。\n适宜阅读的舒适触感 对于一个喜欢阅读的人，我坚信最适合人类阅读的姿势是半躺着。一个舒适的躺椅或是床头靠垫使你在阅读时不至于频繁更换姿势，配合舒适的暖色灯光，睡前阅读会成为你的习惯。\n相信读到这里你已经知道了自己有哪些外部环境需要改善。\n小结 本文首先介绍注意力模型，注意力分三个等级：中心是主要注意力、边缘分别是次级注意力和第三级注意力。接下来我建议你使用聚光灯、背景音乐和舒适的倚靠感来平静地占领注意力的各个「阵地」，让你的内心沉浸工作和学习中。\n文中对注意力的控制局限于外部环境，实际上，人的内因往往起着更关键的作用，有很多调节注意力的方法，如建立大纲模型、思维导图法。也有很多逐步提高注意力的工具，比如番茄工作法和最近很流行的用 NFC 贴纸自动化记录时间。在此不详细展开，读者可以根据链接自行寻找适合自己的方法。\n希望本文对你有所帮助。你可以在我的微信公众号「电波障害」看到更多文章。\n","date":"2019-11-14","permalink":"https://sund.site/2019/11/%E6%B3%A8%E6%84%8F%E5%8A%9B%E7%9A%84%E8%BE%B9%E7%BC%98/","tags":["思维"],"title":"注意力的边缘"},{"content":"各项参数的对抖动、曝光、噪点的影响    ⬆️此选项越大 ❗️📷 手抖警告出现率 ❗️AE 光线警告出现率 🌫噪点 🔎备注     光圈（F） ⬇️ ⬇️或⬆️ ⬇️ 手动对焦模式或者快拍模式下，光圈越小，【超焦距】带来的取景深度越大   快门速度越快 ⬇️ ⬆️ ⬇️或⬆️ 快门速度1/250适合抓拍，1/60为通常的安全快门   ISO ⬇️ ⬇️或⬆️ ⬆️ 800以内画质较好，超过800噪点明显变强   曝光补偿（EV） ⬇️ ⬇️或⬆️ ⬇️ 影响亮度，非自动档可用，本质是增减相机控制光圈、快门、ISO的比例时的权重，通常拍摄雪景和较黑的物体时候需要调节   白平衡（WB） ✖️ ✖️ ✖️ 影响色彩   白平衡补偿（B：G） ✖️ ✖️ ✖️ 手动增减白平衡权值，很少用   效果（D：C：S） ✖️ ✖️ ✖️ 影响滤镜效果，可以拍出风格强烈的作品   ND滤镜（开） ⬆️ ⬆️ ⬆️ 在强光状态下打开ND滤镜可以降低3档进光量，即使在白天也能用慢门或者大光圈   低速快门NR（开） ✖️ ✖️ ⬇️ 打开后自动降低低速快门时的噪点   闪光灯⚡️（开） ⬇️ ⬇️ ⬇️ 在白天背光和夜晚都可以提高近景中被摄体的亮度    景深标尺、ND滤镜、曝光补偿的技巧 ","date":"2019-11-14","permalink":"https://sund.site/2019/11/ricoh-gr2-%E5%8F%82%E6%95%B0%E8%AE%BE%E7%BD%AE%E5%BF%83%E5%BE%97/","tags":["摄影"],"title":"Ricoh GR2 参数设置心得"},{"content":"简单方法 首先介绍下Nintendo Switch在哪里设置网络，如下图，设置界面=\u0026gt;互联网设置里，可以修改IP，DNS等常用网络配置。修改之后点击「链接测试」，可以测试你的NAT和下载、上传速度。\n首先：设置路由器的WIFI类型为5G 因为NS对2.4GHz的Wifi优化非常差，所以一般玩家都选择设置Wifi类型为5GHz，5G的缺点是穿墙能力差，但是速度很快，所以建议把NS放在离路由器不太远的位置。\n最简单粗暴的方法：购买加速器 购买加速器是最省心省力的方案，以网易UU加速器为例，加速后可以把NAT从D上升到B或A，完全可以满足大部分延迟要求较低游戏的需要。\nMac版UU加速器目前还处于免费测试阶段，可以随意使用。按照提示配置NS上的IP和DNS即可。但是如果想让联机速度突破A，甚至小于30ms延迟，就要结合第二部分「进阶方法」中的内容了。\n最方便的方法：DNS优化 这也是最多人的办法，以「Splatoon2」为例，四川电信在不使用任何加速器的情况下，单单设置了合适的DNS，就可以流畅体验乌贼娘了。注意这种方法在晚上8～10点高峰期间有一定概率掉线。下面提供一些我常用的DNS，不同地区效果不同，需要自己尝试。\n218.102.23.228 # 一般用作日本eshop下载游戏，速度提升明显 203.198.7.66 168.126.63.1 # 著名韩国DNS节点，Splatoon2 联机常用 168.126.63.2 # 同上  进阶方法 进阶方法可以最大限度的提升你的网络通信效率。\n路由器设置优化 路由器有两处可优化的地方：\n  设置路由器DMZ，所谓DMZ就是隔离区，简单理解为外网可以直接访问你DMZ中指定的IP。现在把你主机的IP放入DMZ中，这样牺牲一定安全性的同时换来延迟的进一步降低。\n  开启路由器的「Full Cone NAT」。以pandavan固件为例，在防火墙设置中可以找到。其他路由器也一定有类似的设置，耐心找一下。\n  电信宽带改为桥接方式 中国电信宽带默认使用光猫拨号上网。这样普通用户免去很多麻烦的同时，也增加了NAT联机的延迟。解决办法就是把宽带连接方式改为「桥接」。\n所谓桥接，就是不使用电信提供的光猫进行拨号上网，而是直接由你自己的路由器拨号，这样可以一定程度降低延迟。中国电信网上营业厅可以直接修改，也可以自己打客服电话或去营业厅办理（只要告诉业务人员，我要把宽带连接方式改为桥接）。\n修改之后的十几分钟内时间，你的网络会断开，此时你必须用自己的宽带账号和密码在路由器上（注意不是光猫）重新登录宽带上网。我使用桥接+DNS修改，在未使用加速器的情况下，就可以把NAT直接从D提升为A。\n","date":"2019-10-07","permalink":"https://sund.site/2019/10/nintendo-switch-%E8%81%94%E6%9C%BA%E4%BC%98%E5%8C%96%E7%AD%96%E7%95%A5/","tags":["Nintendo"],"title":"Nintendo Switch 联机优化策略"},{"content":"准备新开一个话题，用每个月的总结替代年度总结。这是第一篇。\n最近国内国际上大事不断，在这个历史转折点当口，每个从互联网汲取信息的人都应该有点独立思考能力。「第一性原理」（first principles thinking）是伊隆·马斯克在TED演讲时回答「为什么能够在不同的领域都能够取得成功？」时给出的答案。第一性原则要求我们剔除用「比较」来权衡事物好坏的思维方式，转而选择一层层向下探求本质，再由本质反推出认识。这里有篇博客文章做了细致的讲解。\n有什么发现 七龙珠里的元气弹\n这是一群香港示威者把激光笔的光束汇聚到一张反光板上，以干扰警方行动。像七龙珠里孙悟空把大家的力量汇聚起来形成超大元气弹的画面。非常有想象力。\nHacker News 和 开发者头条、掘金的差别\n国内两大技术新闻「开发者头条」和「掘金」的文章主要以技术理论和工程实践为主。这两者都在一定程序上模仿国外的Hacker News，但是Hacker News除了技术和工程实践，更多的是对政治、经济、文化的深度思考。\n在某种程度上，中国的技术人被阉割了右脑。右脑有赋予行为合理化的能力。国内的技术「场」，就是一个你只需要关心技术本身而不需要关心社会、文化影响的环境。\n人生五十年，如梦又似幻\n前不久上一家公司的老板因为癌症去世了，年仅51岁。在50岁之前，他拥有纳斯达克上市的公司，在北京核心商圈有一栋办公楼。我想起《影武士》里织田信长唱的那首歌：\n 人生五十年，与天地长久相较，如梦又似幻。一度得生者，岂有不灭者乎？\n 白领快乐水\n元气森林苏打气泡水，0热量、苏打、气泡。这几个元素加起来就是现在办公室一族的全部追求了。这是一种真正的「现代饮料」。\n马里奥创造家2\n这是个创造快乐的游戏，拥有它的朋友可以玩玩我制作的地图：9PB-WGX-WVF\n任意听播客\n这个网站https://getpodcast.xyz可以把最受欢迎的中文博客添加到任意你常用的podcast客户端。\n看过的书 《非暴力沟通》\n一本讲沟通的书，越是亲近的人，越应该认真的对待「沟通」这件事。但是我们日常生活中往往会采取相反的做法。\n《交互的未来》\n原离线的主编Bob推荐的书，内容其实挺一般的。里面有一个很有趣的思考，自动扶梯在故障时会变成普通的扶梯。这种能够出故障时「自我降级」的设计原则，其实生活中很常见，比如电动牙刷，蓝牙音箱，WIFI智能插座。你还能想到哪些身边的设备呢？\n言叶  Note that I do not claim that all of this makes me more productive, merely that it makes things more searchable.\n usesthis网站对 Paul Ford 的采访。知识管理体系中，相比于高效性，「可搜索性」或许更加重要。\n 梅毒这种可怕的疾病在不同的国家被称作不同的名字。在俄罗斯，它被称作波兰病；在波兰，它被称作德国病；在德国，它被称作法国病；在法国，它被称作意大利病；在意大利，他们称之为法国病。\n 推特网友@peterlu\n 做个世俗眼中的成年人吧！\n 这是《勇者斗恶龙》改编电影的台词。该电影被日本观众广泛吐槽——想要逃离生活去看电影，却被导演教做人。\n 那你认为是什么原因，让你无法主动提出话题呢？\n是因为你对对方没兴趣。\n 《凪的新生活》台词。为什么我们善于倾听又照顾别人感受，却仍然给人一种不会聊天的感觉。\n 它告诉我，无论看上去多么沉闷的工作都可以是自我表达的场所，也都可以呈现出品质的光辉。\n 李如一的《一天世界》博客：https://blog.yitianshijie.net/2019/08/23/leakage/\n联系我 如果你有什么有趣的发现想跟我分享，欢迎邮件至 sund.chn@gmail.com\n","date":"2019-09-02","permalink":"https://sund.site/2019/09/8%E6%9C%88%E5%81%9A%E4%BA%86%E4%BB%80%E4%B9%88/","tags":["日常记录"],"title":"8月做了什么"},{"content":"独自一个人出国旅行有很多不方便，但作为交换，那份无拘无束的自由和旅途中的不期而遇完全值得这种付出。为了进一步降低不便，提高旅行体验，我从三个方面制定旅行计划：\n 前期准备。这部分没有技术含量，网上很多攻略，我列举出来供参考 路线规划。这部分使用了一些技巧和工具，是我自己总结的经验 学习基本礼貌用语，地名和礼仪。这部分内容会增强你的旅行体验  带图原文： https://mp.weixin.qq.com/s/rAZcFmW-96CrOkvQY4N04w\n旅行计划 \u0026gt; 前期准备 这部分都是固定套路，没有技巧。很多其他攻略都有，我整理出来供参考。\n护照\n日本不接受个人申请，所以只能去淘宝找最近的旅行社申请。我在成都，所以找了一家信誉比较高的重庆旅行社（送签重庆日本领馆）。把必备的材料邮寄过去。大概10~20天出签。\n机票和酒店都不需要你提供，旅行社会解决。你只要安静等待出签。\n使用工具：淘宝。\n机票\n公认体验最好的是全日空航空(官网：https://www.ana.co.jp/zh/cn/)。全日空的餐食和服务质量都非常高。建议提前两个月预订机票，在官网搜索计划旅行时间前后的日期，很大概率可以3~5折价格订到往返的机票。\n使用工具: 全日空官方网站\n酒店\n因为日本的民宿不被官方承认，所以airbnb之类的民宿出现纠纷是没有保障的。建议在Booking上预订酒店。和式酒店(日本传统风格的榻榻米地板的酒店)往往没有独立卫浴和床，所以价格会便宜很多，追求舒适的话建议订正常的酒店，想体验日本民风或者喜欢和很多外国人一起过集体生活的，可以考虑一些青年旅社和和式酒店，不建议考虑胶囊旅馆，体验非常差。\n另外，建议先读完本文\u0026quot;规划路线\u0026quot;部分，再预订酒店。\n使用工具：Booking App\n电话卡\n淘宝可以买到很便宜的日本7天4G流量卡。如果单人旅行的话，比随身wifi要方便不少。\n使用工具：淘宝\n地铁券\n西瓜卡(Suica)是关东地区的常用地铁卡。不但可以坐地铁还可以在便利店买东西，可以直接在日本机场购买。\n具体的购买方法见自动贩卖机。\n众所周知日本的交通比较贵。这里要好好说下技巧，日本很多针对外国游客的福利，比如东京地铁三日券，可以在72小时内任意乘坐地铁，非常划算。\n使用工具：东京地铁网站，包括购买地铁票的方法和详细地图：https://www.tokyometro.jp/tcn/ticket/travel/index.html。\n如果怕到日本后找不到购买的地方，也可以在淘宝提前购买好。\n景点票\n日本的大部分室外景点是不要钱的。很多观光路线有缆车、登山电车需要买票。建议提前上网查好目标城市的观光票是否有通票(比如我去箱根前，在东京新宿可以买到箱根2日周游券，可以乘坐所有缆车、电车等交通工具，参观所有景点免票)。这会省下很多钱，还能免去多次买票的麻烦。\n日本的城市都各自的宣传网站。可以登录上去查看旅行优惠和景点信息。\n使用工具：搜索引擎搜索城市的官网。\n货币\n建议在出发前至少兑换3万日元随身携带。注意日本商店找零大量使用硬币，所以有一个能装硬币的小钱袋是必须的（建议当地买一个）！另外日本兑换货币的地方主要是7-11便利店，而东京大阪这种大城市7-11便利店更是随处可见。所以不需要太担心。购物的话银联卡和Visa卡基本随处可用。\n使用工具：有些银行兑换外币需要提前申请。到营业厅时记得随身携带身份证。\n\u0026gt; 规划路线 我使用\u0026quot;看板\u0026quot;的方式来规划旅行路线。具体方法就是把想去的城市和旅行景点全部写在便签纸上（也可以用电子看板”Trello“），按照地区把同一个地区范围的景点贴在一起。一个人一天最多走2~3个地区，每个地区1~2个景点（不建议行程制定的太匆忙）。按照这个原则，我制定了4步路线规划方案：\n 从每个地区挑出自己最想去的2、3个景点。  注意有些景点需要在官方提前预订（比如东京的皇居）。\n 将这些景点标记在地图上。我使用的工具是Google My Map(https://www.google.com/maps/d/u/0/)\n  用Google Map搜索地铁路线，规划一天2~3个地区的行程。(比如第一天去浅草、上野、东京大神宫，那么先找好酒店到这些景点的地铁路线，算好坐车时间)\n  按照前3步设计好每一天的行程，写成清单。\n  至此，你已经有了完备的可执行旅行计划。女生可以出发前把计划清单发给家人，有备无患。\n\u0026gt; 学习基本礼貌用语，地名和礼仪 这部分可以网上搜下，\n 礼貌用语。学会说\u0026quot;你好\u0026quot;、\u0026ldquo;谢谢\u0026rdquo;、\u0026ldquo;对不起\u0026quot;就足够了。用得最多的是すみません(si mi ma se en)，\u0026ldquo;打扰一下，对不起\u0026rdquo;。 地名。因为机场买票，问路经常要用日语地名，所以在Google地图上提前找好地名的罗马音(就是英文发音)，比如浅草的英文(Asakusa)，日语发音就是英文发音。 礼仪。参拜神社、餐饮的礼仪。如果当地没有熟人，建议提前网上学一下，可以增加很多乐趣。  除了上面提到的三点，如果是吃货可以了解下当地有名的饭店，如果喜欢拍照，也可以搜下知名的摄影地点。\n回顾 人生中会经历很多次旅行，对于独自旅行的人，旅行中会遇到很多不确定因素。旅行之后把这些因素总结起来作为回顾，帮助下次旅行制定更加合理的计划。\n","date":"2019-04-11","permalink":"https://sund.site/2019/04/%E5%88%B6%E5%AE%9A%E4%B8%80%E4%B8%AA%E4%BA%BA%E7%9A%84%E6%97%A5%E6%9C%AC%E6%97%85%E8%A1%8C%E8%AE%A1%E5%88%92/","tags":["旅行"],"title":"制定一个人的日本旅行计划"},{"content":"两个月前在亚马逊买村上春树《刺杀骑士团长》的简体中文版电子书，译者是大名鼎鼎林少华先生。我对林少华的了解，源自高中时期看的《挪威的森林》，林先生那晦涩的翻译和故弄玄虚的修辞让年少无知的我看得头昏脑涨。读了几章《刺杀骑士团长》后，唤起了我不愉快的青少年回忆，真的还是无法接受这种「不忠实于原著」的翻译风格呀。在这种心态下，最终还是去淘宝买了两册赖明珠的台译版来看。所以下面要讲的内容，都是基于台湾繁中版本的翻译。\n主要人物 （剧透） 我 ：青年画家，和妻子离婚后住进了朋友雨田政彦父亲过去生活过的山中别墅里，意外发现了著名画家雨田具彦藏在阁楼的画作《刺杀骑士团长》。后来机缘巧合认识了附近别墅居住的富豪免色先生和山下的秋川麻里惠一家。\n雨田具彦 ：朋友雨田政彦的父亲，90岁高龄的画家，已经失去神志住在疗养院里。年轻在维也纳留学期间和恋人组织刺杀纳粹军官的活动，恋人被纳粹迫害致死，自己则因家族关系而苟且偷生回到国内。其弟弟也因参军入伍，在南京大屠杀期间留下心理创伤，回国后自杀。雨田具彦独居在主人公后来居住的山中别墅里，直到神志不清被儿子送去疗养院。\n骑士团长 : 在我无意中打开了山后被石头封住的井后，突然出现在我的画室里的自称是「Idea」（简中翻译为理念）的灵体。长的和雨田具彦画作里的骑士团长一模一样，只是身高只有60公分。本作中只有三个人能看见骑士团长——我、羽田具彦、秋川麻里惠。\n秋川麻里惠 ： 青春期刚刚发育的少女，童年在山中长大，拥有敏锐的洞察力。其母亲曾经是免色先生的女友，在和免色分手前两人发生关系。在生下麻里惠之后因毒蜂蛰咬过敏而死。后麻里惠和姑姑秋川苼子一起住在山里。免色一直认为麻里惠有可能是他的亲生女儿。\n免色 ： 富豪，生活井井有条，是自控力非常强又有能力控制住周围一切的男人。独居在附近的白色别墅里，常年用望远镜窥探秋川麻里惠一家的生活。\n光即是影，影即是光 《刺杀骑士团长》的故事源自莫扎特版的歌剧《唐璜》。讲的是风流成性的唐璜（台译：唐·乔万尼）在勾引骑士团长的女儿被发现后，在和骑士团长决斗中杀死了骑士团长，最后遭报应堕入地狱的故事。\n正如书中所说，Idea是一种类似观念的东西，比如爱本身不是Idea，但是产生爱的东西就是Idea。我把它理解为「本我」，林少华说，书中出现的洞穴——井，在日语里和英文的「本我」谐音。所以我认为，书中多次出现的「骑士团长」也许是各个人物的内心本我的写照。年轻的雨田具彦对恋人、弟弟的死去充满自责和愧疚，又因为政治、家庭的原因无法对人诉说自己的痛苦，便将自己化身故事里的唐璜，刺杀了骑士团长，希望自己替代爱人和弟弟堕入地狱。\n值得注意的是，书里反复出现的元素「窥探」和「封闭的空间」。书中几处「窥探」的描写：\n 在名为《刺杀骑士团长》的画作里，有一个从地下打开盖子窥探的长脸男 用望远镜窥探麻里惠生活的免色 仿佛暗中窥探我，我假想中的「开斯巴鲁森林人汽车的男人」 最后躲在衣柜里窥探免色的秋川麻里惠  他们每个人都在好奇心的驱使下窥探别人（却在过程中窥探到了自己）。在漆黑的封闭空间里，意识和肉体剥离，仿佛灵魂出窍般看到了自己真实的内心。后山的洞穴之于我，曾经关押过的拘留所之于免色先生，衣柜之于秋川麻里惠，都是窥探到自己内心世界的封闭空间。\n如果按照我上面的理解，故事的脉络就是这样：主人公、免色、麻里惠、雨田具彦都是被自己内心折磨的、介于「真实和虚无之间」的人。主人公一方面觉得自己深爱妻子，另一方面怨恨妻子的背叛，自己却又与人妻发生关系，是介于背叛与被背叛的人。免色是能力超强控制一切的男人，却无法得知疑似女儿的麻里惠是否和自己有血缘关系，于是免色也是介于掌控和失控的男人。麻里惠不必说，对自己身世一无所知，介于「免色先生的女儿」和「不是免色先生女儿」两种身份之间。雨田具彦则纠结于年轻时的自己，在失去爱人和兄弟的痛苦中即是人人知晓的画家，又是一个无法告知任何人内心感受的孤独老人。\n每一个人都在真实和虚无之间徘徊。整个故事就是围绕村上春树构建起来的世界展开。光即是影，影即是光。真实和虚无互为存在的依据。\n中间的过程不再赘述，好奇的看官可以读到这里就打住，去买一本书，自己来细细品味。如果你不想读长篇小说或者已经读完只想看看我怎么理解，那么请继续往下看。\n故事给出了几种人的结局。\n为了拯救失踪的秋川麻里惠，主人公「我」按照「骑士团长」的提示，在雨田具彦的病床前重演了《刺杀骑士团长》中的一幕，目睹了我亲手杀死了「骑士团长」的雨田具彦内心终于释然，几天后安详辞世。几十年来萦绕在老人心头的痛苦、自责、愧疚被我一刀捅破，产生怨恨的种子不复存在。\n在杀死骑士团长过程中引出了地板下窥探的「长脸男」（也是画作中出现的人物），「我」搬开地上的盖板进入了隐喻的地下世界。在经过真实和虚无之河时，「我」把秋川麻里惠的护身符（企鹅挂饰）留给河中间的摆渡人当做船资后，「我」独自爬进漫长的洞穴（此处和主人公小时候与妹妹爬进富士山附近的风洞的回忆呼应），在战胜了「双重隐喻」后，在漆黑的封闭空间里，内心终于决定和妻子和解（也终于与自己和解）。\n至于什么是「双重隐喻」，书中提到是骑士团长提醒主人公要小心的一种危险的存在。会吞噬那些意志不坚定的人。在我理解，这是内心本我和现实互相影响时，不要让自以为的真实改变了本我的一种比喻（姑且这么解释吧）。\n回到秋川麻里惠的故事线，因为「我」把麻里惠的护身符留给了「真实与虚无之河」的摆渡人，所以麻里惠的身份永远介于真实和虚无之间，也就是说，麻里惠到底是不是免色的女儿永远成了谜。故事的最后章节，麻里惠躲在免色家衣橱里看到的「好像是免色却是不是免色」的人影，就是免色探求麻里惠真实身份的本我的隐喻。麻里惠紧紧抓住衣柜里的女人衣服（其实是她生母留在免色家，被免色珍藏起来的衣物），并且被「骑士团长」告知：「衣服会保护你」。这恰恰说明，免色在故事的最后，内心依然是爱着麻里惠的生母，所以最后放弃了探求麻里惠的真实血缘身份。不去打扰麻里惠平静的生活。这也是「我」在地下世界做出的决定和真实世界产生了某种联系，最后拯救了麻里惠平静的生活，让真相永远隐藏起来。\n免色先生最后和麻里惠的姑姑笙子热恋，似乎不再关心麻里惠的身世了……这是我唯一觉得村上春树有点草率的处理。\n题外话 在读完《刺杀骑士团长》上册后，我正好休年假去日本旅行，期间在箱根的山里住了一宿民宿。箱根距离书中主人公居住的小田原市不远，在山里吹着风听雨声时，真的有种置身小说里的感觉。我住的那间和屋非常简陋，风一吹四周的窗子和木板拉门都会吱吱嘎嘎作响。晚间寂静无人的乡村里还能隐约听到风铃的声音，像极了书里主人公在深夜听到后山摇铃声的场景。只有日本的作家才能写出这样的故事，用那种日本人细腻、敏感的神经，探索人心里不易察觉的感受。也希望林少华老师晚年幸福，不要再接手村上春树的作品翻译工作了。:)\n","date":"2018-10-04","permalink":"https://sund.site/2018/10/%E8%B7%A8%E8%BF%87%E7%9C%9F%E5%AE%9E%E5%92%8C%E8%99%9A%E6%97%A0%E7%9A%84%E6%B2%B3/","tags":["读书"],"title":"跨过真实和虚无的河"},{"content":"资产配置 债、股、基金等综合配置。基金有的偏股，有的偏债，有的偏另类。看清楚哪些基金适合自己。\n每种理财产品、基金都是有一些底层资产构成。\n什么是底层资产  债类资产(固定收益资产)   这类资产风险取决于平台投资的内容，债务主体(国家、公司、个人)。风险最低。\n   股类资产(高风险、高收益)\n  另类资产(最高风险、最高收益)\n   如房地产、农产品、黄金、原油、文玩收藏、比特币等。\n 理财风险等级 银行理财的风险级别分成1-5级，在合同里会标识出来，比如R1-R5，谨慎型产品(R1)、稳健型产品(R2)、平衡型产品(R3)、进取型产品(R4)、激进型产品(R5)。\n一般R1-R2是可以认为比较稳健、基本不会亏本的，R5就比较危险了。\n固定收益类资产(低风险)  国债(3%左右) 银行定期存款(小城乡银行利息高，国家有50万以内存款的保险) 网络银行存款(微众银行，五年期定存年化5%) 银行理财(保本类3-5%，非保本类高一点点)   结构性理财比非结构性理财高些。(既然买银行理财就是图安全，所以要买保本或风险低的。 中国理财网可以查看风险和收益，是权威的半官方类网站。银行T+0产品随时可以到帐，适合大量临时性资金的理财)\n  保险理财。虽然名字叫保险，但是本身没有保障功能，是保险公司包装出来的理财产品。 信托、券商资产管理计划    信托。信托的本质也是债券。信托产品底层就是债券。信托公司包装后卖给你。所以评估风险标准仍然是信托公司本身的实力。如中信信托、平安信托比较强大，本身风险较低。     券商的资产管理计划。100万起，风险和收益都比信托高。本质上是企业债券。但是借款规模大，企业运营不景气时风险高。    P2P。现在买要比之前风险低，推荐资产是小资产(如个人消费、小买卖等)。P2P在理财中占比不要超过20%比较好。知名度比较高的平台：陆金所、人人贷、有利网、小赢、桔子理财、积木盒子等等。   财经信息来源：财联社，财新网 读研报推荐迈博汇金。又叫慧博投研资讯。网址是http://www.microbell.com/newweb/web/search?index=0\n 浮动收益类资产 基金\n理财工具\n 蚂蚁聚宝 基金评价报表  分类\n 货币基金。风险最低，如余额宝就是。收益很低，流动性强。 债券基金。风险较低。   债基按风险分为：\n 一级债基。风险低，纯买债券。 二级债基。80%买债券，20%买股票。(推荐定投，进可攻退可守) 混合偏债基金。 可转债基金。  买债基适合选择成立时间长，收益稳定的。 年底或资金紧张时，金融机构赎回债券，会导致债基市场低迷。从长期(10年)看，债基仍然保持上升趋势。\n  股票基金。 另类基金。挂钩房地产、黄金等。  封闭式基金平时不可以购买，会在特定时段开放购买，需要常查看基金公告。\n股票\n理财工具：雪球、华泰证券、巨潮咨询(看企业年报等)、迈博汇金\nWind 金融数据。\n 炒股的原则：花一段时间选定一些熟悉标的公司，特定去研究它。不要听消息或听股神建议炒股。\n 房地产 投资房产的标准是看城市法制程度(办事是否需要找关系)，年轻人就业率。\n理财规划工具 好规划网、七分钟理财。\n资产盘点：财余管家\n关于定投 定投可以磨平金融市场波动造成的影响，适合投资长期稳定上升的资产。3年内持续下跌的资产不适合定投。\n","date":"2017-01-19","permalink":"https://sund.site/2017/01/%E4%B8%80%E4%BA%9B%E6%8A%95%E8%B5%84%E7%9F%A5%E8%AF%86/","tags":["投资"],"title":"一些投资知识"},{"content":"问题 有一道面试题是这样的：\na = u'China' b = 'China' c = u'中国' d = '中国' # 1 print '%s %s' % (a, b) # 2 print '%s' % c # 3 print '%s' % d # 4 print '%s %s' % (c, d)  判断打印后的效果。\n先说正确答案，只有最后一行会报错。\n分析 在Python2里，默认的字符类型是str，这个str和Python3的str完全不同，Python2的str类型是8位的ascii序列。Python2在处理str类型转换时遵循这样的规则：如果被处理的str型变量值小于7位，就可以和unicode类型混用。可以做+连接，格式化等操作，同unicode享受同样的待遇。\nPython2在格式化字符时，会把str格式化为str，如果字符串里混入了unicode，就会把其他字符都转化为unicode。所以这道题里1处的a，b两个值混合后的字符就是一个unicode字符串，c和d单独格式化后仍保留了自己的格式。但是Python2在格式化代码位置4时，发现c是unicode而d不是，就会尝试按照上面的混用规则，格式化d为unicode类型，但是d的值'中国'显然是一个大于7位的str，因此Python2抛出UnicodeDecodeError。\n在Python3里，str类型则变成了一个纯unicode字符，也就是说Python3里的str等价于Python2里的unicode类型。Python3里为了清晰明了，使用bytes代表8位ascii序列。除此之外，Python3严格禁止混用两种类型。\n总结  使用Python2处理字符串，尤其是中文字符串，最好前边加上u Python2里不要混用str和unicode，如果处理文本时，先将全部数据格式化成unicode 能用Python3尽量不用Python2 (废话)  参考资料：  《Effective Python》 Brett Slatkin. 不愿意透露姓名的某厂面试官  ","date":"2017-01-11","permalink":"https://sund.site/2017/01/python2-%E4%B8%AD%E5%AD%97%E7%AC%A6%E7%B1%BB%E5%9E%8B%E7%9A%84%E4%B8%80%E4%BA%9B%E5%9D%91/","tags":["python"],"title":"Python2 中字符类型的一些坑"},{"content":"这几天面试被问到类似的问题，顺便看了看Python的源码，参考网上的教程，总结一下yield关键字在C层面是如何实现的。\n举个栗子 我们先看一个python生成器函数的例子：\nfrom dis import dis def func(): i = 4 yield i print i dis(func) a =func() a.next() a.next()  使用python的库dis可以直接查看python虚拟机运行的字节码。dis(func)的打印如下：\n 6 0 LOAD_CONST 1 (4) 3 STORE_FAST 0 (i) 7 6 LOAD_FAST 0 (i) 9 YIELD_VALUE 10 POP_TOP 8 11 LOAD_FAST 0 (i) 14 PRINT_ITEM 15 PRINT_NEWLINE 16 LOAD_CONST 0 (None) 19 RETURN_VALUE  我们猜测其中第二列(代表字节码偏移量)为9的指令YIELD_VALUE就是yield关键字的执行代码，进入Python2.7.12源码目录，在解释器执行字节码的主函数PyEval_EvalFrameEx中找到了下面一段：\nTARGET_NOARG(YIELD_VALUE) { retval = POP(); f-\u0026gt;f_stacktop = stack_pointer; why = WHY_YIELD; // 跳转到fast_yield处。fast_yield里处理了一下状态位然后返回结果 goto fast_yield; }  其中TARGET_NOARG为封装了case语句的宏，这句话的意思是，如果字节码是YIELD_VALUE，就把栈顶元素赋值给retval，然后跳转到fast_yield处，fast_yield处代码进行了一些状态判断后直接返回了retval。\n生成器是如何记录代码返回位置的 显然，如果这时候调用代码a.next()就会直接返回yield后边的表达式结果。这对应了上面C代码的fast_yield部分，那生成器怎么记录上次执行的位置并在下一次调用a.next()的时候从上次的位置继续执行的呢？\nPython在解释代码时，是将代码块加载为一个叫PyFrameObject的对象，这个对象代表了当前运行的栈帧。PyFrameObject里有个f_lasti变量用于保存代码当前执行到了字节码的哪个位置。在第二次执行a.next()时，生成器对象把之前携带了f_lasti的PyFrameObject当参数传给PyEval_EvalFrameEx，在PyEval_EvalFrameEx里的执行一个JUMPTO就直接跳转到了上一次结束生成器时的字节码位置：\nPyObject * PyEval_EvalFrameEx(PyFrameObject *f, int throwflag) { ... #define FAST_DISPATCH() \\ { \\ if (!lltrace \u0026amp;\u0026amp; !_Py_TracingPossible) { \\ f-\u0026gt;f_lasti = INSTR_OFFSET(); \\ goto *opcode_targets[*next_instr++]; \\ } \\ // 跳转到fast_next_opcode处 goto fast_next_opcode; \\ } ... fast_next_opcode: f-\u0026gt;f_lasti = INSTR_OFFSET(); /* line-by-line tracing support */ if (_Py_TracingPossible \u0026amp;\u0026amp; tstate-\u0026gt;c_tracefunc != NULL \u0026amp;\u0026amp; !tstate-\u0026gt;tracing) { ... /* Reload possibly changed frame fields */ // 按照f-\u0026gt;f_lasti中的偏移量跳转字节码 JUMPTO(f-\u0026gt;f_lasti); }  其中INSTR_OFFSET宏正是字节码的偏移量。\n#define INSTR_OFFSET() ((int)(next_instr - first_instr)) // co-\u0026gt;co_code里保存的是字节码 first_instr = (unsigned char*) PyString_AS_STRING(co-\u0026gt;co_code); next_instr = first_instr + f-\u0026gt;f_lasti + 1;  所以生成器对象每次执行结束都把字节码的偏移量记录下来，并把运行状态保存在PyFrameObject里，下一次运行时生成器时，python解释器直接按照偏移量寻找下一个字节码指令。\n","date":"2016-12-28","permalink":"https://sund.site/2016/12/python-yield%E5%85%B3%E9%94%AE%E5%AD%97%E7%9A%84%E5%BA%95%E5%B1%82%E5%AE%9E%E7%8E%B0/","tags":["python"],"title":"Python yield关键字的底层实现"},{"content":"这是一个外国人实现的Zabbix(一个开源监控工具)的Python Client——pyzabbix里的代码片段。\nRPC调用 Rpc调用的流程是向rpc服务端指定的uri(如http://www.abc.com/jsonrpc.php) 发送json(或其他双方约定格式)数据包，数据包里有rpc版本信息、方法名、参数等。下面Zabbix类里的do_request方法就完成了将方法名和方法参数打包json后发送请求的过程。\nclass Zabbix(object): # ... skip other class methods def do_request(self, method, params=None): request_json = { 'jsonrpc': '2.0', 'method': method, 'params': params or {}, 'id': self.id, } response = self.session.post( self.url, data=json.dumps(request_json), timeout=self.timeout )  技巧 但是为了方便，我们在python里一般使用zabbixclient.host.get(args)这样的链式调用，而不用zabbixclient('host.get', args)这样的调用方式。pyzabbix的作者巧妙的实现了这样的转换。\nclass Zabbix(object): # ... skip other class methods def do_request(self, method, params=None): request_json = { 'jsonrpc': '2.0', 'method': method, 'params': params or {}, 'id': self.id, } response = self.session.post( self.url, data=json.dumps(request_json), timeout=self.timeout ) # python内建方法，当获取某个对象的属性时，调用该对象的该方法 def __getattr__(self, attr): \u0026quot;\u0026quot;\u0026quot;Dynamically create an object class (ie: host)\u0026quot;\u0026quot;\u0026quot; # 此处把self传给ZabbixAPIObjectClass的self.parent return ZabbixAPIObjectClass(attr, self) class ZabbixAPIObjectClass(object): def __init__(self, name, parent): self.name = name self.parent = parent def __getattr__(self, attr): \u0026quot;\u0026quot;\u0026quot;Dynamically create a method (ie: get)\u0026quot;\u0026quot;\u0026quot; def fn(*args, **kwargs): if args and kwargs: raise TypeError(\u0026quot;Found both args and kwargs\u0026quot;) # 此处把父类传进来的方法名name和子方法attr拼成rpc的方法名 return self.parent.do_request( '{0}.{1}'.format(self.name, attr), args or kwargs )['result'] return fn  类似地，很多接口的实现都可以照搬这种方式把参数调用改成链式调用，如pymongo，redis-py等。\n参考资料： https://github.com/lukecyca/pyzabbix\n","date":"2016-10-25","permalink":"https://sund.site/2016/10/python-%E5%B7%A7%E5%A6%99%E5%9C%B0%E5%B0%86rpc%E6%8E%A5%E5%8F%A3%E5%B0%81%E8%A3%85%E6%88%90pythonic%E7%9A%84%E9%93%BE%E5%BC%8F%E8%B0%83%E7%94%A8/","tags":["python"],"title":"Python 巧妙地将rpc接口封装成pythonic的链式调用"},{"content":"问题和处理方法 Python 的 Fabric 库能够方便的远程操作Linux主机执行命令或传输文件。其实现方式就是底层实现ssh协议，例如执行下面代码的run方法，在目标主机上启动一个zabbix后台服务：\nfrom fabric import api from fabric.tasks import Task class Zabbix(Task): def run(self, kwargs): with api.settings(host_string='192.168.1.2', user='root', password='123456'): api.run('service zabbix_agentd start')  但是这样操作后虽然 Fabric 的 output 返回结果打印是启动成功，但是ssh登录目标主机，却不见 zabbix_agentd 进程，这说明没有真正启动起来。\n我查询了 Fabric 文档，发现需要在api.run里添加参数pty=False。\napi.run('service zabbix_agentd start'， pty=False)  这样就成功启动了后台进程。\n原因 什么是pty？ pty 是 pseudo-tty，众所周知 tty 是 Linux 支持输入与输出的终端设备，在 shell 下执行ps可以查看每个进程对应的tty设备号，如ttys0001。\npty 是为了解决远程连接时一方不希望对方直接ssh连接到主机上而诞生的「虚拟设备」，即伪tty，其原理是在远程主机和本地之间同时启动pty端口连接终端，可以类比进程间的通道，pty两端同时执行输入输出操作，如同本地直接连接到远程主机。但是一旦断开本地与远程主机的连接，pty就会结束所有刚才的进程。\n根据网上的资料，Github 仓库的 ssh 连接就采用 pty， Github 不希望用户创建一个可与它的主机交互的 ssh 连接，所以采用这种模式。\nFabric 在默认情况下就采用 pty ，所以想要用 fabric 登录目标主机启动后台进程，必须加上 pty=False。\n参考资料 https://github.com/fabric/fabric/issues/395 http://ytliu.info/blog/2013/09/28/ttyde-na-xie-shi-er/ http://7056824.blog.51cto.com/69854/276610\n","date":"2016-10-19","permalink":"https://sund.site/2016/10/python-fabric%E5%BA%93%E6%97%A0%E6%B3%95%E5%90%AF%E5%8A%A8%E5%90%8E%E5%8F%B0%E8%BF%9B%E7%A8%8B%E7%9A%84%E9%97%AE%E9%A2%98%E5%92%8C%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/","tags":["python"],"title":"Python Fabric库无法启动后台进程的问题和解决办法"},{"content":"在开发中经常需要用到计数器，当函数foo调用另一个函数bar时，为了确认调用bar之后处理的结果正确性，经常需要使用计数器来统计bar函数里处理成功了多少次。例如：\ndef foo(): success_num = bar() print success_num def bar(): n = 0 # 假设这个任务要迭代100次. count = 100 try: for i in count: # Do something. n += 1 except: pass finally: return n  但是，这里需要定义多个计数器变量来保存计数。每多一个bar函数就要多定义两次计数器。有没有类似C语言指针一样的方法，可以在foo中定义后直接传给bar，在bar里修改值呢。\n众所周知，Python的参数传值实际传的是变量的拷贝，但是对于像字典、列表等非基本数据结构，实际传给参数的是这个数据结构的指针地址，修改指针地址指向的实际值就可以在函数内外实现传递数据的效果了。那么利用这个特性，可以结合python标准库collections里的defaultdict结构来实现一个更方便的计数器：\nfrom collections import defaultdict def foo(): result = defaultdict(int) bar(result) print result def bar(result): count = 100 for i in count: try: # Do something. result['success'] += 1 except: result['fail'] += 1  这样，变量result就是存有正确计数和错误计数的字典。\n","date":"2016-10-11","permalink":"https://sund.site/2016/10/python-defaultdict%E7%BB%93%E6%9E%84%E4%BD%9C%E8%AE%A1%E6%95%B0%E5%99%A8%E7%9A%84%E7%94%A8%E6%B3%95/","tags":["python"],"title":"Python defaultdict结构作计数器的用法"},{"content":"我想很多时候我们下决心做一件事，都要征求周围人的建议。这些建议有好有坏。坏的建议不但帮不了你，还会歪曲你对事实的认识。最近我在研究系统学习英文的方法，偶然在豆瓣小站里看到了开头那段话，对此深表认同。以我个人健身的经历，在报名私教课之前也寻求过很多人的建议。大部分会告诉你，健身(减肥)最重要的就是坚持。他们还会煞有介事的告诉你要「管住嘴，迈开腿」。在这一年里，我减掉了大概25KG体重，最大的感受——如果没有教练指导，我自己是断然不会坚持下来的。大部分的建议都像开头引用的那段话一样，是假大空的虚话，废话。\n「任何一个通过自我磨练掌握了某一项具体技能或者在某领域内有一定造诣的人，都会对该领域有着起码的基本认知和独特的个人总结，如果你向其请教，得到的断然不会是“努力去做或者坚持最重要”之类的假大空的虚话」\n—— 豆瓣英语学习大神 恶魔奶爸Sam\n怎样征求有用的建议？结合我这些年减肥失败的教训，笼统的概括为：如果你要做一件长期投入的事儿，那么请咨询跟你情况类似，且做成了这件事的人。\n首先「情况类似」很重要。因为很多人是科班出身，比如健身教练，他们大部分从上学起就被动养成了科学饮食、运动的好习惯。这些习惯并不是主动思考之后产生的，所以这些人在传授你知识时往往模糊不清的告诉你应该如何做，却说不出所以然。再比如英语系的学生就很难告诉你行之有效的英语学习方法，他们会告诉你大量看美剧英剧，背单词。但是你根本没有他们的学习环境，几乎不可能坚持下来。在语言学习中有「可理解输入」的概念，简单解释就是——你必须接受那些「你能够理解」的知识，否则你就吸收不了(记不住)。同理，知识在灌输给我们时候，如果不解释清楚来由，我们就很难有深刻认识。所以征求建议的对象如果跟你情况类似，你往往能听到更加切实可行的建议，比如在某个阶段应该注意什么，可能片面，但是有效。比如我在健身初期，咨询同学大伟很多健身的入门知识，关于人体代谢率，关于自重训练。这些东西，科班出身的教练通常不会细致地讲解给我。\n其次「要征求做成了这件事的人」，这就是开头那段话的意义，那些没做成这件事儿的人，大都输在了「坚持」这两个字上。在把这一信息转告别人时，这些人就会主观放大坚持的重要性。你去征求这些自己都没成事儿的人建议，得到的都是些「管住嘴，迈开腿」，「坚持不懈」之类的屁话。我这一年锻炼和饮食的心得就是不断学习，反复修订计划和总结经验。另外还有一种傻逼理论「每个人都有各自的特点，要针对性制定计划，没有一种通用的解决办法」。倘若真是这样，还上学干什么？搞科研做什么？管理学、经济学都要歇菜了。别用个体差异给自己找借口了。\n我猜很多有主见，独立思考的人都会认同一句话。这句话是罗永浩在一次鲁豫有约采访时候说的——「我们周围大部分人都是笨蛋」。虽然老罗最近在做手机上栽了大跟头，但是大多数人一辈子连栽这样跟头的机会都没有就入土了。可是骂他的成千上万人里有多少是经历过这过程的呢？传播那些人云亦云的虚话，不过是懒于思考，不求上进的人找好的借口。他们自己做不到的，就理所当然认为你也做不到。抱着「周围大部分人都是笨蛋」的理念，积极地去跟「对的人」征求「有价值」的建议，我相信一定能有所收获。\n","date":"2016-08-25","permalink":"https://sund.site/2016/08/%E6%80%8E%E6%A0%B7%E7%9A%84%E5%BB%BA%E8%AE%AE%E6%89%8D%E6%9C%89%E4%BB%B7%E5%80%BC/","tags":["思维"],"title":"怎样的建议才有价值"},{"content":"原文地址： http://zookeeper.apache.org/doc/r3.4.6/zookeeperProgrammers.html\n本文假设你已经具有一定分布式计算的基础知识。你将在第一部分看到以下内容：\n ZooKeeper数据模型 ZooKeeper Sessions ZooKeeper Watches 一致性保证(Consistency Guarantees)  接下来的4小节讲述了程序开发的实际应用：\n 创建模块——ZooKeeper操作指引 编程语言接口 简单示例演示程序的结构 常见问题和故障  本文的附录中包含和ZooKeeper相关的有用信息。\nZooKeeper的数据模型 ZooKeeper有一个类似分布式文件系统的命名体系。区别在于Zookeeper每个一个节点或子节点都可以拥有数据。节点路径是一个由斜线分开的绝对路径，注意没有相对路径。只要满足下面要求的unicode字符都可以作为节点路径：\n 空字符不能出现在路径名 不能出现以下字符: \\u0001 - \\u0019 and \\u007F - \\u009F 以下字符不允许使用: \\ud800 -uF8FFF, \\uFFF0-uFFFF, \\uXFFFE - \\uXFFFF (where X is a digit 1 - E), \\uF0000 - \\uFFFFF 字符\u0026quot;.\u0026ldquo;可以作为一个名字的一部分, 但是\u0026rdquo;.\u0026ldquo;和\u0026rdquo;..\u0026ldquo;不能单独作为相对路径使用, 以下用法都是无效的: \u0026ldquo;/a/b/./c\u0026quot;或者\u0026rdquo;/a/b/../c\u0026rdquo; \u0026ldquo;zookeeper\u0026quot;为保留字符  ZNodes ZooKeeper树结构中的节点被称为znode。各个znode维护着一组用来标记数据和访问权限发生变化的版本号。这些版本号组成的状态结构具有时间戳。Zookeeper使用版本号和时间戳来验证缓存状态，调整更新。 每次znode中的数据发生变化，znode的版本号增加。例如，每当一个客户端恢复数据时，它就接收这个版本的数据，而当一个客户端提交了更新或删除记录，它必须同时提供这个znode当前正在发生变化的数据的版本。如果这个版本和目前真实的版本不匹配，则提交无效。 __提示，在分布式程序中，一个字节点可以代表一个通用的主机，服务器，集群中的一员，客户端程序等。但是在Zookeeper中，znode代表数据节点，Servers代表组成了Zookeeper服务的机器; quorum peers refer to the servers that make up an ensemble; 客户端代表任何使用ZooKeeper服务的主机或程序。\nznode作为对程序开发来说最重要的信息，有几个特性需要特别关注下：\nWatches 客户端可以在znode上设置Watch。znode发生的变化会触发watch然后清除watch。当一个watch被触发，Zookeeper给客户端发送一个通知。更多关于watch的内容请查看ZooKeeper Watches一节。\n数据存取 命名空间中每个znode中的数据读写是原子操作。读操作读取znode中的所有数据位，写操作则替换所有数据。每个节点都有一个访问权限控制表（ACL）来标记谁可以做什么。 zookeeper不是设计成普通的数据库或大型对象存储的。它是用来管理coordination data。coordination data包括配置文件、状态信息、rendezvous等。这些数据结构的一个共同特点就是相对较小——以千字节为准。Zookeeper的客户端和服务会检查确保每个znode上的数据小于1M，实际平均数据要远远小于1M。 大规模数据的操作会引发一些潜在的问题并且延长在网络和介质之间传输的时间。如果确实需要大型数据的存储，那么可以采用如NFS或HDFS之类的大型数据存储系统，亦或是在zookeeper中存储指向存储位置的指针。\n临时节点（Ephemeral Nodes） zookeeper还有临时节点的概念，这些节点的生命周期依赖于创建它们的session是否活跃。session结束时节点即被销毁。也由于这种特性，临时节点不允许有子节点。\n序列节点——命名不唯一 当你创建节点的时候，你会需要zookeeper提供一组单调递增的计数来作为路径结尾。这个计数对父znode是唯一的。用%010d的格式——用0来填充的10位数（计数如此命名是为了简单排序）。例如\u0026rdquo;0000000001\u0026quot;，注意计数器是有符号整型，超过表示范围会溢出。\nZooKeeper中的时间 zookeeper有很多记录时间的方式：\n Zxid(ZooKeeper Transaction Id)： zookeeper每次发生改动都会增加zxid，zxid越大，发生的时间越靠后。 Version numbers： 对znode的改动会增加版本号。版本号包括version (znode上数据的修改数), cversion (znode的子节点的修改数), aversion (znode上ACL（权限）的修改数)。 Ticks : 多个server构成zookeeper服务时，各个server用ticks来标记如状态上报、连接超时等事件。ticks time还间接反映了session超时的最小值（两次tick time）；如果客户端请求的最小session timeout低于这个最小值，服务端会通知客户端最小超时置为这个最小值。 Real time : 除了每次znode创建或改动时候将时间戳记录到状态结构中外，zookeeper不使用时钟时间。  ZooKeeper状态结构(Stat Structure) 存在于znode中的状态结构，由以下各个部分组成：\n czxid - znode创建产生的zxid mzxid - znode最后一次修改的zxid ctime - znode创建的时间的绝对毫秒数 mtime - znode最后一次修改的绝对毫秒数 version - znode上数据的修改数 cversion - 子节点修改数 aversion - znode的ACL修改数 ephemeralOwner - 临时节点的所有者的session id。如果此节点非临时节点，该值为0 dataLength - znode的数据长度 numChildren - znode子节点数  ZooKeeper Sessions 客户端通过创建一个handle和服务端建立session连接。一旦创建完成，handle就进入了CONNECTING状态，客户端库尝试连接一台构成zookeeper的server，届时进入CONNECTED状态。通常情况下操作会介于这两种状态之间。 一旦出现了不可恢复的错误：如session中止，鉴权失败或者应用直接结束handle，则handle会进入到CLOSED状态。下图是客户端的状态转换图：\n状态转换图\n应用在创建客户端session时必须提供一串逗号分隔的主机号:端口号，每对主机端口号对应一个ZooKeeper的server（如：\u0026ldquo;127.0.0.1:3000,127.0.0.1:3001,127.0.0.1:3002\u0026rdquo;），客户端库会尝试连接任意一台服务器，如果连接失败或是客户端主动断开连接，客户端会自动继续与下一台服务器连接，直到连接成功。\n3.2.0版本新增内容: 一个新的操作“chroot”可以添加在连接字符串的尾部，用来指明客户端命令运行的根目录地址。类似unix的chroot命令，例如： \u0026ldquo;127.0.0.1:4545/app/a\u0026rdquo; or \u0026ldquo;127.0.0.1:3000,127.0.0.1:3001,127.0.0.1:3002/app/a\u0026rdquo;，说明客户端会以\u0026quot;/app/a\u0026quot;为根目录，所有路径都相对于根目录来设置，如\u0026quot;/foo/bar\u0026quot;的操作会运行在\u0026quot;/app/a/foo/bar\u0026quot;。 这一特性在多用户环境下非常好用，每个使用zookeeper服务的用户可以设置不同的根目录。\n当客户端获得和zookeeper服务连接的handle时，zookeeper会创建一个Zookeeper session分配给客户端，用一个64-bit数字表示。一旦客户端连接了其他服务器，客户端必须把这个session id也作为连接握手的一部分发送。出于安全目的，zookeeper给session id创建一个密码，任何zookeeper服务器都可以验证密码。 当客户端创建session时密码和session id一起发送到客户端来，当客户端重新连接其他服务器时，同时要发送密码和session id。\nzookeeper客户端库里有一个创建zookeeper session的参数，叫做session timeout（超时），用毫秒表示。客户端发送请求超时，服务端在超时范围内响应客户端。session超时最小为2个ticktime，最大为20个ticktime。zookeeper客户端API可以协调超时时间。 当客户端和zookeeper服务器集群断开时，它会搜索session创建时的服务器列表。最后，当至少一个服务器和客户端重新建立连接，session或被重新置为\u0026quot;connected\u0026quot;状态（超时时间内重新连接），或被置为\u0026quot;expired（过期）\u0026ldquo;状态（超出超时时间）。不建议在断开连接后重新创建session。ZK客户端库会帮你重新连接。特别地，我们将启发式学习模式植入客户的库中来处理类似“羊群效应”等问题。只有当你的session过期时才重新创建（托管的）。 session过期的状态转换图示例同过期session的watcher：\n \u0026lsquo;connected\u0026rsquo; : session正确创建，客户端和服务集群正常连接 \u0026hellip;. 客户端从服务器集群断开 \u0026lsquo;disconnected\u0026rsquo; : 客户端失去和服务器集群的连接 \u0026hellip;. 过了一段时间, 超过了集群判定session过期的超时时间, 客户端并没有发觉自己和服务集群断开了连接 \u0026hellip;. 又过一段时间, 客户端恢复了同集群的网络连接 \u0026lsquo;expired\u0026rsquo; : 最终客户端重新连上集群，然后被通知已经到期  另一个session建立时zookeeper需要的参数是默认watcher（监视者）。在客户端发生任何变化时，watcher都会发出通知。例如客户端失去和服务器的连接、客户端session到期等。watcher默认的初始状态是disconnected。（也就是说任何状态改变事件都由客户端库发送到watcher）。当新建一个连接时，第一个发送给watcher的事件通常就是session连接事件。\n客户端发送请求会使session保持活动状态。客户端会发送ping包（译者注：心跳包）以保持session不会超时。Ping包不仅让服务端知道客户端仍然活动，而且让客户端也知道和服务端的连接没有中断。Ping包发送时间正好可以判断是否连接中断或是重新启动一个新的服务器连接。\n和服务器的连接建立成功，当一个同步或异步操作执行后，有两种情况会让客户端库判断失去连接：\n 应用在已经失效的session上请求了一个操作时 zookeeper服务器有一个等待中的操作时，客户端会从那台服务器断开连接。即服务器有等待的异步调用。  3.2.0版本新增内容 —— SessionMovedException 一个客户端无法查看的内部异常SessionMovedException。这个异常发生在服务端收到一个请求，这个请求的session已经在另一个服务器上重新连接。发生这种情况的原因通常是客户端发送完请求后，由于网络延时，客户端超时重新和其他服务器建立连接，当请求包到达第一台服务器时，服务器发现session已经移除并关闭了和客户端的连接。客户端一般不用理会这个问题，但是有一种情况值得注意，当两台客户端使用事先存储的session id和密码试图创建同一个连接时，第一台客户端重建连接，第二台则会被中断。\nZooKeeper Watches 所有zookeeper的读操作——getData(), getChildren(), exists()——都可以设置一个watch。Zookeeper的watch的定义是：watch事件是一次性触发的，发送到客户端的。在监视的数据发生变化时产生watch事件。以下三点是watch(事件)定义的关键点：\n 一次性触发: 当数据发生变化时，一个watch事件被发送给客户端。例如，如果一个客户端做了一次getData(\u0026quot;/znode1\u0026quot;, true)然后节点/znode1发生数据变化或删除，这个客户端将收到/znode1的watch事件。如果/znode1继续发生改变，不会再有watch发送，除非客户端又做了其他读操作产生了新的watch。 发送给客户端: 这就意味着，事件在发往客户端的过程中，可能无法在修改操作成功的返回值到达客户端之前到达客户端。watch是异步发送给watchers的。zookeeper提供一种保证顺序的方法：客户端在第一次看到某个watch事件之前不可能看到产生watch的修改的返回值。网络延时或其他因素可能导致不同客户端看到watch并返回不同时间更新的返回值。关键的一点是，不同的客户端看到发生的一切都必须是按照相同顺序的。 watch依附的数据: 这是说改变一个节点有不通方式。用好理解的话说，zookeeper维护两组watch：data watch和child watch。getData()和exists()产生data watch。getChildren()引起child watch。watch根据数据返回的种类不同而不同。getData()和exists()返回关于节点的数据信息，而getChildren()返回子节点列表。因此setData()触发某个znode的data watch（假设事件成功）。create()成功会触发被创建的znode上的data watch和在它父节点上的child watch。delete()成功会触发data watch和child watch（因为没有了子节点）。  watch在客户端已连接上的服务器里维护，这样可以保证watch轻量便于设置，维护和分发。当客户端连接了一台新的服务器，watch会在任何session事件时触发。当断开和服务器的连接时，watch不会触发。当客户端重新连接上时，任何之前注册过的watch都会重新注册并在需要的时候被触发。一般来说这一切都是透明的。只有一种可能会丢失watch：当一个znode在断开和服务器连接时被创建或删除，那么判断这个znode存在的watch因未创建而找不到。\nZooKeeper如何保证watch可靠性\nzookeeper有如下方式：\n watch与其他事件、watch、异步回复保持有序，Zookeeper客户端库确保任何分发都是有序的。 客户端会在某个监视的znode数据更新之前看到这个znode的watch事件。 watch事件的顺序由Zookeeper服务端观察到的更新顺序决定。  watch注意事项\n watch是一次性触发的；如果你收到watch事件后还想继续得到后续更改的通知，你需要再生成（设置）一个watch。 由于watch是一次性触发，你在获取某事件和发送新的请求来得到watch这个操作之间，无法确保观察到Zookeeper中那个节点在这期间的所有修改。你要准备好应付这种情况出现：znode会在收到事件和再次设置新事件（译者注：对节点的操作）之间发生了多次修改。（你可能并不关心，但是必须了解这可能发生） watch对象，或是function/context对，只会在得到通知时触发一次。例如，如果一个watch对象同时用来监控某个目标文件是否存在和监听getData()，之后那个文件被删除了。那么这个watch对象只会触发一次文件删除事件通知。 如果你断开了同服务器的连接（例如服务器挂了），你在重新连上之前得不到任何watch。出于这种原因，session event会被发送给所有重要的watch handler。可以使用session事件进入安全模式：当断开连接时你收不到任何事件，这样你的进程可以在那种模式下稳健地执行。(译者注：可以通过发送session event使客户端进入安全模式（伪断开连接状态），在安全模式你可以修改代码而不用担心程序收到事件通知)  使用ACL控制ZooKeeper访问权限 zookeeper使用ACL来控制对znode（zookeeper的数据节点）的访问权限。ACL的实现方式和unix的文件权限类似：用不同位来代表不同的操作限制和组限制。与标准unix权限不同的是，zookeeper的节点没有三种域——用户，组，其他。zookeeper里没有节点的所有者的概念。取而代之的是，一个由ACL指定的id集合和其相关联的权限。 注意，一个ACL只从属于一个特定的znode。对这个znode子节点也是无效的。例如，如果/app只有被ip172.16.16.1的读权限，/app/status有被所有人读的权限，那么/app/status可以被所有人读，ACL权限不具有递归性。 zookeeper支持插件式认证方式，id使用scheme:id的形式。scheme是id对应的类型方式，例如ip:172.16.16.1就是一个地址为172.16.16.1的主机id。 当客户端连接zookeeper并且认证自己，zookeeper就在这个与客户端的连接中关联所有与客户端一致的id。当客户端访问某个znode时，znode的ACL会重新检查这些id。ACL的表达式为(scheme:expression,perms)。expression就是特殊的scheme，例如，(ip:19.22.0.0/16, READ)就是把任何以19.22开头的ip地址的客户端赋予读权限。\nACL权限 ZooKeeper支持下列权限：\n CREATE：允许创建子节点 READ：允许获得节点数据并列出所有子节点 WRITE：允许设置节点上的数据 DELETE：允许删除子节点 ADMIN：允许设置权限  CREATE和DELETE操作是更细的粒度上的WRITE操作。有一种特殊的情况：\n 你想要A获得操作zookeeper上某个znode的权限，但是不可以对其子节点进行CREATE和DELETE。 只CREATE不DELETE：某个客户端在上一级目录上通过发送创建请求创建了一个zookeeper节点。你希望所有客户端都可以在这个节点上添加，但是只有创建者可以删除。（这就类似于文件的APPEND权限）  zookeeper没有文件所有者的概念，但有ADMIN权限。在某种意义上说，ADMIN权限指定了所谓的所有者。zookeeper虽然不支持查找权限（在目录上的执行权限虽然不能列出目录内容，却可以查找），但每个客户端都隐含着拥有查找权限。这样你可以查看节点状态，但仅此而已。（这有个问题，如果你在不存在的节点上调用了zoo_exists()，你将无权查看）\n内建ACL模式 ZooKeeper有下列内建模式：\n world 有独立id，anyone，代表任何用户。 auth 不使用任何id，代表任何已经认证过的用户 digest 之前使用了格式为username:pathasowrd的字符串来生成一个MD5哈希表作为ACL ID标识。在空文档中发送username:password来完成认证。现在的ACL表达式格式为username:base64, 用SHA1编码密码。 ip 用客户端的ip作为ACL ID标识。ACL表达式的格式为addr/bits，addr中最有效的位匹配上主机ip最有效的位。  ZooKeeper C client API 插件式ZooKeeper认证 zookeeper运行于复杂的环境下，有各种不同的认证方式。因此zookeeper拥有一套插件式的认证框架。内建认证scheme也是使用这套框架。 为了便于理解认证框架的工作方式，你首先要了解两种主要的认证操作。框架首先必须认证客户端。这步操作通常在客户端连接服务器的同时完成并且将从客户端发过来的（或从客户端收集来的）认证信息关联此次连接。认证框架的第二步操作是在ACL中寻找关联的客户端的条目。ACL条目是\u0026lt;idspec, permissions\u0026gt;格式。idspec可能是一个关联了连接的，和认证信息匹配的简单字符串，也可能是评估认证信息的表达式。这取决于认证插件如何实现匹配。下面是一个认证插件必须实现的接口：\npublic interface AuthenticationProvider { String getScheme(); KeeperException.Code handleAuthentication(ServerCnxn cnxn, byte authData[]); boolean isValid(String id); boolean matches(String id, String aclExpr); boolean isAuthenticated(); }  第一个方法getScheme返回一个标识该插件的字符串。由于我们支持多种认证方式，认证证书或者idspec必须一直加上scheme:作为前缀。zookeeper服务器使用认证插件返回的scheme判断哪个id适用于该scheme。 当客户端发送与连接关联的认证信息时，handleAuthentication被调用。客户端指定和认证信息相应的模式。zookeeper把信息传给认证插件，认证插件的getScheme匹配scheme。实现handleAuthentication的方法通常在判断信息错误后返回一个error，或者在确认连接后使用cnxn.getAuthInfo().add(new Id(getScheme(), data))\n认证插件在设置和ACL中都有涉及。当对某个节点设置ACL时，zookeeper服务器会传那个条目的id给isValid(String id)方法。插件需要判断id的连接来源。例如，ip:172.16.0.0/16是有效id，ip:host.com是无效id。如果新的ACL包括一个\u0026quot;auth\u0026quot;条目，就用isAuthenticated判断该scheme的认证信息是否关联了连接，是否可以被添加到ACL中。一些scheme不会被包含到auth中。例如，如果auth已经指定，客户端的ip地址就不作为id添加到ACL中。 在检查ACL时zookeeper有一个matches(String id, String aclExpr)方法。ACL的条目需要和认证信息相匹配。为了找到和客户端对应的条目，zookeeper服务器寻找每个条目的scheme，如果对某个scheme有那个客户端的认证信息，matches(String id, String aclExpr)会被调用并传入两个值，分别是事先由handleAuthentication 加入连接信息中认证信息的id，和设置到ACL条目id的aclExpr。认证插件用自己的逻辑匹配scheme来判断id是否在aclExpr中。\n有两个内置认证插件：ip和digest。附加插件可以使用系统属性添加。在zookeeper启动过程中，会扫描所有以\u0026quot;zookeeper.authProvider\u0026quot;开头的系统属性。并且把那些属性值解释为认证插件的类名。这些属性可以使用-Dzookeeeper.authProvider.X=com.f.MyAuth或在服务器设置文件中添加条目来创建：\nauthProvider.1=com.f.MyAuth authProvider.2=com.f.MyAuth2  注意属性的后缀是唯一的。如果出现重复的情况-Dzookeeeper.authProvider.X=com.f.MyAuth -Dzookeeper.authProvider.X=com.f.MyAuth2，只有一个会被使用。同样，所有服务器都必须统一插件定义，否则客户端用插件提供的认证schemes连接服务器时会出错。\n一致性保证 ZooKeeper是一个高性能，可扩展的服务。读和写操作都非常快速。之所以如此，全因为zookeeper有数据一致性的保证：\n顺序一致性 客户端的更新会按照它们发送的次序排序。\n原子性 更新的失败或成功，都不会出现半个结果。\n单独系统镜像 不管客户端连哪个服务器，它看来都是同一个。\n可靠性 一旦更新生效，它就会一直保存到下一次客户端更新。这就有两个推论：\n 如果客户端得到成功的返回值，说明更新生效了。在一些错误情况下（连接错误，超时等）客户端不会知道更新是否生效。虽然我们使失败的几率最小化，但是也只能保证成功的返回值情况。（这就叫Paxos算法的单调性条件） 客户端能看到的更新，即使是渡请求或成功更新，在服务器失败时也不会回滚。  时效性 客户端看到的系统状态在某个时间范围内是最新的（几十秒内），任何系统更改都会在该时间范围内被客户端发现。否则客户端会检测到断开服务。\n用这些一致性保证可以在客户端中构造出更高级的程序如 leader election, barriers, queues, read/write revocable locks(无须在zookeeper中附加任何东西)。更多信息Recipes and Solutions\n zookeeper不存在的一致性保证： 多客户端同一时刻看到的内容相同 zookeeper不可能保证两台客户端在同一时间看到的内容总是一样，由于网络延迟等原因。假设这样一个场景，A和B是两个客户端，A设置节点/a下的值从0变为1，然后让B读/a，B可能读到旧的数据0。如果想让A和B读到同样的内容，B必须在读之前调用zookeeper接口中的sync()方法。\n 编程接口 常见问题和故障 下面是一些常见的陷阱：\n 如果你使用watch，你必须监控好已经连接的watch事件。当ZooKeeper客户端断开和服务器的连接，直到重新连接上这段时间你都收不到任何通知。如果你正在监视znode是否存在，那么你在断开连接期间收不到它创建和销毁的通知。 你必须测试ZooKeeper故障的情况。在大多数服务器都可用的情况下，ZooKeeper是可以维持工作的。关键问题是你的客户端程序是否能察觉到。在实际情况下，客户端与ZooKeeper的连接有可能中断（多数时候是因为Zookeeper故障或网络中断）。Zookeeper的客户端库关注于如何让你重新连接并且知道发生了什么。但是同时你也必须确保能够恢复你的状态和发送失败的请求。努力在测试库里测出这些问题，而不是在产品里——用几台服务器组成的zookeeper集群测试这个问题，尝试让它们重启。 客户端维护的服务器列表必须和现有的服务器列表一致。如果客户端的列表是现有服务器列表的子集，还可以在非最佳状态工作，但是如果客户端列表里的服务器不在现有集群里你就悲剧了。 注意存放事务日志的位置。性能评测最重要的部分就是日志，ZooKeeper会在回复响应之前先把日志同步到磁盘上。为了达到最佳性能，首选专用的磁盘来存日志。把日志放在繁忙的磁盘上会降低效率。如果你只有一个磁盘，就把记录文件放在NFS上然后增加SnapshotCount。这样虽然无法完全解决问题，但能缓解一些。 正确地设置你java的堆空间大小。这是避免频繁交换的有效措施。无用的访问磁盘会让你的效率大打折扣。记住，在ZooKeeper中，一切都是有序的，如果一个服务器访问了磁盘，所有的服务器都会同步这个操作。  其他资料链接请自行官网查看。\n","date":"2014-10-14","permalink":"https://sund.site/2014/10/zookeeper-%E5%B8%AE%E5%8A%A9%E6%89%8B%E5%86%8C/","tags":["zookeeper"],"title":"ZooKeeper 帮助手册"},{"content":"注意，ubuntu和xubuntu安装上有一定差别，请严格按照你选择的系统版本流程安装\nubuntu 准备工作 分区 这一步可以用命令行实现，也可以在mac下直接用磁盘工具分区，初学者建议后者。有经验的朋友可以在网上查询diskutils的用法，这是mac提供的分区工具\n使用磁盘工具，打开左侧最上边磁盘位置（不是macosx，而是整个硬盘）的选项，右边会出现分区标签。选择分区，你可以用鼠标拖动轻松将macos的一部分划分给ubuntu使用。分区格式可以选择mac日志文件。其实选什么都一样，等会还要重新格式化。\n把iso镜像转化为苹果电脑识别的img镜像 hdiutil convert /path/to/ubuntu.iso -format UDRW -o /path/to/target.img  命令中path/to/ubuntu.iso是你下载的iso路径，path/to/target.img自然是你要保存成img的路径\n插入U盘，刻录镜像 先运行如下命令查询你U盘的设备名\ndiskutil list  这里假设U盘是disk1，执行\ndiskutil unmountDisk /dev/disk1  接下来执行命令刻录，\nsudo dd if=/path/to/downloaded.img of=/dev/disk1 bs=1m  ubuntu官网针对上一条命令可能出现的两种错误提示给出了解决办法：\n  If you see the error dd: Invalid number \u0026lsquo;1m\u0026rsquo;, you are using GNU dd. Use the same command but replace bs=1m with bs=1M.\n  If you see the error dd: /dev/disk1: Resource busy, make sure the disk is not in use. Start the \u0026lsquo;Disk Utility.app\u0026rsquo; and unmount (don\u0026rsquo;t eject) the drive.\n  好了，刻完就可以重启安装了。重启后按住option会看到一个refit命名的移动设备图标，点进去就开始安装了。\n安装过程 安装过程可以参考网上其他人的帖子。一般有两种方式\n 选择ubuntu和mac os x共存，系统会自动被安装到空闲分区。 选择其他选项，可以自己手动分区，我一般是选这个来手动分区。  假设你选了其他选项就会进入分区的窗口，这时你就会看到所有磁盘分区的情况，刚才在mac下给ubuntu预先分好一块空闲分区也在其中，名字可能叫disk02，或者disk03什么的。 接下来要进行四次分区。这一段分区方法参考了百度经验上一个网友的教程，我进行了2处修改，原帖地址http://jingyan.baidu.com/article/60ccbceb18624464cab197ea.html\n第一次分区：\n点你刚才留出来的“空闲”分区，点“+”，进行如下设置： 挂载点：“/” 大小：22000MB 新分区的类型：主分区 新分区的位置：空间起始位置 用于：EXT4日志文件系统  第二次分区：\n“空闲”处，继续点“+”，如下设置， 挂载点：（不设置） 大小：4096MB 新分区的类型：逻辑分区 新分区的位置：空间起始位置 用于：交换空间  第三次分区：\n“空闲”处，继续点“+”，如下设置， 挂载点：/boot 大小：200MB 新分区的类型：逻辑分区 新分区的位置：空间起始位置 用于：EXT4日志文件系统  第四次分区：\n“空闲”处，继续点“+”，如下设置， 挂载点：/home 大小：（剩余全部空间，剩下显示多少，就多少） 新分区的类型：逻辑分区 新分区的位置：空间起始位置 用于：EXT4日志文件系统  分区设置完毕后，下方还有一项“安装启动引导器的设备”，macbookpro用户需要选择/boot这个分区所在磁盘位置。\n开机引导程序rEFIT 安装完ubuntu，重启在mac下下载安装rEFIt。安装好后在终端里输入/efi/refit/. enable-always.sh启动rEFIt。重启，你就会看到ubuntu的选项。\nXubuntu(估计Lubuntu和Kubuntu也应该适用，仅是猜想。) 准备工作 如何刻录镜像到移动设备 这个问题很重要，如果你下载了iso格式的Xubuntu系统镜像， 你需要将该镜像不经过任何转换的完整刻录到移动设备或光盘上 （我使用的是unetbootin 这个软件，开源，跨平台，操作简便）。 注意，绝对不可以将iso格式转换成img（mac镜像）后刻录。 这样会导致ubuntu部分版本无法安装grub引导器。\n开机引导程序rEFIt 安装完的系统无法被mac直接引导，所以需要安装rEFIt引导。如果不想要安装它， 可以参考下边附录1里的安装方法。重新修改引导文件。\n安装过程  在官网下载xubuntu镜像，使用uneetbootin刻录到设备 上(mac版的unetbootin貌似刻录iso有问题，可以在windows上下载该软件使用)。 重启，开机界面按住option键，有个windows命名的移动设备图标，选中进入。 安装过程不敷述, 装后重启 从mac进入，安装rEFIt，在shell里运行/efi/refit/. enable-always.sh启动rEFIt 重启，出现两个图标，苹果代表mac，企鹅代表linux。至此，完成安装过程。  ubuntu或Xubuntu安装后的一些配置 打开系统配置文件，\nsudo gedit /etc/rc.local  在exit 0 前边加入下边对应的语句, 默认关闭功能键Fn:\necho 2 \u0026gt; /sys/module/hid_apple/parameters/fnmode  设置默认亮度(数字2565可以修改任意亮度)（xubuntu下不起作用，原因未知）\necho 2565 \u0026gt; /sys/class/backlight/intel_backlight/brightness  设置键盘灯亮度（数字1代表亮度):\necho 1 \u0026gt; /sys/class/leds/smc::kbd_backlight/brightness  附录1 https://help.ubuntu.com/community/MacBookPro11-1/Saucy\n","date":"2013-01-04","permalink":"https://sund.site/2013/01/macbook%E5%AE%89%E8%A3%85ubuntu/","tags":["Mac","Linux"],"title":"macbook安装ubuntu"}]