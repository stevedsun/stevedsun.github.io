<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>audit on 電波障害</title><link>https://sund.site/tags/audit/</link><description>Recent content in audit on 電波障害</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>Copyright © 2024, Steve Sun; all rights reserved.</copyright><lastBuildDate>Mon, 15 Apr 2024 16:44:40 +0800</lastBuildDate><atom:link href="https://sund.site/tags/audit/index.xml" rel="self" type="application/rss+xml"/><item><title>如何设计一个符合工业标准的审计系统</title><link>https://sund.site/posts/2024/audit-system-design/</link><pubDate>Mon, 15 Apr 2024 16:44:40 +0800</pubDate><guid>https://sund.site/posts/2024/audit-system-design/</guid><description>审计追踪（Audit Trail）是指一个系统中用于记录用户行为日志、控制组件的活动日志等关键安全信息的服务。日志通常以时间顺序排列，记录了“谁在什么时间做了什么”。
下面是 kubernetes 官方文档对其审计服务的描述：
Kubernetes 审计（Auditing） 功能提供了与安全相关的、按时间顺序排列的记录集，记录每个用户、使用 Kubernetes API 的应用以及控制面自身引发的活动。
审计功能使得集群管理员能够回答以下问题：
发生了什么？ 什么时候发生的？ 谁触发的？ 活动发生在哪个（些）对象上？ 在哪观察到的？ 它从哪触发的？ 活动的后续处理行为是什么？ 审计系统应该具备哪些能力？ 日志内容不可篡改。 日志链结构完整：不可任意添加或删除单独的日志条目。 兼容性：发送日志的客户端应该避免侵入式设计。 系统的加密服务应该尽早初始化，以减少未受保护的日志。 服务重启/关闭不应导致审核日志不一致。如果服务因紧急情况而关闭，审计日志应该是可验证的。 密钥安全性：加密密钥（用于计算完整性检查）应存储在专用密钥存储中，并在内存中驻留最短的时间。 性能：能够在几秒钟内验证受保护日志。 日志轮换友好性：审核日志应与分布式系统典型的日志轮换策略兼容。 可观测性：日志易于被解析（machine-readable）、人类可读（human-readable）。兼容主流日志处理程序的格式，维度设计便于日后做过滤筛选。 涉及的行业标准 与审计相关的，常见的工业标准有 IEC62443、NIST SP 800-92。下面是 IEC 中涉及到审计相关的章节。
工业标准 章节 安全级别 IEC 62443-4-2:2019 CR2.8 SL-C 1 IEC 62443-4-2:2019 CR6.1 SL-C 1 IEC 62443-4-2:2019 CR6.2 SL_C 2 IEC 62443-4-2:2019 CR1.13 SL_C 1 IEC 62443-4-2:2019 CR2.9 SL_C 1 IEC 62443-4-2:2019 CR2.10 SL_C 1 IEC 62443-4-2:2019 CR3.</description></item></channel></rss>