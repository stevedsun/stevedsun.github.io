<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>fluentbit on 電波障害</title><link>https://sund.site/tags/fluentbit/</link><description>Recent content in fluentbit on 電波障害</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sun, 08 May 2022 14:00:00 +0800</lastBuildDate><atom:link href="https://sund.site/tags/fluentbit/index.xml" rel="self" type="application/rss+xml"/><item><title>How to write a special format configuration file parser</title><link>https://sund.site/posts/2022-5-8_lexer_design/</link><pubDate>Sun, 08 May 2022 14:00:00 +0800</pubDate><guid>https://sund.site/posts/2022-5-8_lexer_design/</guid><description>Last week, I read this article - How to Write a Lexer in Go, I found that it is not so difficult to design a configuration file parser by this article&amp;rsquo;s mind-set. Then I try to write a fluent-bit configuration parser and got this Fluent-Bit configuration parser for Golang.
In this article, I want to introduce how to parse Fluent-bit configuration .conf file, and the thinking behind it is suitable for any other format file.
Fluent-bit configuration format and schema [FIRST_SECTION] Key1 some value Key2 another value [SECOND_SECTION] KeyN 3.14 Here is a classic mode configuration of Fluent-bit, it includes two key parts:</description></item></channel></rss>